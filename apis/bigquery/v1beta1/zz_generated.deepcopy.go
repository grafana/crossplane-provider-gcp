//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessDatasetObservation) DeepCopyInto(out *AccessDatasetObservation) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetDatasetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessDatasetObservation.
func (in *AccessDatasetObservation) DeepCopy() *AccessDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(AccessDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessDatasetParameters) DeepCopyInto(out *AccessDatasetParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]DatasetDatasetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetTypes != nil {
		in, out := &in.TargetTypes, &out.TargetTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessDatasetParameters.
func (in *AccessDatasetParameters) DeepCopy() *AccessDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(AccessDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessObservation) DeepCopyInto(out *AccessObservation) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]AccessDatasetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = make([]RoutineObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]ViewObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessObservation.
func (in *AccessObservation) DeepCopy() *AccessObservation {
	if in == nil {
		return nil
	}
	out := new(AccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessParameters) DeepCopyInto(out *AccessParameters) {
	*out = *in
	if in.Dataset != nil {
		in, out := &in.Dataset, &out.Dataset
		*out = make([]AccessDatasetParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.GroupByEmail != nil {
		in, out := &in.GroupByEmail, &out.GroupByEmail
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.Routine != nil {
		in, out := &in.Routine, &out.Routine
		*out = make([]RoutineParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpecialGroup != nil {
		in, out := &in.SpecialGroup, &out.SpecialGroup
		*out = new(string)
		**out = **in
	}
	if in.UserByEmail != nil {
		in, out := &in.UserByEmail, &out.UserByEmail
		*out = new(string)
		**out = **in
	}
	if in.UserByEmailRef != nil {
		in, out := &in.UserByEmailRef, &out.UserByEmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.UserByEmailSelector != nil {
		in, out := &in.UserByEmailSelector, &out.UserByEmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]ViewParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessParameters.
func (in *AccessParameters) DeepCopy() *AccessParameters {
	if in == nil {
		return nil
	}
	out := new(AccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroOptionsObservation) DeepCopyInto(out *AvroOptionsObservation) {
	*out = *in
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroOptionsObservation.
func (in *AvroOptionsObservation) DeepCopy() *AvroOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AvroOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvroOptionsParameters) DeepCopyInto(out *AvroOptionsParameters) {
	*out = *in
	if in.UseAvroLogicalTypes != nil {
		in, out := &in.UseAvroLogicalTypes, &out.UseAvroLogicalTypes
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvroOptionsParameters.
func (in *AvroOptionsParameters) DeepCopy() *AvroOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AvroOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptionsObservation) DeepCopyInto(out *CsvOptionsObservation) {
	*out = *in
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptionsObservation.
func (in *CsvOptionsObservation) DeepCopy() *CsvOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(CsvOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CsvOptionsParameters) DeepCopyInto(out *CsvOptionsParameters) {
	*out = *in
	if in.AllowJaggedRows != nil {
		in, out := &in.AllowJaggedRows, &out.AllowJaggedRows
		*out = new(bool)
		**out = **in
	}
	if in.AllowQuotedNewlines != nil {
		in, out := &in.AllowQuotedNewlines, &out.AllowQuotedNewlines
		*out = new(bool)
		**out = **in
	}
	if in.Encoding != nil {
		in, out := &in.Encoding, &out.Encoding
		*out = new(string)
		**out = **in
	}
	if in.FieldDelimiter != nil {
		in, out := &in.FieldDelimiter, &out.FieldDelimiter
		*out = new(string)
		**out = **in
	}
	if in.Quote != nil {
		in, out := &in.Quote, &out.Quote
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CsvOptionsParameters.
func (in *CsvOptionsParameters) DeepCopy() *CsvOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(CsvOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Dataset) DeepCopyInto(out *Dataset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Dataset.
func (in *Dataset) DeepCopy() *Dataset {
	if in == nil {
		return nil
	}
	out := new(Dataset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Dataset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetDatasetObservation) DeepCopyInto(out *DatasetDatasetObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetDatasetObservation.
func (in *DatasetDatasetObservation) DeepCopy() *DatasetDatasetObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetDatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetDatasetParameters) DeepCopyInto(out *DatasetDatasetParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetDatasetParameters.
func (in *DatasetDatasetParameters) DeepCopy() *DatasetDatasetParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetDatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetList) DeepCopyInto(out *DatasetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Dataset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetList.
func (in *DatasetList) DeepCopy() *DatasetList {
	if in == nil {
		return nil
	}
	out := new(DatasetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetObservation) DeepCopyInto(out *DatasetObservation) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]AccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.DefaultEncryptionConfiguration != nil {
		in, out := &in.DefaultEncryptionConfiguration, &out.DefaultEncryptionConfiguration
		*out = make([]DefaultEncryptionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPartitionExpirationMs != nil {
		in, out := &in.DefaultPartitionExpirationMs, &out.DefaultPartitionExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTableExpirationMs != nil {
		in, out := &in.DefaultTableExpirationMs, &out.DefaultTableExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DeleteContentsOnDestroy != nil {
		in, out := &in.DeleteContentsOnDestroy, &out.DeleteContentsOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxTimeTravelHours != nil {
		in, out := &in.MaxTimeTravelHours, &out.MaxTimeTravelHours
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetObservation.
func (in *DatasetObservation) DeepCopy() *DatasetObservation {
	if in == nil {
		return nil
	}
	out := new(DatasetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetParameters) DeepCopyInto(out *DatasetParameters) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]AccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultEncryptionConfiguration != nil {
		in, out := &in.DefaultEncryptionConfiguration, &out.DefaultEncryptionConfiguration
		*out = make([]DefaultEncryptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultPartitionExpirationMs != nil {
		in, out := &in.DefaultPartitionExpirationMs, &out.DefaultPartitionExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTableExpirationMs != nil {
		in, out := &in.DefaultTableExpirationMs, &out.DefaultTableExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.DeleteContentsOnDestroy != nil {
		in, out := &in.DeleteContentsOnDestroy, &out.DeleteContentsOnDestroy
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxTimeTravelHours != nil {
		in, out := &in.MaxTimeTravelHours, &out.MaxTimeTravelHours
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetParameters.
func (in *DatasetParameters) DeepCopy() *DatasetParameters {
	if in == nil {
		return nil
	}
	out := new(DatasetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetSpec) DeepCopyInto(out *DatasetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetSpec.
func (in *DatasetSpec) DeepCopy() *DatasetSpec {
	if in == nil {
		return nil
	}
	out := new(DatasetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasetStatus) DeepCopyInto(out *DatasetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasetStatus.
func (in *DatasetStatus) DeepCopy() *DatasetStatus {
	if in == nil {
		return nil
	}
	out := new(DatasetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultEncryptionConfigurationObservation) DeepCopyInto(out *DefaultEncryptionConfigurationObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultEncryptionConfigurationObservation.
func (in *DefaultEncryptionConfigurationObservation) DeepCopy() *DefaultEncryptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultEncryptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultEncryptionConfigurationParameters) DeepCopyInto(out *DefaultEncryptionConfigurationParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultEncryptionConfigurationParameters.
func (in *DefaultEncryptionConfigurationParameters) DeepCopy() *DefaultEncryptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultEncryptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigurationObservation) DeepCopyInto(out *EncryptionConfigurationObservation) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyVersion != nil {
		in, out := &in.KMSKeyVersion, &out.KMSKeyVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigurationObservation.
func (in *EncryptionConfigurationObservation) DeepCopy() *EncryptionConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionConfigurationParameters) DeepCopyInto(out *EncryptionConfigurationParameters) {
	*out = *in
	if in.KMSKeyName != nil {
		in, out := &in.KMSKeyName, &out.KMSKeyName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionConfigurationParameters.
func (in *EncryptionConfigurationParameters) DeepCopy() *EncryptionConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfigurationObservation) DeepCopyInto(out *ExternalDataConfigurationObservation) {
	*out = *in
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.AvroOptions != nil {
		in, out := &in.AvroOptions, &out.AvroOptions
		*out = make([]AvroOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = make([]CsvOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleSheetsOptions != nil {
		in, out := &in.GoogleSheetsOptions, &out.GoogleSheetsOptions
		*out = make([]GoogleSheetsOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HivePartitioningOptions != nil {
		in, out := &in.HivePartitioningOptions, &out.HivePartitioningOptions
		*out = make([]HivePartitioningOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(float64)
		**out = **in
	}
	if in.ReferenceFileSchemaURI != nil {
		in, out := &in.ReferenceFileSchemaURI, &out.ReferenceFileSchemaURI
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfigurationObservation.
func (in *ExternalDataConfigurationObservation) DeepCopy() *ExternalDataConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDataConfigurationParameters) DeepCopyInto(out *ExternalDataConfigurationParameters) {
	*out = *in
	if in.Autodetect != nil {
		in, out := &in.Autodetect, &out.Autodetect
		*out = new(bool)
		**out = **in
	}
	if in.AvroOptions != nil {
		in, out := &in.AvroOptions, &out.AvroOptions
		*out = make([]AvroOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Compression != nil {
		in, out := &in.Compression, &out.Compression
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.CsvOptions != nil {
		in, out := &in.CsvOptions, &out.CsvOptions
		*out = make([]CsvOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GoogleSheetsOptions != nil {
		in, out := &in.GoogleSheetsOptions, &out.GoogleSheetsOptions
		*out = make([]GoogleSheetsOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HivePartitioningOptions != nil {
		in, out := &in.HivePartitioningOptions, &out.HivePartitioningOptions
		*out = make([]HivePartitioningOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreUnknownValues != nil {
		in, out := &in.IgnoreUnknownValues, &out.IgnoreUnknownValues
		*out = new(bool)
		**out = **in
	}
	if in.MaxBadRecords != nil {
		in, out := &in.MaxBadRecords, &out.MaxBadRecords
		*out = new(float64)
		**out = **in
	}
	if in.ReferenceFileSchemaURI != nil {
		in, out := &in.ReferenceFileSchemaURI, &out.ReferenceFileSchemaURI
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SourceFormat != nil {
		in, out := &in.SourceFormat, &out.SourceFormat
		*out = new(string)
		**out = **in
	}
	if in.SourceUris != nil {
		in, out := &in.SourceUris, &out.SourceUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDataConfigurationParameters.
func (in *ExternalDataConfigurationParameters) DeepCopy() *ExternalDataConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ExternalDataConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleSheetsOptionsObservation) DeepCopyInto(out *GoogleSheetsOptionsObservation) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleSheetsOptionsObservation.
func (in *GoogleSheetsOptionsObservation) DeepCopy() *GoogleSheetsOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(GoogleSheetsOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleSheetsOptionsParameters) DeepCopyInto(out *GoogleSheetsOptionsParameters) {
	*out = *in
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = new(string)
		**out = **in
	}
	if in.SkipLeadingRows != nil {
		in, out := &in.SkipLeadingRows, &out.SkipLeadingRows
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleSheetsOptionsParameters.
func (in *GoogleSheetsOptionsParameters) DeepCopy() *GoogleSheetsOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(GoogleSheetsOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HivePartitioningOptionsObservation) DeepCopyInto(out *HivePartitioningOptionsObservation) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.SourceURIPrefix != nil {
		in, out := &in.SourceURIPrefix, &out.SourceURIPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HivePartitioningOptionsObservation.
func (in *HivePartitioningOptionsObservation) DeepCopy() *HivePartitioningOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(HivePartitioningOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HivePartitioningOptionsParameters) DeepCopyInto(out *HivePartitioningOptionsParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.SourceURIPrefix != nil {
		in, out := &in.SourceURIPrefix, &out.SourceURIPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HivePartitioningOptionsParameters.
func (in *HivePartitioningOptionsParameters) DeepCopy() *HivePartitioningOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(HivePartitioningOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaterializedViewObservation) DeepCopyInto(out *MaterializedViewObservation) {
	*out = *in
	if in.EnableRefresh != nil {
		in, out := &in.EnableRefresh, &out.EnableRefresh
		*out = new(bool)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RefreshIntervalMs != nil {
		in, out := &in.RefreshIntervalMs, &out.RefreshIntervalMs
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaterializedViewObservation.
func (in *MaterializedViewObservation) DeepCopy() *MaterializedViewObservation {
	if in == nil {
		return nil
	}
	out := new(MaterializedViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaterializedViewParameters) DeepCopyInto(out *MaterializedViewParameters) {
	*out = *in
	if in.EnableRefresh != nil {
		in, out := &in.EnableRefresh, &out.EnableRefresh
		*out = new(bool)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RefreshIntervalMs != nil {
		in, out := &in.RefreshIntervalMs, &out.RefreshIntervalMs
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaterializedViewParameters.
func (in *MaterializedViewParameters) DeepCopy() *MaterializedViewParameters {
	if in == nil {
		return nil
	}
	out := new(MaterializedViewParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeObservation) DeepCopyInto(out *RangeObservation) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeObservation.
func (in *RangeObservation) DeepCopy() *RangeObservation {
	if in == nil {
		return nil
	}
	out := new(RangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeParameters) DeepCopyInto(out *RangeParameters) {
	*out = *in
	if in.End != nil {
		in, out := &in.End, &out.End
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Start != nil {
		in, out := &in.Start, &out.Start
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeParameters.
func (in *RangeParameters) DeepCopy() *RangeParameters {
	if in == nil {
		return nil
	}
	out := new(RangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangePartitioningObservation) DeepCopyInto(out *RangePartitioningObservation) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangePartitioningObservation.
func (in *RangePartitioningObservation) DeepCopy() *RangePartitioningObservation {
	if in == nil {
		return nil
	}
	out := new(RangePartitioningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangePartitioningParameters) DeepCopyInto(out *RangePartitioningParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.Range != nil {
		in, out := &in.Range, &out.Range
		*out = make([]RangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangePartitioningParameters.
func (in *RangePartitioningParameters) DeepCopy() *RangePartitioningParameters {
	if in == nil {
		return nil
	}
	out := new(RangePartitioningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineObservation) DeepCopyInto(out *RoutineObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RoutineID != nil {
		in, out := &in.RoutineID, &out.RoutineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineObservation.
func (in *RoutineObservation) DeepCopy() *RoutineObservation {
	if in == nil {
		return nil
	}
	out := new(RoutineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RoutineParameters) DeepCopyInto(out *RoutineParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RoutineID != nil {
		in, out := &in.RoutineID, &out.RoutineID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RoutineParameters.
func (in *RoutineParameters) DeepCopy() *RoutineParameters {
	if in == nil {
		return nil
	}
	out := new(RoutineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Table) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableList) DeepCopyInto(out *TableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Table, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableList.
func (in *TableList) DeepCopy() *TableList {
	if in == nil {
		return nil
	}
	out := new(TableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableObservation) DeepCopyInto(out *TableObservation) {
	*out = *in
	if in.Clustering != nil {
		in, out := &in.Clustering, &out.Clustering
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreationTime != nil {
		in, out := &in.CreationTime, &out.CreationTime
		*out = new(float64)
		**out = **in
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = make([]EncryptionConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExternalDataConfiguration != nil {
		in, out := &in.ExternalDataConfiguration, &out.ExternalDataConfiguration
		*out = make([]ExternalDataConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LastModifiedTime != nil {
		in, out := &in.LastModifiedTime, &out.LastModifiedTime
		*out = new(float64)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = make([]MaterializedViewObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NumBytes != nil {
		in, out := &in.NumBytes, &out.NumBytes
		*out = new(float64)
		**out = **in
	}
	if in.NumLongTermBytes != nil {
		in, out := &in.NumLongTermBytes, &out.NumLongTermBytes
		*out = new(float64)
		**out = **in
	}
	if in.NumRows != nil {
		in, out := &in.NumRows, &out.NumRows
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RangePartitioning != nil {
		in, out := &in.RangePartitioning, &out.RangePartitioning
		*out = make([]RangePartitioningObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = make([]TimePartitioningObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]TableViewObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableObservation.
func (in *TableObservation) DeepCopy() *TableObservation {
	if in == nil {
		return nil
	}
	out := new(TableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableParameters) DeepCopyInto(out *TableParameters) {
	*out = *in
	if in.Clustering != nil {
		in, out := &in.Clustering, &out.Clustering
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.DatasetIDRef != nil {
		in, out := &in.DatasetIDRef, &out.DatasetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatasetIDSelector != nil {
		in, out := &in.DatasetIDSelector, &out.DatasetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EncryptionConfiguration != nil {
		in, out := &in.EncryptionConfiguration, &out.EncryptionConfiguration
		*out = make([]EncryptionConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(float64)
		**out = **in
	}
	if in.ExternalDataConfiguration != nil {
		in, out := &in.ExternalDataConfiguration, &out.ExternalDataConfiguration
		*out = make([]ExternalDataConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MaterializedView != nil {
		in, out := &in.MaterializedView, &out.MaterializedView
		*out = make([]MaterializedViewParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RangePartitioning != nil {
		in, out := &in.RangePartitioning, &out.RangePartitioning
		*out = make([]RangePartitioningParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
	if in.TimePartitioning != nil {
		in, out := &in.TimePartitioning, &out.TimePartitioning
		*out = make([]TimePartitioningParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.View != nil {
		in, out := &in.View, &out.View
		*out = make([]TableViewParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableParameters.
func (in *TableParameters) DeepCopy() *TableParameters {
	if in == nil {
		return nil
	}
	out := new(TableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableSpec) DeepCopyInto(out *TableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableSpec.
func (in *TableSpec) DeepCopy() *TableSpec {
	if in == nil {
		return nil
	}
	out := new(TableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableStatus) DeepCopyInto(out *TableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableStatus.
func (in *TableStatus) DeepCopy() *TableStatus {
	if in == nil {
		return nil
	}
	out := new(TableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableViewObservation) DeepCopyInto(out *TableViewObservation) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.UseLegacySQL != nil {
		in, out := &in.UseLegacySQL, &out.UseLegacySQL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableViewObservation.
func (in *TableViewObservation) DeepCopy() *TableViewObservation {
	if in == nil {
		return nil
	}
	out := new(TableViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableViewParameters) DeepCopyInto(out *TableViewParameters) {
	*out = *in
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.UseLegacySQL != nil {
		in, out := &in.UseLegacySQL, &out.UseLegacySQL
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableViewParameters.
func (in *TableViewParameters) DeepCopy() *TableViewParameters {
	if in == nil {
		return nil
	}
	out := new(TableViewParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimePartitioningObservation) DeepCopyInto(out *TimePartitioningObservation) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimePartitioningObservation.
func (in *TimePartitioningObservation) DeepCopy() *TimePartitioningObservation {
	if in == nil {
		return nil
	}
	out := new(TimePartitioningObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimePartitioningParameters) DeepCopyInto(out *TimePartitioningParameters) {
	*out = *in
	if in.ExpirationMs != nil {
		in, out := &in.ExpirationMs, &out.ExpirationMs
		*out = new(float64)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.RequirePartitionFilter != nil {
		in, out := &in.RequirePartitionFilter, &out.RequirePartitionFilter
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimePartitioningParameters.
func (in *TimePartitioningParameters) DeepCopy() *TimePartitioningParameters {
	if in == nil {
		return nil
	}
	out := new(TimePartitioningParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewObservation) DeepCopyInto(out *ViewObservation) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewObservation.
func (in *ViewObservation) DeepCopy() *ViewObservation {
	if in == nil {
		return nil
	}
	out := new(ViewObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ViewParameters) DeepCopyInto(out *ViewParameters) {
	*out = *in
	if in.DatasetID != nil {
		in, out := &in.DatasetID, &out.DatasetID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.TableID != nil {
		in, out := &in.TableID, &out.TableID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ViewParameters.
func (in *ViewParameters) DeepCopy() *ViewParameters {
	if in == nil {
		return nil
	}
	out := new(ViewParameters)
	in.DeepCopyInto(out)
	return out
}
