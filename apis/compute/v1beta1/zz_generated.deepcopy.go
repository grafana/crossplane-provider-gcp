//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortObservation) DeepCopyInto(out *AbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortObservation.
func (in *AbortObservation) DeepCopy() *AbortObservation {
	if in == nil {
		return nil
	}
	out := new(AbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortParameters) DeepCopyInto(out *AbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortParameters.
func (in *AbortParameters) DeepCopy() *AbortParameters {
	if in == nil {
		return nil
	}
	out := new(AbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigObservation) DeepCopyInto(out *AccessConfigObservation) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigObservation.
func (in *AccessConfigObservation) DeepCopy() *AccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessConfigParameters) DeepCopyInto(out *AccessConfigParameters) {
	*out = *in
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessConfigParameters.
func (in *AccessConfigParameters) DeepCopy() *AccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Address) DeepCopyInto(out *Address) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Address.
func (in *Address) DeepCopy() *Address {
	if in == nil {
		return nil
	}
	out := new(Address)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Address) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressList) DeepCopyInto(out *AddressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Address, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressList.
func (in *AddressList) DeepCopy() *AddressList {
	if in == nil {
		return nil
	}
	out := new(AddressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AddressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressObservation) DeepCopyInto(out *AddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IPv6EndpointType != nil {
		in, out := &in.IPv6EndpointType, &out.IPv6EndpointType
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressObservation.
func (in *AddressObservation) DeepCopy() *AddressObservation {
	if in == nil {
		return nil
	}
	out := new(AddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressParameters) DeepCopyInto(out *AddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IPv6EndpointType != nil {
		in, out := &in.IPv6EndpointType, &out.IPv6EndpointType
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressParameters.
func (in *AddressParameters) DeepCopy() *AddressParameters {
	if in == nil {
		return nil
	}
	out := new(AddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressSpec) DeepCopyInto(out *AddressSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressSpec.
func (in *AddressSpec) DeepCopy() *AddressSpec {
	if in == nil {
		return nil
	}
	out := new(AddressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddressStatus) DeepCopyInto(out *AddressStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddressStatus.
func (in *AddressStatus) DeepCopy() *AddressStatus {
	if in == nil {
		return nil
	}
	out := new(AddressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedMachineFeaturesObservation) DeepCopyInto(out *AdvancedMachineFeaturesObservation) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedMachineFeaturesObservation.
func (in *AdvancedMachineFeaturesObservation) DeepCopy() *AdvancedMachineFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedMachineFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedMachineFeaturesParameters) DeepCopyInto(out *AdvancedMachineFeaturesParameters) {
	*out = *in
	if in.EnableNestedVirtualization != nil {
		in, out := &in.EnableNestedVirtualization, &out.EnableNestedVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.ThreadsPerCore != nil {
		in, out := &in.ThreadsPerCore, &out.ThreadsPerCore
		*out = new(float64)
		**out = **in
	}
	if in.VisibleCoreCount != nil {
		in, out := &in.VisibleCoreCount, &out.VisibleCoreCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedMachineFeaturesParameters.
func (in *AdvancedMachineFeaturesParameters) DeepCopy() *AdvancedMachineFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedMachineFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasIPRangeObservation) DeepCopyInto(out *AliasIPRangeObservation) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasIPRangeObservation.
func (in *AliasIPRangeObservation) DeepCopy() *AliasIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(AliasIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasIPRangeParameters) DeepCopyInto(out *AliasIPRangeParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRangeName != nil {
		in, out := &in.SubnetworkRangeName, &out.SubnetworkRangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasIPRangeParameters.
func (in *AliasIPRangeParameters) DeepCopy() *AliasIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(AliasIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllInstancesConfigObservation) DeepCopyInto(out *AllInstancesConfigObservation) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllInstancesConfigObservation.
func (in *AllInstancesConfigObservation) DeepCopy() *AllInstancesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AllInstancesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllInstancesConfigParameters) DeepCopyInto(out *AllInstancesConfigParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllInstancesConfigParameters.
func (in *AllInstancesConfigParameters) DeepCopy() *AllInstancesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AllInstancesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealingPoliciesObservation) DeepCopyInto(out *AutoHealingPoliciesObservation) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealingPoliciesObservation.
func (in *AutoHealingPoliciesObservation) DeepCopy() *AutoHealingPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(AutoHealingPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoHealingPoliciesParameters) DeepCopyInto(out *AutoHealingPoliciesParameters) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckRef != nil {
		in, out := &in.HealthCheckRef, &out.HealthCheckRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheckSelector != nil {
		in, out := &in.HealthCheckSelector, &out.HealthCheckSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoHealingPoliciesParameters.
func (in *AutoHealingPoliciesParameters) DeepCopy() *AutoHealingPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(AutoHealingPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendObservation) DeepCopyInto(out *BackendObservation) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendObservation.
func (in *BackendObservation) DeepCopy() *BackendObservation {
	if in == nil {
		return nil
	}
	out := new(BackendObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendParameters) DeepCopyInto(out *BackendParameters) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.GroupRef != nil {
		in, out := &in.GroupRef, &out.GroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupSelector != nil {
		in, out := &in.GroupSelector, &out.GroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendParameters.
func (in *BackendParameters) DeepCopy() *BackendParameters {
	if in == nil {
		return nil
	}
	out := new(BackendParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendService) DeepCopyInto(out *BackendService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendService.
func (in *BackendService) DeepCopy() *BackendService {
	if in == nil {
		return nil
	}
	out := new(BackendService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceList) DeepCopyInto(out *BackendServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BackendService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceList.
func (in *BackendServiceList) DeepCopy() *BackendServiceList {
	if in == nil {
		return nil
	}
	out := new(BackendServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BackendServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceObservation) DeepCopyInto(out *BackendServiceObservation) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]BackendObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]CdnPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]CircuitBreakersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]ConsistentHashObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.CustomRequestHeaders != nil {
		in, out := &in.CustomRequestHeaders, &out.CustomRequestHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomResponseHeaders != nil {
		in, out := &in.CustomResponseHeaders, &out.CustomResponseHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.GeneratedID != nil {
		in, out := &in.GeneratedID, &out.GeneratedID
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]IapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicies != nil {
		in, out := &in.LocalityLBPolicies, &out.LocalityLBPolicies
		*out = make([]LocalityLBPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]LogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]OutlierDetectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SecuritySettings != nil {
		in, out := &in.SecuritySettings, &out.SecuritySettings
		*out = make([]SecuritySettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceObservation.
func (in *BackendServiceObservation) DeepCopy() *BackendServiceObservation {
	if in == nil {
		return nil
	}
	out := new(BackendServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceParameters) DeepCopyInto(out *BackendServiceParameters) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]BackendParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]CdnPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]CircuitBreakersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompressionMode != nil {
		in, out := &in.CompressionMode, &out.CompressionMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]ConsistentHashParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomRequestHeaders != nil {
		in, out := &in.CustomRequestHeaders, &out.CustomRequestHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomResponseHeaders != nil {
		in, out := &in.CustomResponseHeaders, &out.CustomResponseHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EdgeSecurityPolicy != nil {
		in, out := &in.EdgeSecurityPolicy, &out.EdgeSecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]IapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicies != nil {
		in, out := &in.LocalityLBPolicies, &out.LocalityLBPolicies
		*out = make([]LocalityLBPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]LogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]OutlierDetectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SecuritySettings != nil {
		in, out := &in.SecuritySettings, &out.SecuritySettings
		*out = make([]SecuritySettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceParameters.
func (in *BackendServiceParameters) DeepCopy() *BackendServiceParameters {
	if in == nil {
		return nil
	}
	out := new(BackendServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceSpec) DeepCopyInto(out *BackendServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceSpec.
func (in *BackendServiceSpec) DeepCopy() *BackendServiceSpec {
	if in == nil {
		return nil
	}
	out := new(BackendServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendServiceStatus) DeepCopyInto(out *BackendServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendServiceStatus.
func (in *BackendServiceStatus) DeepCopy() *BackendServiceStatus {
	if in == nil {
		return nil
	}
	out := new(BackendServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseEjectionTimeObservation) DeepCopyInto(out *BaseEjectionTimeObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseEjectionTimeObservation.
func (in *BaseEjectionTimeObservation) DeepCopy() *BaseEjectionTimeObservation {
	if in == nil {
		return nil
	}
	out := new(BaseEjectionTimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseEjectionTimeParameters) DeepCopyInto(out *BaseEjectionTimeParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseEjectionTimeParameters.
func (in *BaseEjectionTimeParameters) DeepCopy() *BaseEjectionTimeParameters {
	if in == nil {
		return nil
	}
	out := new(BaseEjectionTimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassCacheOnRequestHeadersObservation) DeepCopyInto(out *BypassCacheOnRequestHeadersObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassCacheOnRequestHeadersObservation.
func (in *BypassCacheOnRequestHeadersObservation) DeepCopy() *BypassCacheOnRequestHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(BypassCacheOnRequestHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BypassCacheOnRequestHeadersParameters) DeepCopyInto(out *BypassCacheOnRequestHeadersParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BypassCacheOnRequestHeadersParameters.
func (in *BypassCacheOnRequestHeadersParameters) DeepCopy() *BypassCacheOnRequestHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(BypassCacheOnRequestHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheKeyPolicyObservation) DeepCopyInto(out *CacheKeyPolicyObservation) {
	*out = *in
	if in.IncludeHTTPHeaders != nil {
		in, out := &in.IncludeHTTPHeaders, &out.IncludeHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheKeyPolicyObservation.
func (in *CacheKeyPolicyObservation) DeepCopy() *CacheKeyPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CacheKeyPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheKeyPolicyParameters) DeepCopyInto(out *CacheKeyPolicyParameters) {
	*out = *in
	if in.IncludeHTTPHeaders != nil {
		in, out := &in.IncludeHTTPHeaders, &out.IncludeHTTPHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheKeyPolicyParameters.
func (in *CacheKeyPolicyParameters) DeepCopy() *CacheKeyPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CacheKeyPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyCacheKeyPolicyObservation) DeepCopyInto(out *CdnPolicyCacheKeyPolicyObservation) {
	*out = *in
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyCacheKeyPolicyObservation.
func (in *CdnPolicyCacheKeyPolicyObservation) DeepCopy() *CdnPolicyCacheKeyPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyCacheKeyPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyCacheKeyPolicyParameters) DeepCopyInto(out *CdnPolicyCacheKeyPolicyParameters) {
	*out = *in
	if in.IncludeHost != nil {
		in, out := &in.IncludeHost, &out.IncludeHost
		*out = new(bool)
		**out = **in
	}
	if in.IncludeNamedCookies != nil {
		in, out := &in.IncludeNamedCookies, &out.IncludeNamedCookies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IncludeProtocol != nil {
		in, out := &in.IncludeProtocol, &out.IncludeProtocol
		*out = new(bool)
		**out = **in
	}
	if in.IncludeQueryString != nil {
		in, out := &in.IncludeQueryString, &out.IncludeQueryString
		*out = new(bool)
		**out = **in
	}
	if in.QueryStringBlacklist != nil {
		in, out := &in.QueryStringBlacklist, &out.QueryStringBlacklist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.QueryStringWhitelist != nil {
		in, out := &in.QueryStringWhitelist, &out.QueryStringWhitelist
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyCacheKeyPolicyParameters.
func (in *CdnPolicyCacheKeyPolicyParameters) DeepCopy() *CdnPolicyCacheKeyPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyCacheKeyPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyNegativeCachingPolicyObservation) DeepCopyInto(out *CdnPolicyNegativeCachingPolicyObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyNegativeCachingPolicyObservation.
func (in *CdnPolicyNegativeCachingPolicyObservation) DeepCopy() *CdnPolicyNegativeCachingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyNegativeCachingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyNegativeCachingPolicyParameters) DeepCopyInto(out *CdnPolicyNegativeCachingPolicyParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyNegativeCachingPolicyParameters.
func (in *CdnPolicyNegativeCachingPolicyParameters) DeepCopy() *CdnPolicyNegativeCachingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyNegativeCachingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyObservation) DeepCopyInto(out *CdnPolicyObservation) {
	*out = *in
	if in.BypassCacheOnRequestHeaders != nil {
		in, out := &in.BypassCacheOnRequestHeaders, &out.BypassCacheOnRequestHeaders
		*out = make([]BypassCacheOnRequestHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CacheKeyPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]NegativeCachingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyObservation.
func (in *CdnPolicyObservation) DeepCopy() *CdnPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CdnPolicyParameters) DeepCopyInto(out *CdnPolicyParameters) {
	*out = *in
	if in.BypassCacheOnRequestHeaders != nil {
		in, out := &in.BypassCacheOnRequestHeaders, &out.BypassCacheOnRequestHeaders
		*out = make([]BypassCacheOnRequestHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CacheKeyPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]NegativeCachingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CdnPolicyParameters.
func (in *CdnPolicyParameters) DeepCopy() *CdnPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CdnPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitBreakersConnectTimeoutObservation) DeepCopyInto(out *CircuitBreakersConnectTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitBreakersConnectTimeoutObservation.
func (in *CircuitBreakersConnectTimeoutObservation) DeepCopy() *CircuitBreakersConnectTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(CircuitBreakersConnectTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitBreakersConnectTimeoutParameters) DeepCopyInto(out *CircuitBreakersConnectTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitBreakersConnectTimeoutParameters.
func (in *CircuitBreakersConnectTimeoutParameters) DeepCopy() *CircuitBreakersConnectTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(CircuitBreakersConnectTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitBreakersObservation) DeepCopyInto(out *CircuitBreakersObservation) {
	*out = *in
	if in.ConnectTimeout != nil {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		*out = make([]ConnectTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitBreakersObservation.
func (in *CircuitBreakersObservation) DeepCopy() *CircuitBreakersObservation {
	if in == nil {
		return nil
	}
	out := new(CircuitBreakersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CircuitBreakersParameters) DeepCopyInto(out *CircuitBreakersParameters) {
	*out = *in
	if in.ConnectTimeout != nil {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		*out = make([]ConnectTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CircuitBreakersParameters.
func (in *CircuitBreakersParameters) DeepCopy() *CircuitBreakersParameters {
	if in == nil {
		return nil
	}
	out := new(CircuitBreakersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidentialInstanceConfigObservation) DeepCopyInto(out *ConfidentialInstanceConfigObservation) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidentialInstanceConfigObservation.
func (in *ConfidentialInstanceConfigObservation) DeepCopy() *ConfidentialInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfidentialInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfidentialInstanceConfigParameters) DeepCopyInto(out *ConfidentialInstanceConfigParameters) {
	*out = *in
	if in.ConfidentialInstanceType != nil {
		in, out := &in.ConfidentialInstanceType, &out.ConfidentialInstanceType
		*out = new(string)
		**out = **in
	}
	if in.EnableConfidentialCompute != nil {
		in, out := &in.EnableConfidentialCompute, &out.EnableConfidentialCompute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfidentialInstanceConfigParameters.
func (in *ConfidentialInstanceConfigParameters) DeepCopy() *ConfidentialInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfidentialInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectTimeoutObservation) DeepCopyInto(out *ConnectTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectTimeoutObservation.
func (in *ConnectTimeoutObservation) DeepCopy() *ConnectTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectTimeoutParameters) DeepCopyInto(out *ConnectTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectTimeoutParameters.
func (in *ConnectTimeoutParameters) DeepCopy() *ConnectTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionTrackingPolicyObservation) DeepCopyInto(out *ConnectionTrackingPolicyObservation) {
	*out = *in
	if in.ConnectionPersistenceOnUnhealthyBackends != nil {
		in, out := &in.ConnectionPersistenceOnUnhealthyBackends, &out.ConnectionPersistenceOnUnhealthyBackends
		*out = new(string)
		**out = **in
	}
	if in.EnableStrongAffinity != nil {
		in, out := &in.EnableStrongAffinity, &out.EnableStrongAffinity
		*out = new(bool)
		**out = **in
	}
	if in.IdleTimeoutSec != nil {
		in, out := &in.IdleTimeoutSec, &out.IdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.TrackingMode != nil {
		in, out := &in.TrackingMode, &out.TrackingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionTrackingPolicyObservation.
func (in *ConnectionTrackingPolicyObservation) DeepCopy() *ConnectionTrackingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionTrackingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionTrackingPolicyParameters) DeepCopyInto(out *ConnectionTrackingPolicyParameters) {
	*out = *in
	if in.ConnectionPersistenceOnUnhealthyBackends != nil {
		in, out := &in.ConnectionPersistenceOnUnhealthyBackends, &out.ConnectionPersistenceOnUnhealthyBackends
		*out = new(string)
		**out = **in
	}
	if in.EnableStrongAffinity != nil {
		in, out := &in.EnableStrongAffinity, &out.EnableStrongAffinity
		*out = new(bool)
		**out = **in
	}
	if in.IdleTimeoutSec != nil {
		in, out := &in.IdleTimeoutSec, &out.IdleTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.TrackingMode != nil {
		in, out := &in.TrackingMode, &out.TrackingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionTrackingPolicyParameters.
func (in *ConnectionTrackingPolicyParameters) DeepCopy() *ConnectionTrackingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionTrackingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashHTTPCookieObservation) DeepCopyInto(out *ConsistentHashHTTPCookieObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]HTTPCookieTTLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashHTTPCookieObservation.
func (in *ConsistentHashHTTPCookieObservation) DeepCopy() *ConsistentHashHTTPCookieObservation {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashHTTPCookieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashHTTPCookieParameters) DeepCopyInto(out *ConsistentHashHTTPCookieParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]HTTPCookieTTLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashHTTPCookieParameters.
func (in *ConsistentHashHTTPCookieParameters) DeepCopy() *ConsistentHashHTTPCookieParameters {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashHTTPCookieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashObservation) DeepCopyInto(out *ConsistentHashObservation) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]HTTPCookieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashObservation.
func (in *ConsistentHashObservation) DeepCopy() *ConsistentHashObservation {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsistentHashParameters) DeepCopyInto(out *ConsistentHashParameters) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]HTTPCookieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsistentHashParameters.
func (in *ConsistentHashParameters) DeepCopy() *ConsistentHashParameters {
	if in == nil {
		return nil
	}
	out := new(ConsistentHashParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicyObservation) DeepCopyInto(out *CorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicyObservation.
func (in *CorsPolicyObservation) DeepCopy() *CorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicyParameters) DeepCopyInto(out *CorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicyParameters.
func (in *CorsPolicyParameters) DeepCopy() *CorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPolicyObservation) DeepCopyInto(out *CustomPolicyObservation) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPolicyObservation.
func (in *CustomPolicyObservation) DeepCopy() *CustomPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CustomPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomPolicyParameters) DeepCopyInto(out *CustomPolicyParameters) {
	*out = *in
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomPolicyParameters.
func (in *CustomPolicyParameters) DeepCopy() *CustomPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CustomPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionObservation) DeepCopyInto(out *DefaultRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]CorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]FaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]TimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]URLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]WeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionObservation.
func (in *DefaultRouteActionObservation) DeepCopy() *DefaultRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionParameters) DeepCopyInto(out *DefaultRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]CorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]FaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]TimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]URLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]WeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionParameters.
func (in *DefaultRouteActionParameters) DeepCopy() *DefaultRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultURLRedirectObservation) DeepCopyInto(out *DefaultURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultURLRedirectObservation.
func (in *DefaultURLRedirectObservation) DeepCopy() *DefaultURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultURLRedirectParameters) DeepCopyInto(out *DefaultURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultURLRedirectParameters.
func (in *DefaultURLRedirectParameters) DeepCopy() *DefaultURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayFixedDelayObservation) DeepCopyInto(out *DelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayFixedDelayObservation.
func (in *DelayFixedDelayObservation) DeepCopy() *DelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(DelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayFixedDelayParameters) DeepCopyInto(out *DelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayFixedDelayParameters.
func (in *DelayFixedDelayParameters) DeepCopy() *DelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(DelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayObservation) DeepCopyInto(out *DelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayObservation.
func (in *DelayObservation) DeepCopy() *DelayObservation {
	if in == nil {
		return nil
	}
	out := new(DelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayParameters) DeepCopyInto(out *DelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayParameters.
func (in *DelayParameters) DeepCopy() *DelayParameters {
	if in == nil {
		return nil
	}
	out := new(DelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskEncryptionKeyObservation) DeepCopyInto(out *DiskEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskEncryptionKeyObservation.
func (in *DiskEncryptionKeyObservation) DeepCopy() *DiskEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(DiskEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskEncryptionKeyParameters) DeepCopyInto(out *DiskEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskEncryptionKeyParameters.
func (in *DiskEncryptionKeyParameters) DeepCopy() *DiskEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(DiskEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]DiskEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskName != nil {
		in, out := &in.DiskName, &out.DiskName
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceImage != nil {
		in, out := &in.SourceImage, &out.SourceImage
		*out = new(string)
		**out = **in
	}
	if in.SourceImageEncryptionKey != nil {
		in, out := &in.SourceImageEncryptionKey, &out.SourceImageEncryptionKey
		*out = make([]SourceImageEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]SourceSnapshotEncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.Boot != nil {
		in, out := &in.Boot, &out.Boot
		*out = new(bool)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryptionKey != nil {
		in, out := &in.DiskEncryptionKey, &out.DiskEncryptionKey
		*out = make([]DiskEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskName != nil {
		in, out := &in.DiskName, &out.DiskName
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.ProvisionedIops != nil {
		in, out := &in.ProvisionedIops, &out.ProvisionedIops
		*out = new(float64)
		**out = **in
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceImage != nil {
		in, out := &in.SourceImage, &out.SourceImage
		*out = new(string)
		**out = **in
	}
	if in.SourceImageEncryptionKey != nil {
		in, out := &in.SourceImageEncryptionKey, &out.SourceImageEncryptionKey
		*out = make([]SourceImageEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceSnapshot != nil {
		in, out := &in.SourceSnapshot, &out.SourceSnapshot
		*out = new(string)
		**out = **in
	}
	if in.SourceSnapshotEncryptionKey != nil {
		in, out := &in.SourceSnapshotEncryptionKey, &out.SourceSnapshotEncryptionKey
		*out = make([]SourceSnapshotEncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailoverPolicyObservation) DeepCopyInto(out *FailoverPolicyObservation) {
	*out = *in
	if in.DisableConnectionDrainOnFailover != nil {
		in, out := &in.DisableConnectionDrainOnFailover, &out.DisableConnectionDrainOnFailover
		*out = new(bool)
		**out = **in
	}
	if in.DropTrafficIfUnhealthy != nil {
		in, out := &in.DropTrafficIfUnhealthy, &out.DropTrafficIfUnhealthy
		*out = new(bool)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailoverPolicyObservation.
func (in *FailoverPolicyObservation) DeepCopy() *FailoverPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(FailoverPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FailoverPolicyParameters) DeepCopyInto(out *FailoverPolicyParameters) {
	*out = *in
	if in.DisableConnectionDrainOnFailover != nil {
		in, out := &in.DisableConnectionDrainOnFailover, &out.DisableConnectionDrainOnFailover
		*out = new(bool)
		**out = **in
	}
	if in.DropTrafficIfUnhealthy != nil {
		in, out := &in.DropTrafficIfUnhealthy, &out.DropTrafficIfUnhealthy
		*out = new(bool)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FailoverPolicyParameters.
func (in *FailoverPolicyParameters) DeepCopy() *FailoverPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(FailoverPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyAbortObservation) DeepCopyInto(out *FaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyAbortObservation.
func (in *FaultInjectionPolicyAbortObservation) DeepCopy() *FaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyAbortParameters) DeepCopyInto(out *FaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyAbortParameters.
func (in *FaultInjectionPolicyAbortParameters) DeepCopy() *FaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayFixedDelayObservation) DeepCopyInto(out *FaultInjectionPolicyDelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayFixedDelayObservation.
func (in *FaultInjectionPolicyDelayFixedDelayObservation) DeepCopy() *FaultInjectionPolicyDelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayFixedDelayParameters) DeepCopyInto(out *FaultInjectionPolicyDelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayFixedDelayParameters.
func (in *FaultInjectionPolicyDelayFixedDelayParameters) DeepCopy() *FaultInjectionPolicyDelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayObservation) DeepCopyInto(out *FaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayObservation.
func (in *FaultInjectionPolicyDelayObservation) DeepCopy() *FaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayParameters) DeepCopyInto(out *FaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayParameters.
func (in *FaultInjectionPolicyDelayParameters) DeepCopy() *FaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyObservation) DeepCopyInto(out *FaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]AbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyObservation.
func (in *FaultInjectionPolicyObservation) DeepCopy() *FaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyParameters) DeepCopyInto(out *FaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]AbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyParameters.
func (in *FaultInjectionPolicyParameters) DeepCopy() *FaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterLabelsObservation) DeepCopyInto(out *FilterLabelsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterLabelsObservation.
func (in *FilterLabelsObservation) DeepCopy() *FilterLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(FilterLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterLabelsParameters) DeepCopyInto(out *FilterLabelsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterLabelsParameters.
func (in *FilterLabelsParameters) DeepCopy() *FilterLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(FilterLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDelayObservation) DeepCopyInto(out *FixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDelayObservation.
func (in *FixedDelayObservation) DeepCopy() *FixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDelayParameters) DeepCopyInto(out *FixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDelayParameters.
func (in *FixedDelayParameters) DeepCopy() *FixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRule) DeepCopyInto(out *ForwardingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRule.
func (in *ForwardingRule) DeepCopy() *ForwardingRule {
	if in == nil {
		return nil
	}
	out := new(ForwardingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ForwardingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleList) DeepCopyInto(out *ForwardingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ForwardingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleList.
func (in *ForwardingRuleList) DeepCopy() *ForwardingRuleList {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ForwardingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleObservation) DeepCopyInto(out *ForwardingRuleObservation) {
	*out = *in
	if in.AllPorts != nil {
		in, out := &in.AllPorts, &out.AllPorts
		*out = new(bool)
		**out = **in
	}
	if in.AllowGlobalAccess != nil {
		in, out := &in.AllowGlobalAccess, &out.AllowGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.AllowPscGlobalAccess != nil {
		in, out := &in.AllowPscGlobalAccess, &out.AllowPscGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BaseForwardingRule != nil {
		in, out := &in.BaseForwardingRule, &out.BaseForwardingRule
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsMirroringCollector != nil {
		in, out := &in.IsMirroringCollector, &out.IsMirroringCollector
		*out = new(bool)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionStatus != nil {
		in, out := &in.PscConnectionStatus, &out.PscConnectionStatus
		*out = new(string)
		**out = **in
	}
	if in.RecreateClosedPsc != nil {
		in, out := &in.RecreateClosedPsc, &out.RecreateClosedPsc
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]ServiceDirectoryRegistrationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLabel != nil {
		in, out := &in.ServiceLabel, &out.ServiceLabel
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleObservation.
func (in *ForwardingRuleObservation) DeepCopy() *ForwardingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleParameters) DeepCopyInto(out *ForwardingRuleParameters) {
	*out = *in
	if in.AllPorts != nil {
		in, out := &in.AllPorts, &out.AllPorts
		*out = new(bool)
		**out = **in
	}
	if in.AllowGlobalAccess != nil {
		in, out := &in.AllowGlobalAccess, &out.AllowGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.AllowPscGlobalAccess != nil {
		in, out := &in.AllowPscGlobalAccess, &out.AllowPscGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.IsMirroringCollector != nil {
		in, out := &in.IsMirroringCollector, &out.IsMirroringCollector
		*out = new(bool)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RecreateClosedPsc != nil {
		in, out := &in.RecreateClosedPsc, &out.RecreateClosedPsc
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]ServiceDirectoryRegistrationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceLabel != nil {
		in, out := &in.ServiceLabel, &out.ServiceLabel
		*out = new(string)
		**out = **in
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleParameters.
func (in *ForwardingRuleParameters) DeepCopy() *ForwardingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleSpec) DeepCopyInto(out *ForwardingRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleSpec.
func (in *ForwardingRuleSpec) DeepCopy() *ForwardingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForwardingRuleStatus) DeepCopyInto(out *ForwardingRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForwardingRuleStatus.
func (in *ForwardingRuleStatus) DeepCopy() *ForwardingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(ForwardingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GRPCHealthCheckObservation) DeepCopyInto(out *GRPCHealthCheckObservation) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GRPCHealthCheckObservation.
func (in *GRPCHealthCheckObservation) DeepCopy() *GRPCHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(GRPCHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GRPCHealthCheckParameters) DeepCopyInto(out *GRPCHealthCheckParameters) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GRPCHealthCheckParameters.
func (in *GRPCHealthCheckParameters) DeepCopy() *GRPCHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(GRPCHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddress) DeepCopyInto(out *GlobalAddress) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddress.
func (in *GlobalAddress) DeepCopy() *GlobalAddress {
	if in == nil {
		return nil
	}
	out := new(GlobalAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalAddress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressList) DeepCopyInto(out *GlobalAddressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressList.
func (in *GlobalAddressList) DeepCopy() *GlobalAddressList {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalAddressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressObservation) DeepCopyInto(out *GlobalAddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressObservation.
func (in *GlobalAddressObservation) DeepCopy() *GlobalAddressObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressParameters) DeepCopyInto(out *GlobalAddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressParameters.
func (in *GlobalAddressParameters) DeepCopy() *GlobalAddressParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressSpec) DeepCopyInto(out *GlobalAddressSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressSpec.
func (in *GlobalAddressSpec) DeepCopy() *GlobalAddressSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressStatus) DeepCopyInto(out *GlobalAddressStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressStatus.
func (in *GlobalAddressStatus) DeepCopy() *GlobalAddressStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRule) DeepCopyInto(out *GlobalForwardingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRule.
func (in *GlobalForwardingRule) DeepCopy() *GlobalForwardingRule {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalForwardingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleList) DeepCopyInto(out *GlobalForwardingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalForwardingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleList.
func (in *GlobalForwardingRuleList) DeepCopy() *GlobalForwardingRuleList {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalForwardingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleObservation) DeepCopyInto(out *GlobalForwardingRuleObservation) {
	*out = *in
	if in.AllowPscGlobalAccess != nil {
		in, out := &in.AllowPscGlobalAccess, &out.AllowPscGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.BaseForwardingRule != nil {
		in, out := &in.BaseForwardingRule, &out.BaseForwardingRule
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MetadataFiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionStatus != nil {
		in, out := &in.PscConnectionStatus, &out.PscConnectionStatus
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]GlobalForwardingRuleServiceDirectoryRegistrationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleObservation.
func (in *GlobalForwardingRuleObservation) DeepCopy() *GlobalForwardingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleParameters) DeepCopyInto(out *GlobalForwardingRuleParameters) {
	*out = *in
	if in.AllowPscGlobalAccess != nil {
		in, out := &in.AllowPscGlobalAccess, &out.AllowPscGlobalAccess
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MetadataFiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NoAutomateDNSZone != nil {
		in, out := &in.NoAutomateDNSZone, &out.NoAutomateDNSZone
		*out = new(bool)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceDirectoryRegistrations != nil {
		in, out := &in.ServiceDirectoryRegistrations, &out.ServiceDirectoryRegistrations
		*out = make([]GlobalForwardingRuleServiceDirectoryRegistrationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceIPRanges != nil {
		in, out := &in.SourceIPRanges, &out.SourceIPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleParameters.
func (in *GlobalForwardingRuleParameters) DeepCopy() *GlobalForwardingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsObservation) DeepCopyInto(out *GlobalForwardingRuleServiceDirectoryRegistrationsObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegion != nil {
		in, out := &in.ServiceDirectoryRegion, &out.ServiceDirectoryRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleServiceDirectoryRegistrationsObservation.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsObservation) DeepCopy() *GlobalForwardingRuleServiceDirectoryRegistrationsObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleServiceDirectoryRegistrationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsParameters) DeepCopyInto(out *GlobalForwardingRuleServiceDirectoryRegistrationsParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ServiceDirectoryRegion != nil {
		in, out := &in.ServiceDirectoryRegion, &out.ServiceDirectoryRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleServiceDirectoryRegistrationsParameters.
func (in *GlobalForwardingRuleServiceDirectoryRegistrationsParameters) DeepCopy() *GlobalForwardingRuleServiceDirectoryRegistrationsParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleServiceDirectoryRegistrationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleSpec) DeepCopyInto(out *GlobalForwardingRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleSpec.
func (in *GlobalForwardingRuleSpec) DeepCopy() *GlobalForwardingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleStatus) DeepCopyInto(out *GlobalForwardingRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleStatus.
func (in *GlobalForwardingRuleStatus) DeepCopy() *GlobalForwardingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestAcceleratorObservation) DeepCopyInto(out *GuestAcceleratorObservation) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestAcceleratorObservation.
func (in *GuestAcceleratorObservation) DeepCopy() *GuestAcceleratorObservation {
	if in == nil {
		return nil
	}
	out := new(GuestAcceleratorObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GuestAcceleratorParameters) DeepCopyInto(out *GuestAcceleratorParameters) {
	*out = *in
	if in.Count != nil {
		in, out := &in.Count, &out.Count
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GuestAcceleratorParameters.
func (in *GuestAcceleratorParameters) DeepCopy() *GuestAcceleratorParameters {
	if in == nil {
		return nil
	}
	out := new(GuestAcceleratorParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieObservation) DeepCopyInto(out *HTTPCookieObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]TTLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieObservation.
func (in *HTTPCookieObservation) DeepCopy() *HTTPCookieObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieParameters) DeepCopyInto(out *HTTPCookieParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = make([]TTLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieParameters.
func (in *HTTPCookieParameters) DeepCopy() *HTTPCookieParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieTTLObservation) DeepCopyInto(out *HTTPCookieTTLObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieTTLObservation.
func (in *HTTPCookieTTLObservation) DeepCopy() *HTTPCookieTTLObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieTTLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCookieTTLParameters) DeepCopyInto(out *HTTPCookieTTLParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCookieTTLParameters.
func (in *HTTPCookieTTLParameters) DeepCopy() *HTTPCookieTTLParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPCookieTTLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheck) DeepCopyInto(out *HTTPHealthCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheck.
func (in *HTTPHealthCheck) DeepCopy() *HTTPHealthCheck {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HTTPHealthCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckList) DeepCopyInto(out *HTTPHealthCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HTTPHealthCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckList.
func (in *HTTPHealthCheckList) DeepCopy() *HTTPHealthCheckList {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HTTPHealthCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckObservation) DeepCopyInto(out *HTTPHealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckObservation.
func (in *HTTPHealthCheckObservation) DeepCopy() *HTTPHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckObservation_2) DeepCopyInto(out *HTTPHealthCheckObservation_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckObservation_2.
func (in *HTTPHealthCheckObservation_2) DeepCopy() *HTTPHealthCheckObservation_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckParameters) DeepCopyInto(out *HTTPHealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckParameters.
func (in *HTTPHealthCheckParameters) DeepCopy() *HTTPHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckParameters_2) DeepCopyInto(out *HTTPHealthCheckParameters_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckParameters_2.
func (in *HTTPHealthCheckParameters_2) DeepCopy() *HTTPHealthCheckParameters_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckSpec) DeepCopyInto(out *HTTPHealthCheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckSpec.
func (in *HTTPHealthCheckSpec) DeepCopy() *HTTPHealthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPHealthCheckStatus) DeepCopyInto(out *HTTPHealthCheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPHealthCheckStatus.
func (in *HTTPHealthCheckStatus) DeepCopy() *HTTPHealthCheckStatus {
	if in == nil {
		return nil
	}
	out := new(HTTPHealthCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheck) DeepCopyInto(out *HTTPSHealthCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheck.
func (in *HTTPSHealthCheck) DeepCopy() *HTTPSHealthCheck {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HTTPSHealthCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckList) DeepCopyInto(out *HTTPSHealthCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HTTPSHealthCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckList.
func (in *HTTPSHealthCheckList) DeepCopy() *HTTPSHealthCheckList {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HTTPSHealthCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckObservation) DeepCopyInto(out *HTTPSHealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckObservation.
func (in *HTTPSHealthCheckObservation) DeepCopy() *HTTPSHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckObservation_2) DeepCopyInto(out *HTTPSHealthCheckObservation_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckObservation_2.
func (in *HTTPSHealthCheckObservation_2) DeepCopy() *HTTPSHealthCheckObservation_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckParameters) DeepCopyInto(out *HTTPSHealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckParameters.
func (in *HTTPSHealthCheckParameters) DeepCopy() *HTTPSHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckParameters_2) DeepCopyInto(out *HTTPSHealthCheckParameters_2) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckParameters_2.
func (in *HTTPSHealthCheckParameters_2) DeepCopy() *HTTPSHealthCheckParameters_2 {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckSpec) DeepCopyInto(out *HTTPSHealthCheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckSpec.
func (in *HTTPSHealthCheckSpec) DeepCopy() *HTTPSHealthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPSHealthCheckStatus) DeepCopyInto(out *HTTPSHealthCheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPSHealthCheckStatus.
func (in *HTTPSHealthCheckStatus) DeepCopy() *HTTPSHealthCheckStatus {
	if in == nil {
		return nil
	}
	out := new(HTTPSHealthCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionObservation) DeepCopyInto(out *HeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]ResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionObservation.
func (in *HeaderActionObservation) DeepCopy() *HeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionParameters) DeepCopyInto(out *HeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]ResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionParameters.
func (in *HeaderActionParameters) DeepCopy() *HeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *HeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionRequestHeadersToAddObservation.
func (in *HeaderActionRequestHeadersToAddObservation) DeepCopy() *HeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *HeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionRequestHeadersToAddParameters.
func (in *HeaderActionRequestHeadersToAddParameters) DeepCopy() *HeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *HeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionResponseHeadersToAddObservation.
func (in *HeaderActionResponseHeadersToAddObservation) DeepCopy() *HeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *HeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionResponseHeadersToAddParameters.
func (in *HeaderActionResponseHeadersToAddParameters) DeepCopy() *HeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesObservation) DeepCopyInto(out *HeaderMatchesObservation) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]RangeMatchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesObservation.
func (in *HeaderMatchesObservation) DeepCopy() *HeaderMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesParameters) DeepCopyInto(out *HeaderMatchesParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]RangeMatchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesParameters.
func (in *HeaderMatchesParameters) DeepCopy() *HeaderMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheck) DeepCopyInto(out *HealthCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheck.
func (in *HealthCheck) DeepCopy() *HealthCheck {
	if in == nil {
		return nil
	}
	out := new(HealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckList) DeepCopyInto(out *HealthCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HealthCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckList.
func (in *HealthCheckList) DeepCopy() *HealthCheckList {
	if in == nil {
		return nil
	}
	out := new(HealthCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckLogConfigObservation) DeepCopyInto(out *HealthCheckLogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckLogConfigObservation.
func (in *HealthCheckLogConfigObservation) DeepCopy() *HealthCheckLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckLogConfigParameters) DeepCopyInto(out *HealthCheckLogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckLogConfigParameters.
func (in *HealthCheckLogConfigParameters) DeepCopy() *HealthCheckLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckObservation) DeepCopyInto(out *HealthCheckObservation) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]GRPCHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]HTTPHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]HTTPSHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]Http2HealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]HealthCheckLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]SSLHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]TCPHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckObservation.
func (in *HealthCheckObservation) DeepCopy() *HealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(HealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckParameters) DeepCopyInto(out *HealthCheckParameters) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]GRPCHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]HTTPHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]HTTPSHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]Http2HealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]HealthCheckLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]SSLHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]TCPHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckParameters.
func (in *HealthCheckParameters) DeepCopy() *HealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(HealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckSpec) DeepCopyInto(out *HealthCheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckSpec.
func (in *HealthCheckSpec) DeepCopy() *HealthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(HealthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckStatus) DeepCopyInto(out *HealthCheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckStatus.
func (in *HealthCheckStatus) DeepCopy() *HealthCheckStatus {
	if in == nil {
		return nil
	}
	out := new(HealthCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRuleObservation) DeepCopyInto(out *HostRuleObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRuleObservation.
func (in *HostRuleObservation) DeepCopy() *HostRuleObservation {
	if in == nil {
		return nil
	}
	out := new(HostRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRuleParameters) DeepCopyInto(out *HostRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRuleParameters.
func (in *HostRuleParameters) DeepCopy() *HostRuleParameters {
	if in == nil {
		return nil
	}
	out := new(HostRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2HealthCheckObservation) DeepCopyInto(out *Http2HealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2HealthCheckObservation.
func (in *Http2HealthCheckObservation) DeepCopy() *Http2HealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(Http2HealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Http2HealthCheckParameters) DeepCopyInto(out *Http2HealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Http2HealthCheckParameters.
func (in *Http2HealthCheckParameters) DeepCopy() *Http2HealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(Http2HealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6AccessConfigObservation) DeepCopyInto(out *IPv6AccessConfigObservation) {
	*out = *in
	if in.ExternalIPv6 != nil {
		in, out := &in.ExternalIPv6, &out.ExternalIPv6
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6PrefixLength != nil {
		in, out := &in.ExternalIPv6PrefixLength, &out.ExternalIPv6PrefixLength
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
	if in.PublicPtrDomainName != nil {
		in, out := &in.PublicPtrDomainName, &out.PublicPtrDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6AccessConfigObservation.
func (in *IPv6AccessConfigObservation) DeepCopy() *IPv6AccessConfigObservation {
	if in == nil {
		return nil
	}
	out := new(IPv6AccessConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6AccessConfigParameters) DeepCopyInto(out *IPv6AccessConfigParameters) {
	*out = *in
	if in.NetworkTier != nil {
		in, out := &in.NetworkTier, &out.NetworkTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6AccessConfigParameters.
func (in *IPv6AccessConfigParameters) DeepCopy() *IPv6AccessConfigParameters {
	if in == nil {
		return nil
	}
	out := new(IPv6AccessConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IapObservation) DeepCopyInto(out *IapObservation) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IapObservation.
func (in *IapObservation) DeepCopy() *IapObservation {
	if in == nil {
		return nil
	}
	out := new(IapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IapParameters) DeepCopyInto(out *IapParameters) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
	out.Oauth2ClientSecretSecretRef = in.Oauth2ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IapParameters.
func (in *IapParameters) DeepCopy() *IapParameters {
	if in == nil {
		return nil
	}
	out := new(IapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManager) DeepCopyInto(out *InstanceGroupManager) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManager.
func (in *InstanceGroupManager) DeepCopy() *InstanceGroupManager {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceGroupManager) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerList) DeepCopyInto(out *InstanceGroupManagerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceGroupManager, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerList.
func (in *InstanceGroupManagerList) DeepCopy() *InstanceGroupManagerList {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceGroupManagerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerObservation) DeepCopyInto(out *InstanceGroupManagerObservation) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]AllInstancesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]AutoHealingPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroup != nil {
		in, out := &in.InstanceGroup, &out.InstanceGroup
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]InstanceLifecyclePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]NamedPortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Operation != nil {
		in, out := &in.Operation, &out.Operation
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]ParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]StatefulDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]StatefulExternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]StatefulInternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]StatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerObservation.
func (in *InstanceGroupManagerObservation) DeepCopy() *InstanceGroupManagerObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerParameters) DeepCopyInto(out *InstanceGroupManagerParameters) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]AllInstancesConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]AutoHealingPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]InstanceLifecyclePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]NamedPortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]ParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]StatefulDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]StatefulExternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]StatefulInternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetPoolsRefs != nil {
		in, out := &in.TargetPoolsRefs, &out.TargetPoolsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPoolsSelector != nil {
		in, out := &in.TargetPoolsSelector, &out.TargetPoolsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]UpdatePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]VersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerParameters.
func (in *InstanceGroupManagerParameters) DeepCopy() *InstanceGroupManagerParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerSpec) DeepCopyInto(out *InstanceGroupManagerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerSpec.
func (in *InstanceGroupManagerSpec) DeepCopy() *InstanceGroupManagerSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceGroupManagerStatus) DeepCopyInto(out *InstanceGroupManagerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceGroupManagerStatus.
func (in *InstanceGroupManagerStatus) DeepCopy() *InstanceGroupManagerStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceGroupManagerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLifecyclePolicyObservation) DeepCopyInto(out *InstanceLifecyclePolicyObservation) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLifecyclePolicyObservation.
func (in *InstanceLifecyclePolicyObservation) DeepCopy() *InstanceLifecyclePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceLifecyclePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLifecyclePolicyParameters) DeepCopyInto(out *InstanceLifecyclePolicyParameters) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLifecyclePolicyParameters.
func (in *InstanceLifecyclePolicyParameters) DeepCopy() *InstanceLifecyclePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceLifecyclePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplate) DeepCopyInto(out *InstanceTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplate.
func (in *InstanceTemplate) DeepCopy() *InstanceTemplate {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateList) DeepCopyInto(out *InstanceTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateList.
func (in *InstanceTemplateList) DeepCopy() *InstanceTemplateList {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateObservation) DeepCopyInto(out *InstanceTemplateObservation) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]AdvancedMachineFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]ConfidentialInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EffectiveLabels != nil {
		in, out := &in.EffectiveLabels, &out.EffectiveLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.EnableDisplay != nil {
		in, out := &in.EnableDisplay, &out.EnableDisplay
		*out = new(bool)
		**out = **in
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]GuestAcceleratorObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDescription != nil {
		in, out := &in.InstanceDescription, &out.InstanceDescription
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MetadataFingerprint != nil {
		in, out := &in.MetadataFingerprint, &out.MetadataFingerprint
		*out = new(string)
		**out = **in
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]NetworkPerformanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]ReservationAffinityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SelfLinkUnique != nil {
		in, out := &in.SelfLinkUnique, &out.SelfLinkUnique
		*out = new(string)
		**out = **in
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]ServiceAccountObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TagsFingerprint != nil {
		in, out := &in.TagsFingerprint, &out.TagsFingerprint
		*out = new(string)
		**out = **in
	}
	if in.TerraformLabels != nil {
		in, out := &in.TerraformLabels, &out.TerraformLabels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateObservation.
func (in *InstanceTemplateObservation) DeepCopy() *InstanceTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateParameters) DeepCopyInto(out *InstanceTemplateParameters) {
	*out = *in
	if in.AdvancedMachineFeatures != nil {
		in, out := &in.AdvancedMachineFeatures, &out.AdvancedMachineFeatures
		*out = make([]AdvancedMachineFeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CanIPForward != nil {
		in, out := &in.CanIPForward, &out.CanIPForward
		*out = new(bool)
		**out = **in
	}
	if in.ConfidentialInstanceConfig != nil {
		in, out := &in.ConfidentialInstanceConfig, &out.ConfidentialInstanceConfig
		*out = make([]ConfidentialInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnableDisplay != nil {
		in, out := &in.EnableDisplay, &out.EnableDisplay
		*out = new(bool)
		**out = **in
	}
	if in.GuestAccelerator != nil {
		in, out := &in.GuestAccelerator, &out.GuestAccelerator
		*out = make([]GuestAcceleratorParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceDescription != nil {
		in, out := &in.InstanceDescription, &out.InstanceDescription
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MetadataStartupScript != nil {
		in, out := &in.MetadataStartupScript, &out.MetadataStartupScript
		*out = new(string)
		**out = **in
	}
	if in.MinCPUPlatform != nil {
		in, out := &in.MinCPUPlatform, &out.MinCPUPlatform
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamePrefix != nil {
		in, out := &in.NamePrefix, &out.NamePrefix
		*out = new(string)
		**out = **in
	}
	if in.NetworkInterface != nil {
		in, out := &in.NetworkInterface, &out.NetworkInterface
		*out = make([]NetworkInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkPerformanceConfig != nil {
		in, out := &in.NetworkPerformanceConfig, &out.NetworkPerformanceConfig
		*out = make([]NetworkPerformanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ReservationAffinity != nil {
		in, out := &in.ReservationAffinity, &out.ReservationAffinity
		*out = make([]ReservationAffinityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourcePolicies != nil {
		in, out := &in.ResourcePolicies, &out.ResourcePolicies
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scheduling != nil {
		in, out := &in.Scheduling, &out.Scheduling
		*out = make([]SchedulingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServiceAccount != nil {
		in, out := &in.ServiceAccount, &out.ServiceAccount
		*out = make([]ServiceAccountParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShieldedInstanceConfig != nil {
		in, out := &in.ShieldedInstanceConfig, &out.ShieldedInstanceConfig
		*out = make([]ShieldedInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateParameters.
func (in *InstanceTemplateParameters) DeepCopy() *InstanceTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateSpec) DeepCopyInto(out *InstanceTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateSpec.
func (in *InstanceTemplateSpec) DeepCopy() *InstanceTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceTemplateStatus) DeepCopyInto(out *InstanceTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceTemplateStatus.
func (in *InstanceTemplateStatus) DeepCopy() *InstanceTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntervalObservation) DeepCopyInto(out *IntervalObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntervalObservation.
func (in *IntervalObservation) DeepCopy() *IntervalObservation {
	if in == nil {
		return nil
	}
	out := new(IntervalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntervalParameters) DeepCopyInto(out *IntervalParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntervalParameters.
func (in *IntervalParameters) DeepCopy() *IntervalParameters {
	if in == nil {
		return nil
	}
	out := new(IntervalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSsdRecoveryTimeoutObservation) DeepCopyInto(out *LocalSsdRecoveryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSsdRecoveryTimeoutObservation.
func (in *LocalSsdRecoveryTimeoutObservation) DeepCopy() *LocalSsdRecoveryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(LocalSsdRecoveryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalSsdRecoveryTimeoutParameters) DeepCopyInto(out *LocalSsdRecoveryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalSsdRecoveryTimeoutParameters.
func (in *LocalSsdRecoveryTimeoutParameters) DeepCopy() *LocalSsdRecoveryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(LocalSsdRecoveryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalityLBPoliciesObservation) DeepCopyInto(out *LocalityLBPoliciesObservation) {
	*out = *in
	if in.CustomPolicy != nil {
		in, out := &in.CustomPolicy, &out.CustomPolicy
		*out = make([]CustomPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalityLBPoliciesObservation.
func (in *LocalityLBPoliciesObservation) DeepCopy() *LocalityLBPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(LocalityLBPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalityLBPoliciesParameters) DeepCopyInto(out *LocalityLBPoliciesParameters) {
	*out = *in
	if in.CustomPolicy != nil {
		in, out := &in.CustomPolicy, &out.CustomPolicy
		*out = make([]CustomPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalityLBPoliciesParameters.
func (in *LocalityLBPoliciesParameters) DeepCopy() *LocalityLBPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(LocalityLBPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfigObservation) DeepCopyInto(out *LogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfigObservation.
func (in *LogConfigObservation) DeepCopy() *LogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogConfigParameters) DeepCopyInto(out *LogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogConfigParameters.
func (in *LogConfigParameters) DeepCopy() *LogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersObservation) DeepCopyInto(out *MatchRulesMetadataFiltersObservation) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MetadataFiltersFilterLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersObservation.
func (in *MatchRulesMetadataFiltersObservation) DeepCopy() *MatchRulesMetadataFiltersObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersParameters) DeepCopyInto(out *MatchRulesMetadataFiltersParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MetadataFiltersFilterLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersParameters.
func (in *MatchRulesMetadataFiltersParameters) DeepCopy() *MatchRulesMetadataFiltersParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesObservation) DeepCopyInto(out *MatchRulesObservation) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]HeaderMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MatchRulesMetadataFiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]QueryParameterMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesObservation.
func (in *MatchRulesObservation) DeepCopy() *MatchRulesObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesParameters) DeepCopyInto(out *MatchRulesParameters) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]HeaderMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MatchRulesMetadataFiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathTemplateMatch != nil {
		in, out := &in.PathTemplateMatch, &out.PathTemplateMatch
		*out = new(string)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]QueryParameterMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesParameters.
func (in *MatchRulesParameters) DeepCopy() *MatchRulesParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxRunDurationObservation) DeepCopyInto(out *MaxRunDurationObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxRunDurationObservation.
func (in *MaxRunDurationObservation) DeepCopy() *MaxRunDurationObservation {
	if in == nil {
		return nil
	}
	out := new(MaxRunDurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MaxRunDurationParameters) DeepCopyInto(out *MaxRunDurationParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MaxRunDurationParameters.
func (in *MaxRunDurationParameters) DeepCopy() *MaxRunDurationParameters {
	if in == nil {
		return nil
	}
	out := new(MaxRunDurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersFilterLabelsObservation) DeepCopyInto(out *MetadataFiltersFilterLabelsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersFilterLabelsObservation.
func (in *MetadataFiltersFilterLabelsObservation) DeepCopy() *MetadataFiltersFilterLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersFilterLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersFilterLabelsParameters) DeepCopyInto(out *MetadataFiltersFilterLabelsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersFilterLabelsParameters.
func (in *MetadataFiltersFilterLabelsParameters) DeepCopy() *MetadataFiltersFilterLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersFilterLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersObservation) DeepCopyInto(out *MetadataFiltersObservation) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]FilterLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersObservation.
func (in *MetadataFiltersObservation) DeepCopy() *MetadataFiltersObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersParameters) DeepCopyInto(out *MetadataFiltersParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]FilterLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersParameters.
func (in *MetadataFiltersParameters) DeepCopy() *MetadataFiltersParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedPortObservation) DeepCopyInto(out *NamedPortObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedPortObservation.
func (in *NamedPortObservation) DeepCopy() *NamedPortObservation {
	if in == nil {
		return nil
	}
	out := new(NamedPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedPortParameters) DeepCopyInto(out *NamedPortParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedPortParameters.
func (in *NamedPortParameters) DeepCopy() *NamedPortParameters {
	if in == nil {
		return nil
	}
	out := new(NamedPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NegativeCachingPolicyObservation) DeepCopyInto(out *NegativeCachingPolicyObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NegativeCachingPolicyObservation.
func (in *NegativeCachingPolicyObservation) DeepCopy() *NegativeCachingPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(NegativeCachingPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NegativeCachingPolicyParameters) DeepCopyInto(out *NegativeCachingPolicyParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NegativeCachingPolicyParameters.
func (in *NegativeCachingPolicyParameters) DeepCopy() *NegativeCachingPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(NegativeCachingPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network) DeepCopyInto(out *Network) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network.
func (in *Network) DeepCopy() *Network {
	if in == nil {
		return nil
	}
	out := new(Network)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Network) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceObservation) DeepCopyInto(out *NetworkInterfaceObservation) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]AliasIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]IPv6AccessConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkAttachment != nil {
		in, out := &in.NetworkAttachment, &out.NetworkAttachment
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceObservation.
func (in *NetworkInterfaceObservation) DeepCopy() *NetworkInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterfaceParameters) DeepCopyInto(out *NetworkInterfaceParameters) {
	*out = *in
	if in.AccessConfig != nil {
		in, out := &in.AccessConfig, &out.AccessConfig
		*out = make([]AccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AliasIPRange != nil {
		in, out := &in.AliasIPRange, &out.AliasIPRange
		*out = make([]AliasIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6AccessConfig != nil {
		in, out := &in.IPv6AccessConfig, &out.IPv6AccessConfig
		*out = make([]IPv6AccessConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6PrefixLength != nil {
		in, out := &in.InternalIPv6PrefixLength, &out.InternalIPv6PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkAttachment != nil {
		in, out := &in.NetworkAttachment, &out.NetworkAttachment
		*out = new(string)
		**out = **in
	}
	if in.NetworkIP != nil {
		in, out := &in.NetworkIP, &out.NetworkIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.NicType != nil {
		in, out := &in.NicType, &out.NicType
		*out = new(string)
		**out = **in
	}
	if in.QueueCount != nil {
		in, out := &in.QueueCount, &out.QueueCount
		*out = new(float64)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
	if in.Subnetwork != nil {
		in, out := &in.Subnetwork, &out.Subnetwork
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkProject != nil {
		in, out := &in.SubnetworkProject, &out.SubnetworkProject
		*out = new(string)
		**out = **in
	}
	if in.SubnetworkRef != nil {
		in, out := &in.SubnetworkRef, &out.SubnetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetworkSelector != nil {
		in, out := &in.SubnetworkSelector, &out.SubnetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterfaceParameters.
func (in *NetworkInterfaceParameters) DeepCopy() *NetworkInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkList) DeepCopyInto(out *NetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Network, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkList.
func (in *NetworkList) DeepCopy() *NetworkList {
	if in == nil {
		return nil
	}
	out := new(NetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.AutoCreateSubnetworks != nil {
		in, out := &in.AutoCreateSubnetworks, &out.AutoCreateSubnetworks
		*out = new(bool)
		**out = **in
	}
	if in.DeleteDefaultRoutesOnCreate != nil {
		in, out := &in.DeleteDefaultRoutesOnCreate, &out.DeleteDefaultRoutesOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableUlaInternalIPv6 != nil {
		in, out := &in.EnableUlaInternalIPv6, &out.EnableUlaInternalIPv6
		*out = new(bool)
		**out = **in
	}
	if in.GatewayIPv4 != nil {
		in, out := &in.GatewayIPv4, &out.GatewayIPv4
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6Range != nil {
		in, out := &in.InternalIPv6Range, &out.InternalIPv6Range
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.NetworkFirewallPolicyEnforcementOrder != nil {
		in, out := &in.NetworkFirewallPolicyEnforcementOrder, &out.NetworkFirewallPolicyEnforcementOrder
		*out = new(string)
		**out = **in
	}
	if in.NumericID != nil {
		in, out := &in.NumericID, &out.NumericID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingMode != nil {
		in, out := &in.RoutingMode, &out.RoutingMode
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.AutoCreateSubnetworks != nil {
		in, out := &in.AutoCreateSubnetworks, &out.AutoCreateSubnetworks
		*out = new(bool)
		**out = **in
	}
	if in.DeleteDefaultRoutesOnCreate != nil {
		in, out := &in.DeleteDefaultRoutesOnCreate, &out.DeleteDefaultRoutesOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableUlaInternalIPv6 != nil {
		in, out := &in.EnableUlaInternalIPv6, &out.EnableUlaInternalIPv6
		*out = new(bool)
		**out = **in
	}
	if in.InternalIPv6Range != nil {
		in, out := &in.InternalIPv6Range, &out.InternalIPv6Range
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.NetworkFirewallPolicyEnforcementOrder != nil {
		in, out := &in.NetworkFirewallPolicyEnforcementOrder, &out.NetworkFirewallPolicyEnforcementOrder
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingMode != nil {
		in, out := &in.RoutingMode, &out.RoutingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPerformanceConfigObservation) DeepCopyInto(out *NetworkPerformanceConfigObservation) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPerformanceConfigObservation.
func (in *NetworkPerformanceConfigObservation) DeepCopy() *NetworkPerformanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkPerformanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPerformanceConfigParameters) DeepCopyInto(out *NetworkPerformanceConfigParameters) {
	*out = *in
	if in.TotalEgressBandwidthTier != nil {
		in, out := &in.TotalEgressBandwidthTier, &out.TotalEgressBandwidthTier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPerformanceConfigParameters.
func (in *NetworkPerformanceConfigParameters) DeepCopy() *NetworkPerformanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkPerformanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSpec) DeepCopyInto(out *NetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSpec.
func (in *NetworkSpec) DeepCopy() *NetworkSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkStatus) DeepCopyInto(out *NetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkStatus.
func (in *NetworkStatus) DeepCopy() *NetworkStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinitiesObservation) DeepCopyInto(out *NodeAffinitiesObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinitiesObservation.
func (in *NodeAffinitiesObservation) DeepCopy() *NodeAffinitiesObservation {
	if in == nil {
		return nil
	}
	out := new(NodeAffinitiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAffinitiesParameters) DeepCopyInto(out *NodeAffinitiesParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAffinitiesParameters.
func (in *NodeAffinitiesParameters) DeepCopy() *NodeAffinitiesParameters {
	if in == nil {
		return nil
	}
	out := new(NodeAffinitiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionBaseEjectionTimeObservation) DeepCopyInto(out *OutlierDetectionBaseEjectionTimeObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionBaseEjectionTimeObservation.
func (in *OutlierDetectionBaseEjectionTimeObservation) DeepCopy() *OutlierDetectionBaseEjectionTimeObservation {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionBaseEjectionTimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionBaseEjectionTimeParameters) DeepCopyInto(out *OutlierDetectionBaseEjectionTimeParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionBaseEjectionTimeParameters.
func (in *OutlierDetectionBaseEjectionTimeParameters) DeepCopy() *OutlierDetectionBaseEjectionTimeParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionBaseEjectionTimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionIntervalObservation) DeepCopyInto(out *OutlierDetectionIntervalObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionIntervalObservation.
func (in *OutlierDetectionIntervalObservation) DeepCopy() *OutlierDetectionIntervalObservation {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionIntervalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionIntervalParameters) DeepCopyInto(out *OutlierDetectionIntervalParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionIntervalParameters.
func (in *OutlierDetectionIntervalParameters) DeepCopy() *OutlierDetectionIntervalParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionIntervalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionObservation) DeepCopyInto(out *OutlierDetectionObservation) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]BaseEjectionTimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]IntervalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionObservation.
func (in *OutlierDetectionObservation) DeepCopy() *OutlierDetectionObservation {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OutlierDetectionParameters) DeepCopyInto(out *OutlierDetectionParameters) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]BaseEjectionTimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]IntervalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OutlierDetectionParameters.
func (in *OutlierDetectionParameters) DeepCopy() *OutlierDetectionParameters {
	if in == nil {
		return nil
	}
	out := new(OutlierDetectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParamsObservation) DeepCopyInto(out *ParamsObservation) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParamsObservation.
func (in *ParamsObservation) DeepCopy() *ParamsObservation {
	if in == nil {
		return nil
	}
	out := new(ParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParamsParameters) DeepCopyInto(out *ParamsParameters) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParamsParameters.
func (in *ParamsParameters) DeepCopy() *ParamsParameters {
	if in == nil {
		return nil
	}
	out := new(ParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultURLRedirectObservation) DeepCopyInto(out *PathMatcherDefaultURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultURLRedirectObservation.
func (in *PathMatcherDefaultURLRedirectObservation) DeepCopy() *PathMatcherDefaultURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultURLRedirectParameters) DeepCopyInto(out *PathMatcherDefaultURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultURLRedirectParameters.
func (in *PathMatcherDefaultURLRedirectParameters) DeepCopy() *PathMatcherDefaultURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherObservation) DeepCopyInto(out *PathMatcherObservation) {
	*out = *in
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]PathMatcherDefaultURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherObservation.
func (in *PathMatcherObservation) DeepCopy() *PathMatcherObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherParameters) DeepCopyInto(out *PathMatcherParameters) {
	*out = *in
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]PathMatcherDefaultURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherParameters.
func (in *PathMatcherParameters) DeepCopy() *PathMatcherParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleObservation) DeepCopyInto(out *PathRuleObservation) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]URLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleObservation.
func (in *PathRuleObservation) DeepCopy() *PathRuleObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleParameters) DeepCopyInto(out *PathRuleParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]URLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleParameters.
func (in *PathRuleParameters) DeepCopy() *PathRuleParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigsObservation) DeepCopyInto(out *PerInstanceConfigsObservation) {
	*out = *in
	if in.AllEffective != nil {
		in, out := &in.AllEffective, &out.AllEffective
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigsObservation.
func (in *PerInstanceConfigsObservation) DeepCopy() *PerInstanceConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerInstanceConfigsParameters) DeepCopyInto(out *PerInstanceConfigsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerInstanceConfigsParameters.
func (in *PerInstanceConfigsParameters) DeepCopy() *PerInstanceConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(PerInstanceConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerTryTimeoutObservation) DeepCopyInto(out *PerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerTryTimeoutObservation.
func (in *PerTryTimeoutObservation) DeepCopy() *PerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(PerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerTryTimeoutParameters) DeepCopyInto(out *PerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerTryTimeoutParameters.
func (in *PerTryTimeoutParameters) DeepCopy() *PerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(PerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterMatchesObservation) DeepCopyInto(out *QueryParameterMatchesObservation) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterMatchesObservation.
func (in *QueryParameterMatchesObservation) DeepCopy() *QueryParameterMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(QueryParameterMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterMatchesParameters) DeepCopyInto(out *QueryParameterMatchesParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterMatchesParameters.
func (in *QueryParameterMatchesParameters) DeepCopy() *QueryParameterMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameterMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeMatchObservation) DeepCopyInto(out *RangeMatchObservation) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeMatchObservation.
func (in *RangeMatchObservation) DeepCopy() *RangeMatchObservation {
	if in == nil {
		return nil
	}
	out := new(RangeMatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeMatchParameters) DeepCopyInto(out *RangeMatchParameters) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeMatchParameters.
func (in *RangeMatchParameters) DeepCopy() *RangeMatchParameters {
	if in == nil {
		return nil
	}
	out := new(RangeMatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendService) DeepCopyInto(out *RegionBackendService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendService.
func (in *RegionBackendService) DeepCopy() *RegionBackendService {
	if in == nil {
		return nil
	}
	out := new(RegionBackendService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionBackendService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceBackendObservation) DeepCopyInto(out *RegionBackendServiceBackendObservation) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceBackendObservation.
func (in *RegionBackendServiceBackendObservation) DeepCopy() *RegionBackendServiceBackendObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceBackendObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceBackendParameters) DeepCopyInto(out *RegionBackendServiceBackendParameters) {
	*out = *in
	if in.BalancingMode != nil {
		in, out := &in.BalancingMode, &out.BalancingMode
		*out = new(string)
		**out = **in
	}
	if in.CapacityScaler != nil {
		in, out := &in.CapacityScaler, &out.CapacityScaler
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Failover != nil {
		in, out := &in.Failover, &out.Failover
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.GroupRef != nil {
		in, out := &in.GroupRef, &out.GroupRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GroupSelector != nil {
		in, out := &in.GroupSelector, &out.GroupSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerEndpoint != nil {
		in, out := &in.MaxConnectionsPerEndpoint, &out.MaxConnectionsPerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxConnectionsPerInstance != nil {
		in, out := &in.MaxConnectionsPerInstance, &out.MaxConnectionsPerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxRate != nil {
		in, out := &in.MaxRate, &out.MaxRate
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerEndpoint != nil {
		in, out := &in.MaxRatePerEndpoint, &out.MaxRatePerEndpoint
		*out = new(float64)
		**out = **in
	}
	if in.MaxRatePerInstance != nil {
		in, out := &in.MaxRatePerInstance, &out.MaxRatePerInstance
		*out = new(float64)
		**out = **in
	}
	if in.MaxUtilization != nil {
		in, out := &in.MaxUtilization, &out.MaxUtilization
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceBackendParameters.
func (in *RegionBackendServiceBackendParameters) DeepCopy() *RegionBackendServiceBackendParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceBackendParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyObservation) DeepCopyInto(out *RegionBackendServiceCdnPolicyObservation) {
	*out = *in
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CdnPolicyCacheKeyPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]CdnPolicyNegativeCachingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyObservation.
func (in *RegionBackendServiceCdnPolicyObservation) DeepCopy() *RegionBackendServiceCdnPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCdnPolicyParameters) DeepCopyInto(out *RegionBackendServiceCdnPolicyParameters) {
	*out = *in
	if in.CacheKeyPolicy != nil {
		in, out := &in.CacheKeyPolicy, &out.CacheKeyPolicy
		*out = make([]CdnPolicyCacheKeyPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CacheMode != nil {
		in, out := &in.CacheMode, &out.CacheMode
		*out = new(string)
		**out = **in
	}
	if in.ClientTTL != nil {
		in, out := &in.ClientTTL, &out.ClientTTL
		*out = new(float64)
		**out = **in
	}
	if in.DefaultTTL != nil {
		in, out := &in.DefaultTTL, &out.DefaultTTL
		*out = new(float64)
		**out = **in
	}
	if in.MaxTTL != nil {
		in, out := &in.MaxTTL, &out.MaxTTL
		*out = new(float64)
		**out = **in
	}
	if in.NegativeCaching != nil {
		in, out := &in.NegativeCaching, &out.NegativeCaching
		*out = new(bool)
		**out = **in
	}
	if in.NegativeCachingPolicy != nil {
		in, out := &in.NegativeCachingPolicy, &out.NegativeCachingPolicy
		*out = make([]CdnPolicyNegativeCachingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ServeWhileStale != nil {
		in, out := &in.ServeWhileStale, &out.ServeWhileStale
		*out = new(float64)
		**out = **in
	}
	if in.SignedURLCacheMaxAgeSec != nil {
		in, out := &in.SignedURLCacheMaxAgeSec, &out.SignedURLCacheMaxAgeSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCdnPolicyParameters.
func (in *RegionBackendServiceCdnPolicyParameters) DeepCopy() *RegionBackendServiceCdnPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCdnPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCircuitBreakersObservation) DeepCopyInto(out *RegionBackendServiceCircuitBreakersObservation) {
	*out = *in
	if in.ConnectTimeout != nil {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		*out = make([]CircuitBreakersConnectTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCircuitBreakersObservation.
func (in *RegionBackendServiceCircuitBreakersObservation) DeepCopy() *RegionBackendServiceCircuitBreakersObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCircuitBreakersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceCircuitBreakersParameters) DeepCopyInto(out *RegionBackendServiceCircuitBreakersParameters) {
	*out = *in
	if in.ConnectTimeout != nil {
		in, out := &in.ConnectTimeout, &out.ConnectTimeout
		*out = make([]CircuitBreakersConnectTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(float64)
		**out = **in
	}
	if in.MaxPendingRequests != nil {
		in, out := &in.MaxPendingRequests, &out.MaxPendingRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequests != nil {
		in, out := &in.MaxRequests, &out.MaxRequests
		*out = new(float64)
		**out = **in
	}
	if in.MaxRequestsPerConnection != nil {
		in, out := &in.MaxRequestsPerConnection, &out.MaxRequestsPerConnection
		*out = new(float64)
		**out = **in
	}
	if in.MaxRetries != nil {
		in, out := &in.MaxRetries, &out.MaxRetries
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceCircuitBreakersParameters.
func (in *RegionBackendServiceCircuitBreakersParameters) DeepCopy() *RegionBackendServiceCircuitBreakersParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceCircuitBreakersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceConsistentHashObservation) DeepCopyInto(out *RegionBackendServiceConsistentHashObservation) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]ConsistentHashHTTPCookieObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceConsistentHashObservation.
func (in *RegionBackendServiceConsistentHashObservation) DeepCopy() *RegionBackendServiceConsistentHashObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceConsistentHashObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceConsistentHashParameters) DeepCopyInto(out *RegionBackendServiceConsistentHashParameters) {
	*out = *in
	if in.HTTPCookie != nil {
		in, out := &in.HTTPCookie, &out.HTTPCookie
		*out = make([]ConsistentHashHTTPCookieParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHeaderName != nil {
		in, out := &in.HTTPHeaderName, &out.HTTPHeaderName
		*out = new(string)
		**out = **in
	}
	if in.MinimumRingSize != nil {
		in, out := &in.MinimumRingSize, &out.MinimumRingSize
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceConsistentHashParameters.
func (in *RegionBackendServiceConsistentHashParameters) DeepCopy() *RegionBackendServiceConsistentHashParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceConsistentHashParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceIapObservation) DeepCopyInto(out *RegionBackendServiceIapObservation) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceIapObservation.
func (in *RegionBackendServiceIapObservation) DeepCopy() *RegionBackendServiceIapObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceIapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceIapParameters) DeepCopyInto(out *RegionBackendServiceIapParameters) {
	*out = *in
	if in.Oauth2ClientID != nil {
		in, out := &in.Oauth2ClientID, &out.Oauth2ClientID
		*out = new(string)
		**out = **in
	}
	out.Oauth2ClientSecretSecretRef = in.Oauth2ClientSecretSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceIapParameters.
func (in *RegionBackendServiceIapParameters) DeepCopy() *RegionBackendServiceIapParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceIapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceList) DeepCopyInto(out *RegionBackendServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionBackendService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceList.
func (in *RegionBackendServiceList) DeepCopy() *RegionBackendServiceList {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionBackendServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceLogConfigObservation) DeepCopyInto(out *RegionBackendServiceLogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceLogConfigObservation.
func (in *RegionBackendServiceLogConfigObservation) DeepCopy() *RegionBackendServiceLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceLogConfigParameters) DeepCopyInto(out *RegionBackendServiceLogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.SampleRate != nil {
		in, out := &in.SampleRate, &out.SampleRate
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceLogConfigParameters.
func (in *RegionBackendServiceLogConfigParameters) DeepCopy() *RegionBackendServiceLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceObservation) DeepCopyInto(out *RegionBackendServiceObservation) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]RegionBackendServiceBackendObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]RegionBackendServiceCdnPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]RegionBackendServiceCircuitBreakersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConnectionTrackingPolicy != nil {
		in, out := &in.ConnectionTrackingPolicy, &out.ConnectionTrackingPolicy
		*out = make([]ConnectionTrackingPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]RegionBackendServiceConsistentHashObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.FailoverPolicy != nil {
		in, out := &in.FailoverPolicy, &out.FailoverPolicy
		*out = make([]FailoverPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.GeneratedID != nil {
		in, out := &in.GeneratedID, &out.GeneratedID
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]RegionBackendServiceIapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionBackendServiceLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]RegionBackendServiceOutlierDetectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.Subsetting != nil {
		in, out := &in.Subsetting, &out.Subsetting
		*out = make([]SubsettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceObservation.
func (in *RegionBackendServiceObservation) DeepCopy() *RegionBackendServiceObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceOutlierDetectionObservation) DeepCopyInto(out *RegionBackendServiceOutlierDetectionObservation) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]OutlierDetectionBaseEjectionTimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]OutlierDetectionIntervalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceOutlierDetectionObservation.
func (in *RegionBackendServiceOutlierDetectionObservation) DeepCopy() *RegionBackendServiceOutlierDetectionObservation {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceOutlierDetectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceOutlierDetectionParameters) DeepCopyInto(out *RegionBackendServiceOutlierDetectionParameters) {
	*out = *in
	if in.BaseEjectionTime != nil {
		in, out := &in.BaseEjectionTime, &out.BaseEjectionTime
		*out = make([]OutlierDetectionBaseEjectionTimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsecutiveErrors != nil {
		in, out := &in.ConsecutiveErrors, &out.ConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveGatewayFailure != nil {
		in, out := &in.ConsecutiveGatewayFailure, &out.ConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveErrors != nil {
		in, out := &in.EnforcingConsecutiveErrors, &out.EnforcingConsecutiveErrors
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingConsecutiveGatewayFailure != nil {
		in, out := &in.EnforcingConsecutiveGatewayFailure, &out.EnforcingConsecutiveGatewayFailure
		*out = new(float64)
		**out = **in
	}
	if in.EnforcingSuccessRate != nil {
		in, out := &in.EnforcingSuccessRate, &out.EnforcingSuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = make([]OutlierDetectionIntervalParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxEjectionPercent != nil {
		in, out := &in.MaxEjectionPercent, &out.MaxEjectionPercent
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateMinimumHosts != nil {
		in, out := &in.SuccessRateMinimumHosts, &out.SuccessRateMinimumHosts
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateRequestVolume != nil {
		in, out := &in.SuccessRateRequestVolume, &out.SuccessRateRequestVolume
		*out = new(float64)
		**out = **in
	}
	if in.SuccessRateStdevFactor != nil {
		in, out := &in.SuccessRateStdevFactor, &out.SuccessRateStdevFactor
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceOutlierDetectionParameters.
func (in *RegionBackendServiceOutlierDetectionParameters) DeepCopy() *RegionBackendServiceOutlierDetectionParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceOutlierDetectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceParameters) DeepCopyInto(out *RegionBackendServiceParameters) {
	*out = *in
	if in.AffinityCookieTTLSec != nil {
		in, out := &in.AffinityCookieTTLSec, &out.AffinityCookieTTLSec
		*out = new(float64)
		**out = **in
	}
	if in.Backend != nil {
		in, out := &in.Backend, &out.Backend
		*out = make([]RegionBackendServiceBackendParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CdnPolicy != nil {
		in, out := &in.CdnPolicy, &out.CdnPolicy
		*out = make([]RegionBackendServiceCdnPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CircuitBreakers != nil {
		in, out := &in.CircuitBreakers, &out.CircuitBreakers
		*out = make([]RegionBackendServiceCircuitBreakersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConnectionDrainingTimeoutSec != nil {
		in, out := &in.ConnectionDrainingTimeoutSec, &out.ConnectionDrainingTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ConnectionTrackingPolicy != nil {
		in, out := &in.ConnectionTrackingPolicy, &out.ConnectionTrackingPolicy
		*out = make([]ConnectionTrackingPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsistentHash != nil {
		in, out := &in.ConsistentHash, &out.ConsistentHash
		*out = make([]RegionBackendServiceConsistentHashParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableCdn != nil {
		in, out := &in.EnableCdn, &out.EnableCdn
		*out = new(bool)
		**out = **in
	}
	if in.FailoverPolicy != nil {
		in, out := &in.FailoverPolicy, &out.FailoverPolicy
		*out = make([]FailoverPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Iap != nil {
		in, out := &in.Iap, &out.Iap
		*out = make([]RegionBackendServiceIapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.LocalityLBPolicy != nil {
		in, out := &in.LocalityLBPolicy, &out.LocalityLBPolicy
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionBackendServiceLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.OutlierDetection != nil {
		in, out := &in.OutlierDetection, &out.OutlierDetection
		*out = make([]RegionBackendServiceOutlierDetectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
	if in.Subsetting != nil {
		in, out := &in.Subsetting, &out.Subsetting
		*out = make([]SubsettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceParameters.
func (in *RegionBackendServiceParameters) DeepCopy() *RegionBackendServiceParameters {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceSpec) DeepCopyInto(out *RegionBackendServiceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceSpec.
func (in *RegionBackendServiceSpec) DeepCopy() *RegionBackendServiceSpec {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionBackendServiceStatus) DeepCopyInto(out *RegionBackendServiceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionBackendServiceStatus.
func (in *RegionBackendServiceStatus) DeepCopy() *RegionBackendServiceStatus {
	if in == nil {
		return nil
	}
	out := new(RegionBackendServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheck) DeepCopyInto(out *RegionHealthCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheck.
func (in *RegionHealthCheck) DeepCopy() *RegionHealthCheck {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionHealthCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckGRPCHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckGRPCHealthCheckObservation) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckGRPCHealthCheckObservation.
func (in *RegionHealthCheckGRPCHealthCheckObservation) DeepCopy() *RegionHealthCheckGRPCHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckGRPCHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckGRPCHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckGRPCHealthCheckParameters) {
	*out = *in
	if in.GRPCServiceName != nil {
		in, out := &in.GRPCServiceName, &out.GRPCServiceName
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckGRPCHealthCheckParameters.
func (in *RegionHealthCheckGRPCHealthCheckParameters) DeepCopy() *RegionHealthCheckGRPCHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckGRPCHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckHTTPHealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPHealthCheckObservation.
func (in *RegionHealthCheckHTTPHealthCheckObservation) DeepCopy() *RegionHealthCheckHTTPHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckHTTPHealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPHealthCheckParameters.
func (in *RegionHealthCheckHTTPHealthCheckParameters) DeepCopy() *RegionHealthCheckHTTPHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPSHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckHTTPSHealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPSHealthCheckObservation.
func (in *RegionHealthCheckHTTPSHealthCheckObservation) DeepCopy() *RegionHealthCheckHTTPSHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPSHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHTTPSHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckHTTPSHealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHTTPSHealthCheckParameters.
func (in *RegionHealthCheckHTTPSHealthCheckParameters) DeepCopy() *RegionHealthCheckHTTPSHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHTTPSHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHttp2HealthCheckObservation) DeepCopyInto(out *RegionHealthCheckHttp2HealthCheckObservation) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHttp2HealthCheckObservation.
func (in *RegionHealthCheckHttp2HealthCheckObservation) DeepCopy() *RegionHealthCheckHttp2HealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHttp2HealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckHttp2HealthCheckParameters) DeepCopyInto(out *RegionHealthCheckHttp2HealthCheckParameters) {
	*out = *in
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.RequestPath != nil {
		in, out := &in.RequestPath, &out.RequestPath
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckHttp2HealthCheckParameters.
func (in *RegionHealthCheckHttp2HealthCheckParameters) DeepCopy() *RegionHealthCheckHttp2HealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckHttp2HealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckList) DeepCopyInto(out *RegionHealthCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionHealthCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckList.
func (in *RegionHealthCheckList) DeepCopy() *RegionHealthCheckList {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionHealthCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckLogConfigObservation) DeepCopyInto(out *RegionHealthCheckLogConfigObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckLogConfigObservation.
func (in *RegionHealthCheckLogConfigObservation) DeepCopy() *RegionHealthCheckLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckLogConfigParameters) DeepCopyInto(out *RegionHealthCheckLogConfigParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckLogConfigParameters.
func (in *RegionHealthCheckLogConfigParameters) DeepCopy() *RegionHealthCheckLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckObservation) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]RegionHealthCheckGRPCHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]RegionHealthCheckHTTPHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]RegionHealthCheckHTTPSHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]RegionHealthCheckHttp2HealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionHealthCheckLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]RegionHealthCheckSSLHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]RegionHealthCheckTCPHealthCheckObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckObservation.
func (in *RegionHealthCheckObservation) DeepCopy() *RegionHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckParameters) {
	*out = *in
	if in.CheckIntervalSec != nil {
		in, out := &in.CheckIntervalSec, &out.CheckIntervalSec
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GRPCHealthCheck != nil {
		in, out := &in.GRPCHealthCheck, &out.GRPCHealthCheck
		*out = make([]RegionHealthCheckGRPCHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPHealthCheck != nil {
		in, out := &in.HTTPHealthCheck, &out.HTTPHealthCheck
		*out = make([]RegionHealthCheckHTTPHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HTTPSHealthCheck != nil {
		in, out := &in.HTTPSHealthCheck, &out.HTTPSHealthCheck
		*out = make([]RegionHealthCheckHTTPSHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthyThreshold != nil {
		in, out := &in.HealthyThreshold, &out.HealthyThreshold
		*out = new(float64)
		**out = **in
	}
	if in.Http2HealthCheck != nil {
		in, out := &in.Http2HealthCheck, &out.Http2HealthCheck
		*out = make([]RegionHealthCheckHttp2HealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]RegionHealthCheckLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLHealthCheck != nil {
		in, out := &in.SSLHealthCheck, &out.SSLHealthCheck
		*out = make([]RegionHealthCheckSSLHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TCPHealthCheck != nil {
		in, out := &in.TCPHealthCheck, &out.TCPHealthCheck
		*out = make([]RegionHealthCheckTCPHealthCheckParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeoutSec != nil {
		in, out := &in.TimeoutSec, &out.TimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.UnhealthyThreshold != nil {
		in, out := &in.UnhealthyThreshold, &out.UnhealthyThreshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckParameters.
func (in *RegionHealthCheckParameters) DeepCopy() *RegionHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckSSLHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckSSLHealthCheckObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckSSLHealthCheckObservation.
func (in *RegionHealthCheckSSLHealthCheckObservation) DeepCopy() *RegionHealthCheckSSLHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckSSLHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckSSLHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckSSLHealthCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckSSLHealthCheckParameters.
func (in *RegionHealthCheckSSLHealthCheckParameters) DeepCopy() *RegionHealthCheckSSLHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckSSLHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckSpec) DeepCopyInto(out *RegionHealthCheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckSpec.
func (in *RegionHealthCheckSpec) DeepCopy() *RegionHealthCheckSpec {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckStatus) DeepCopyInto(out *RegionHealthCheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckStatus.
func (in *RegionHealthCheckStatus) DeepCopy() *RegionHealthCheckStatus {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckTCPHealthCheckObservation) DeepCopyInto(out *RegionHealthCheckTCPHealthCheckObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckTCPHealthCheckObservation.
func (in *RegionHealthCheckTCPHealthCheckObservation) DeepCopy() *RegionHealthCheckTCPHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckTCPHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionHealthCheckTCPHealthCheckParameters) DeepCopyInto(out *RegionHealthCheckTCPHealthCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionHealthCheckTCPHealthCheckParameters.
func (in *RegionHealthCheckTCPHealthCheckParameters) DeepCopy() *RegionHealthCheckTCPHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(RegionHealthCheckTCPHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManager) DeepCopyInto(out *RegionInstanceGroupManager) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManager.
func (in *RegionInstanceGroupManager) DeepCopy() *RegionInstanceGroupManager {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionInstanceGroupManager) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAllInstancesConfigObservation) DeepCopyInto(out *RegionInstanceGroupManagerAllInstancesConfigObservation) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAllInstancesConfigObservation.
func (in *RegionInstanceGroupManagerAllInstancesConfigObservation) DeepCopy() *RegionInstanceGroupManagerAllInstancesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAllInstancesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAllInstancesConfigParameters) DeepCopyInto(out *RegionInstanceGroupManagerAllInstancesConfigParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAllInstancesConfigParameters.
func (in *RegionInstanceGroupManagerAllInstancesConfigParameters) DeepCopy() *RegionInstanceGroupManagerAllInstancesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAllInstancesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesObservation) DeepCopyInto(out *RegionInstanceGroupManagerAutoHealingPoliciesObservation) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAutoHealingPoliciesObservation.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesObservation) DeepCopy() *RegionInstanceGroupManagerAutoHealingPoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAutoHealingPoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesParameters) DeepCopyInto(out *RegionInstanceGroupManagerAutoHealingPoliciesParameters) {
	*out = *in
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = new(string)
		**out = **in
	}
	if in.HealthCheckRef != nil {
		in, out := &in.HealthCheckRef, &out.HealthCheckRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.HealthCheckSelector != nil {
		in, out := &in.HealthCheckSelector, &out.HealthCheckSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialDelaySec != nil {
		in, out := &in.InitialDelaySec, &out.InitialDelaySec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerAutoHealingPoliciesParameters.
func (in *RegionInstanceGroupManagerAutoHealingPoliciesParameters) DeepCopy() *RegionInstanceGroupManagerAutoHealingPoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerAutoHealingPoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyObservation) DeepCopyInto(out *RegionInstanceGroupManagerInstanceLifecyclePolicyObservation) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerInstanceLifecyclePolicyObservation.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyObservation) DeepCopy() *RegionInstanceGroupManagerInstanceLifecyclePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerInstanceLifecyclePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyParameters) DeepCopyInto(out *RegionInstanceGroupManagerInstanceLifecyclePolicyParameters) {
	*out = *in
	if in.DefaultActionOnFailure != nil {
		in, out := &in.DefaultActionOnFailure, &out.DefaultActionOnFailure
		*out = new(string)
		**out = **in
	}
	if in.ForceUpdateOnRepair != nil {
		in, out := &in.ForceUpdateOnRepair, &out.ForceUpdateOnRepair
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerInstanceLifecyclePolicyParameters.
func (in *RegionInstanceGroupManagerInstanceLifecyclePolicyParameters) DeepCopy() *RegionInstanceGroupManagerInstanceLifecyclePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerInstanceLifecyclePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerList) DeepCopyInto(out *RegionInstanceGroupManagerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionInstanceGroupManager, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerList.
func (in *RegionInstanceGroupManagerList) DeepCopy() *RegionInstanceGroupManagerList {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionInstanceGroupManagerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerNamedPortObservation) DeepCopyInto(out *RegionInstanceGroupManagerNamedPortObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerNamedPortObservation.
func (in *RegionInstanceGroupManagerNamedPortObservation) DeepCopy() *RegionInstanceGroupManagerNamedPortObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerNamedPortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerNamedPortParameters) DeepCopyInto(out *RegionInstanceGroupManagerNamedPortParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerNamedPortParameters.
func (in *RegionInstanceGroupManagerNamedPortParameters) DeepCopy() *RegionInstanceGroupManagerNamedPortParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerNamedPortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerObservation) DeepCopyInto(out *RegionInstanceGroupManagerObservation) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]RegionInstanceGroupManagerAllInstancesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]RegionInstanceGroupManagerAutoHealingPoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyTargetShape != nil {
		in, out := &in.DistributionPolicyTargetShape, &out.DistributionPolicyTargetShape
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyZones != nil {
		in, out := &in.DistributionPolicyZones, &out.DistributionPolicyZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceGroup != nil {
		in, out := &in.InstanceGroup, &out.InstanceGroup
		*out = new(string)
		**out = **in
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]RegionInstanceGroupManagerInstanceLifecyclePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]RegionInstanceGroupManagerNamedPortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]RegionInstanceGroupManagerParamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]RegionInstanceGroupManagerStatefulDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]RegionInstanceGroupManagerStatefulExternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]RegionInstanceGroupManagerStatefulInternalIPObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]RegionInstanceGroupManagerStatusObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]RegionInstanceGroupManagerUpdatePolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]RegionInstanceGroupManagerVersionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerObservation.
func (in *RegionInstanceGroupManagerObservation) DeepCopy() *RegionInstanceGroupManagerObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerParameters) DeepCopyInto(out *RegionInstanceGroupManagerParameters) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]RegionInstanceGroupManagerAllInstancesConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoHealingPolicies != nil {
		in, out := &in.AutoHealingPolicies, &out.AutoHealingPolicies
		*out = make([]RegionInstanceGroupManagerAutoHealingPoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseInstanceName != nil {
		in, out := &in.BaseInstanceName, &out.BaseInstanceName
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyTargetShape != nil {
		in, out := &in.DistributionPolicyTargetShape, &out.DistributionPolicyTargetShape
		*out = new(string)
		**out = **in
	}
	if in.DistributionPolicyZones != nil {
		in, out := &in.DistributionPolicyZones, &out.DistributionPolicyZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.InstanceLifecyclePolicy != nil {
		in, out := &in.InstanceLifecyclePolicy, &out.InstanceLifecyclePolicy
		*out = make([]RegionInstanceGroupManagerInstanceLifecyclePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListManagedInstancesResults != nil {
		in, out := &in.ListManagedInstancesResults, &out.ListManagedInstancesResults
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamedPort != nil {
		in, out := &in.NamedPort, &out.NamedPort
		*out = make([]RegionInstanceGroupManagerNamedPortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]RegionInstanceGroupManagerParamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StatefulDisk != nil {
		in, out := &in.StatefulDisk, &out.StatefulDisk
		*out = make([]RegionInstanceGroupManagerStatefulDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulExternalIP != nil {
		in, out := &in.StatefulExternalIP, &out.StatefulExternalIP
		*out = make([]RegionInstanceGroupManagerStatefulExternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StatefulInternalIP != nil {
		in, out := &in.StatefulInternalIP, &out.StatefulInternalIP
		*out = make([]RegionInstanceGroupManagerStatefulInternalIPParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPools != nil {
		in, out := &in.TargetPools, &out.TargetPools
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TargetPoolsRefs != nil {
		in, out := &in.TargetPoolsRefs, &out.TargetPoolsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TargetPoolsSelector != nil {
		in, out := &in.TargetPoolsSelector, &out.TargetPoolsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = new(float64)
		**out = **in
	}
	if in.UpdatePolicy != nil {
		in, out := &in.UpdatePolicy, &out.UpdatePolicy
		*out = make([]RegionInstanceGroupManagerUpdatePolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = make([]RegionInstanceGroupManagerVersionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaitForInstances != nil {
		in, out := &in.WaitForInstances, &out.WaitForInstances
		*out = new(bool)
		**out = **in
	}
	if in.WaitForInstancesStatus != nil {
		in, out := &in.WaitForInstancesStatus, &out.WaitForInstancesStatus
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerParameters.
func (in *RegionInstanceGroupManagerParameters) DeepCopy() *RegionInstanceGroupManagerParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerParamsObservation) DeepCopyInto(out *RegionInstanceGroupManagerParamsObservation) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerParamsObservation.
func (in *RegionInstanceGroupManagerParamsObservation) DeepCopy() *RegionInstanceGroupManagerParamsObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerParamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerParamsParameters) DeepCopyInto(out *RegionInstanceGroupManagerParamsParameters) {
	*out = *in
	if in.ResourceManagerTags != nil {
		in, out := &in.ResourceManagerTags, &out.ResourceManagerTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerParamsParameters.
func (in *RegionInstanceGroupManagerParamsParameters) DeepCopy() *RegionInstanceGroupManagerParamsParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerParamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerSpec) DeepCopyInto(out *RegionInstanceGroupManagerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerSpec.
func (in *RegionInstanceGroupManagerSpec) DeepCopy() *RegionInstanceGroupManagerSpec {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulDiskObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatefulDiskObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulDiskObservation.
func (in *RegionInstanceGroupManagerStatefulDiskObservation) DeepCopy() *RegionInstanceGroupManagerStatefulDiskObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulDiskParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulDiskParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulDiskParameters.
func (in *RegionInstanceGroupManagerStatefulDiskParameters) DeepCopy() *RegionInstanceGroupManagerStatefulDiskParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulExternalIPObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatefulExternalIPObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulExternalIPObservation.
func (in *RegionInstanceGroupManagerStatefulExternalIPObservation) DeepCopy() *RegionInstanceGroupManagerStatefulExternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulExternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulExternalIPParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulExternalIPParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulExternalIPParameters.
func (in *RegionInstanceGroupManagerStatefulExternalIPParameters) DeepCopy() *RegionInstanceGroupManagerStatefulExternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulExternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulInternalIPObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatefulInternalIPObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulInternalIPObservation.
func (in *RegionInstanceGroupManagerStatefulInternalIPObservation) DeepCopy() *RegionInstanceGroupManagerStatefulInternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulInternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatefulInternalIPParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatefulInternalIPParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatefulInternalIPParameters.
func (in *RegionInstanceGroupManagerStatefulInternalIPParameters) DeepCopy() *RegionInstanceGroupManagerStatefulInternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatefulInternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatus) DeepCopyInto(out *RegionInstanceGroupManagerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatus.
func (in *RegionInstanceGroupManagerStatus) DeepCopy() *RegionInstanceGroupManagerStatus {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatusAllInstancesConfigObservation) {
	*out = *in
	if in.CurrentRevision != nil {
		in, out := &in.CurrentRevision, &out.CurrentRevision
		*out = new(string)
		**out = **in
	}
	if in.Effective != nil {
		in, out := &in.Effective, &out.Effective
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusAllInstancesConfigObservation.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigObservation) DeepCopy() *RegionInstanceGroupManagerStatusAllInstancesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusAllInstancesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatusAllInstancesConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusAllInstancesConfigParameters.
func (in *RegionInstanceGroupManagerStatusAllInstancesConfigParameters) DeepCopy() *RegionInstanceGroupManagerStatusAllInstancesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusAllInstancesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusObservation) DeepCopyInto(out *RegionInstanceGroupManagerStatusObservation) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]RegionInstanceGroupManagerStatusAllInstancesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsStable != nil {
		in, out := &in.IsStable, &out.IsStable
		*out = new(bool)
		**out = **in
	}
	if in.Stateful != nil {
		in, out := &in.Stateful, &out.Stateful
		*out = make([]StatusStatefulObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersionTarget != nil {
		in, out := &in.VersionTarget, &out.VersionTarget
		*out = make([]StatusVersionTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusObservation.
func (in *RegionInstanceGroupManagerStatusObservation) DeepCopy() *RegionInstanceGroupManagerStatusObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerStatusParameters) DeepCopyInto(out *RegionInstanceGroupManagerStatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerStatusParameters.
func (in *RegionInstanceGroupManagerStatusParameters) DeepCopy() *RegionInstanceGroupManagerStatusParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerStatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerUpdatePolicyObservation) DeepCopyInto(out *RegionInstanceGroupManagerUpdatePolicyObservation) {
	*out = *in
	if in.InstanceRedistributionType != nil {
		in, out := &in.InstanceRedistributionType, &out.InstanceRedistributionType
		*out = new(string)
		**out = **in
	}
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinReadySec != nil {
		in, out := &in.MinReadySec, &out.MinReadySec
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerUpdatePolicyObservation.
func (in *RegionInstanceGroupManagerUpdatePolicyObservation) DeepCopy() *RegionInstanceGroupManagerUpdatePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerUpdatePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerUpdatePolicyParameters) DeepCopyInto(out *RegionInstanceGroupManagerUpdatePolicyParameters) {
	*out = *in
	if in.InstanceRedistributionType != nil {
		in, out := &in.InstanceRedistributionType, &out.InstanceRedistributionType
		*out = new(string)
		**out = **in
	}
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinReadySec != nil {
		in, out := &in.MinReadySec, &out.MinReadySec
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerUpdatePolicyParameters.
func (in *RegionInstanceGroupManagerUpdatePolicyParameters) DeepCopy() *RegionInstanceGroupManagerUpdatePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerUpdatePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerVersionObservation) DeepCopyInto(out *RegionInstanceGroupManagerVersionObservation) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]VersionTargetSizeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerVersionObservation.
func (in *RegionInstanceGroupManagerVersionObservation) DeepCopy() *RegionInstanceGroupManagerVersionObservation {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerVersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionInstanceGroupManagerVersionParameters) DeepCopyInto(out *RegionInstanceGroupManagerVersionParameters) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateRef != nil {
		in, out := &in.InstanceTemplateRef, &out.InstanceTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceTemplateSelector != nil {
		in, out := &in.InstanceTemplateSelector, &out.InstanceTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]VersionTargetSizeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionInstanceGroupManagerVersionParameters.
func (in *RegionInstanceGroupManagerVersionParameters) DeepCopy() *RegionInstanceGroupManagerVersionParameters {
	if in == nil {
		return nil
	}
	out := new(RegionInstanceGroupManagerVersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificate) DeepCopyInto(out *RegionSSLCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificate.
func (in *RegionSSLCertificate) DeepCopy() *RegionSSLCertificate {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionSSLCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateList) DeepCopyInto(out *RegionSSLCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionSSLCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateList.
func (in *RegionSSLCertificateList) DeepCopy() *RegionSSLCertificateList {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionSSLCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateObservation) DeepCopyInto(out *RegionSSLCertificateObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateObservation.
func (in *RegionSSLCertificateObservation) DeepCopy() *RegionSSLCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateParameters) DeepCopyInto(out *RegionSSLCertificateParameters) {
	*out = *in
	out.CertificateSecretRef = in.CertificateSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateParameters.
func (in *RegionSSLCertificateParameters) DeepCopy() *RegionSSLCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateSpec) DeepCopyInto(out *RegionSSLCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateSpec.
func (in *RegionSSLCertificateSpec) DeepCopy() *RegionSSLCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateStatus) DeepCopyInto(out *RegionSSLCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateStatus.
func (in *RegionSSLCertificateStatus) DeepCopy() *RegionSSLCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxy) DeepCopyInto(out *RegionTargetHTTPProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxy.
func (in *RegionTargetHTTPProxy) DeepCopy() *RegionTargetHTTPProxy {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyList) DeepCopyInto(out *RegionTargetHTTPProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionTargetHTTPProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyList.
func (in *RegionTargetHTTPProxyList) DeepCopy() *RegionTargetHTTPProxyList {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyObservation) DeepCopyInto(out *RegionTargetHTTPProxyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyObservation.
func (in *RegionTargetHTTPProxyObservation) DeepCopy() *RegionTargetHTTPProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyParameters) DeepCopyInto(out *RegionTargetHTTPProxyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyParameters.
func (in *RegionTargetHTTPProxyParameters) DeepCopy() *RegionTargetHTTPProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxySpec) DeepCopyInto(out *RegionTargetHTTPProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxySpec.
func (in *RegionTargetHTTPProxySpec) DeepCopy() *RegionTargetHTTPProxySpec {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyStatus) DeepCopyInto(out *RegionTargetHTTPProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyStatus.
func (in *RegionTargetHTTPProxyStatus) DeepCopy() *RegionTargetHTTPProxyStatus {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxy) DeepCopyInto(out *RegionTargetHTTPSProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxy.
func (in *RegionTargetHTTPSProxy) DeepCopy() *RegionTargetHTTPSProxy {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPSProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyList) DeepCopyInto(out *RegionTargetHTTPSProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionTargetHTTPSProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyList.
func (in *RegionTargetHTTPSProxyList) DeepCopy() *RegionTargetHTTPSProxyList {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPSProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyObservation) DeepCopyInto(out *RegionTargetHTTPSProxyObservation) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyObservation.
func (in *RegionTargetHTTPSProxyObservation) DeepCopy() *RegionTargetHTTPSProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyParameters) DeepCopyInto(out *RegionTargetHTTPSProxyParameters) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyParameters.
func (in *RegionTargetHTTPSProxyParameters) DeepCopy() *RegionTargetHTTPSProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxySpec) DeepCopyInto(out *RegionTargetHTTPSProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxySpec.
func (in *RegionTargetHTTPSProxySpec) DeepCopy() *RegionTargetHTTPSProxySpec {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyStatus) DeepCopyInto(out *RegionTargetHTTPSProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyStatus.
func (in *RegionTargetHTTPSProxyStatus) DeepCopy() *RegionTargetHTTPSProxyStatus {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMap) DeepCopyInto(out *RegionURLMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMap.
func (in *RegionURLMap) DeepCopy() *RegionURLMap {
	if in == nil {
		return nil
	}
	out := new(RegionURLMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionURLMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapList) DeepCopyInto(out *RegionURLMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionURLMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapList.
func (in *RegionURLMapList) DeepCopy() *RegionURLMapList {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionURLMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapObservation) DeepCopyInto(out *RegionURLMapObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]DefaultRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]DefaultURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]HostRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MapID != nil {
		in, out := &in.MapID, &out.MapID
		*out = new(float64)
		**out = **in
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]PathMatcherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]TestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapObservation.
func (in *RegionURLMapObservation) DeepCopy() *RegionURLMapObservation {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapParameters) DeepCopyInto(out *RegionURLMapParameters) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]DefaultRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultServiceRef != nil {
		in, out := &in.DefaultServiceRef, &out.DefaultServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultServiceSelector != nil {
		in, out := &in.DefaultServiceSelector, &out.DefaultServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]DefaultURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]HostRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]PathMatcherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]TestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapParameters.
func (in *RegionURLMapParameters) DeepCopy() *RegionURLMapParameters {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapSpec) DeepCopyInto(out *RegionURLMapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapSpec.
func (in *RegionURLMapSpec) DeepCopy() *RegionURLMapSpec {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapStatus) DeepCopyInto(out *RegionURLMapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapStatus.
func (in *RegionURLMapStatus) DeepCopy() *RegionURLMapStatus {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddObservation) DeepCopyInto(out *RequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddObservation.
func (in *RequestHeadersToAddObservation) DeepCopy() *RequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddParameters) DeepCopyInto(out *RequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddParameters.
func (in *RequestHeadersToAddParameters) DeepCopy() *RequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMirrorPolicyObservation) DeepCopyInto(out *RequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMirrorPolicyObservation.
func (in *RequestMirrorPolicyObservation) DeepCopy() *RequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMirrorPolicyParameters) DeepCopyInto(out *RequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMirrorPolicyParameters.
func (in *RequestMirrorPolicyParameters) DeepCopy() *RequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinityObservation) DeepCopyInto(out *ReservationAffinityObservation) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]SpecificReservationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinityObservation.
func (in *ReservationAffinityObservation) DeepCopy() *ReservationAffinityObservation {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReservationAffinityParameters) DeepCopyInto(out *ReservationAffinityParameters) {
	*out = *in
	if in.SpecificReservation != nil {
		in, out := &in.SpecificReservation, &out.SpecificReservation
		*out = make([]SpecificReservationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReservationAffinityParameters.
func (in *ReservationAffinityParameters) DeepCopy() *ReservationAffinityParameters {
	if in == nil {
		return nil
	}
	out := new(ReservationAffinityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeadersToAddObservation) DeepCopyInto(out *ResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeadersToAddObservation.
func (in *ResponseHeadersToAddObservation) DeepCopy() *ResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeadersToAddParameters) DeepCopyInto(out *ResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeadersToAddParameters.
func (in *ResponseHeadersToAddParameters) DeepCopy() *ResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyObservation) DeepCopyInto(out *RetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyObservation.
func (in *RetryPolicyObservation) DeepCopy() *RetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyParameters) DeepCopyInto(out *RetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyParameters.
func (in *RetryPolicyParameters) DeepCopy() *RetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *RetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyPerTryTimeoutObservation.
func (in *RetryPolicyPerTryTimeoutObservation) DeepCopy() *RetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *RetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyPerTryTimeoutParameters.
func (in *RetryPolicyPerTryTimeoutParameters) DeepCopy() *RetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionCorsPolicyObservation) DeepCopyInto(out *RouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionCorsPolicyObservation.
func (in *RouteActionCorsPolicyObservation) DeepCopy() *RouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionCorsPolicyParameters) DeepCopyInto(out *RouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionCorsPolicyParameters.
func (in *RouteActionCorsPolicyParameters) DeepCopy() *RouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyAbortObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyAbortObservation.
func (in *RouteActionFaultInjectionPolicyAbortObservation) DeepCopy() *RouteActionFaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyAbortParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyAbortParameters.
func (in *RouteActionFaultInjectionPolicyAbortParameters) DeepCopy() *RouteActionFaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FaultInjectionPolicyDelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayObservation.
func (in *RouteActionFaultInjectionPolicyDelayObservation) DeepCopy() *RouteActionFaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FaultInjectionPolicyDelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayParameters.
func (in *RouteActionFaultInjectionPolicyDelayParameters) DeepCopy() *RouteActionFaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]FaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]FaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyObservation.
func (in *RouteActionFaultInjectionPolicyObservation) DeepCopy() *RouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]FaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]FaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyParameters.
func (in *RouteActionFaultInjectionPolicyParameters) DeepCopy() *RouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionObservation) DeepCopyInto(out *RouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionObservation.
func (in *RouteActionObservation) DeepCopy() *RouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionParameters) DeepCopyInto(out *RouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionParameters.
func (in *RouteActionParameters) DeepCopy() *RouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *RouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRequestMirrorPolicyObservation.
func (in *RouteActionRequestMirrorPolicyObservation) DeepCopy() *RouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *RouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRequestMirrorPolicyParameters.
func (in *RouteActionRequestMirrorPolicyParameters) DeepCopy() *RouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyObservation) DeepCopyInto(out *RouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyObservation.
func (in *RouteActionRetryPolicyObservation) DeepCopy() *RouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyParameters) DeepCopyInto(out *RouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyParameters.
func (in *RouteActionRetryPolicyParameters) DeepCopy() *RouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *RouteActionRetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyPerTryTimeoutObservation.
func (in *RouteActionRetryPolicyPerTryTimeoutObservation) DeepCopy() *RouteActionRetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *RouteActionRetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyPerTryTimeoutParameters.
func (in *RouteActionRetryPolicyPerTryTimeoutParameters) DeepCopy() *RouteActionRetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionTimeoutObservation) DeepCopyInto(out *RouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionTimeoutObservation.
func (in *RouteActionTimeoutObservation) DeepCopy() *RouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionTimeoutParameters) DeepCopyInto(out *RouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionTimeoutParameters.
func (in *RouteActionTimeoutParameters) DeepCopy() *RouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionURLRewriteObservation) DeepCopyInto(out *RouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionURLRewriteObservation.
func (in *RouteActionURLRewriteObservation) DeepCopy() *RouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionURLRewriteParameters) DeepCopyInto(out *RouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionURLRewriteParameters.
func (in *RouteActionURLRewriteParameters) DeepCopy() *RouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionObservation.
func (in *RouteActionWeightedBackendServicesHeaderActionObservation) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionParameters.
func (in *RouteActionWeightedBackendServicesHeaderActionParameters) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesObservation) DeepCopyInto(out *RouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]WeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesObservation.
func (in *RouteActionWeightedBackendServicesObservation) DeepCopy() *RouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]WeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesParameters.
func (in *RouteActionWeightedBackendServicesParameters) DeepCopy() *RouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionObservation) DeepCopyInto(out *RouteRulesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionObservation.
func (in *RouteRulesHeaderActionObservation) DeepCopy() *RouteRulesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionParameters) DeepCopyInto(out *RouteRulesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionParameters.
func (in *RouteRulesHeaderActionParameters) DeepCopy() *RouteRulesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *RouteRulesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionRequestHeadersToAddObservation.
func (in *RouteRulesHeaderActionRequestHeadersToAddObservation) DeepCopy() *RouteRulesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *RouteRulesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionRequestHeadersToAddParameters.
func (in *RouteRulesHeaderActionRequestHeadersToAddParameters) DeepCopy() *RouteRulesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *RouteRulesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionResponseHeadersToAddObservation.
func (in *RouteRulesHeaderActionResponseHeadersToAddObservation) DeepCopy() *RouteRulesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *RouteRulesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionResponseHeadersToAddParameters.
func (in *RouteRulesHeaderActionResponseHeadersToAddParameters) DeepCopy() *RouteRulesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesObservation) DeepCopyInto(out *RouteRulesObservation) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]MatchRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteRulesRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]RouteRulesURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesObservation.
func (in *RouteRulesObservation) DeepCopy() *RouteRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesParameters) DeepCopyInto(out *RouteRulesParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]MatchRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteRulesRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]RouteRulesURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesParameters.
func (in *RouteRulesParameters) DeepCopy() *RouteRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionCorsPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionCorsPolicyObservation.
func (in *RouteRulesRouteActionCorsPolicyObservation) DeepCopy() *RouteRulesRouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionCorsPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionCorsPolicyParameters.
func (in *RouteRulesRouteActionCorsPolicyParameters) DeepCopy() *RouteRulesRouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteActionFaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteActionFaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyObservation.
func (in *RouteRulesRouteActionFaultInjectionPolicyObservation) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteActionFaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteActionFaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionObservation) DeepCopyInto(out *RouteRulesRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteRulesRouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteRulesRouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteRulesRouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteRulesRouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteRulesRouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteRulesRouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionObservation.
func (in *RouteRulesRouteActionObservation) DeepCopy() *RouteRulesRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionParameters) DeepCopyInto(out *RouteRulesRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteRulesRouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteRulesRouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteRulesRouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteRulesRouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteRulesRouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteRulesRouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionParameters.
func (in *RouteRulesRouteActionParameters) DeepCopy() *RouteRulesRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRequestMirrorPolicyObservation.
func (in *RouteRulesRouteActionRequestMirrorPolicyObservation) DeepCopy() *RouteRulesRouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRequestMirrorPolicyParameters.
func (in *RouteRulesRouteActionRequestMirrorPolicyParameters) DeepCopy() *RouteRulesRouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteActionRetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyObservation.
func (in *RouteRulesRouteActionRetryPolicyObservation) DeepCopy() *RouteRulesRouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteActionRetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyParameters.
func (in *RouteRulesRouteActionRetryPolicyParameters) DeepCopy() *RouteRulesRouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionTimeoutObservation) DeepCopyInto(out *RouteRulesRouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionTimeoutObservation.
func (in *RouteRulesRouteActionTimeoutObservation) DeepCopy() *RouteRulesRouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionTimeoutParameters) DeepCopyInto(out *RouteRulesRouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionTimeoutParameters.
func (in *RouteRulesRouteActionTimeoutParameters) DeepCopy() *RouteRulesRouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionURLRewriteObservation) DeepCopyInto(out *RouteRulesRouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionURLRewriteObservation.
func (in *RouteRulesRouteActionURLRewriteObservation) DeepCopy() *RouteRulesRouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionURLRewriteParameters) DeepCopyInto(out *RouteRulesRouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathTemplateRewrite != nil {
		in, out := &in.PathTemplateRewrite, &out.PathTemplateRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionURLRewriteParameters.
func (in *RouteRulesRouteActionURLRewriteParameters) DeepCopy() *RouteRulesRouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesObservation) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteActionWeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesObservation.
func (in *RouteRulesRouteActionWeightedBackendServicesObservation) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteActionWeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesURLRedirectObservation) DeepCopyInto(out *RouteRulesURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesURLRedirectObservation.
func (in *RouteRulesURLRedirectObservation) DeepCopy() *RouteRulesURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesURLRedirectParameters) DeepCopyInto(out *RouteRulesURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesURLRedirectParameters.
func (in *RouteRulesURLRedirectParameters) DeepCopy() *RouteRulesURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificate) DeepCopyInto(out *SSLCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificate.
func (in *SSLCertificate) DeepCopy() *SSLCertificate {
	if in == nil {
		return nil
	}
	out := new(SSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateList) DeepCopyInto(out *SSLCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSLCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateList.
func (in *SSLCertificateList) DeepCopy() *SSLCertificateList {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateObservation) DeepCopyInto(out *SSLCertificateObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateObservation.
func (in *SSLCertificateObservation) DeepCopy() *SSLCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateParameters) DeepCopyInto(out *SSLCertificateParameters) {
	*out = *in
	out.CertificateSecretRef = in.CertificateSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateParameters.
func (in *SSLCertificateParameters) DeepCopy() *SSLCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateSpec) DeepCopyInto(out *SSLCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateSpec.
func (in *SSLCertificateSpec) DeepCopy() *SSLCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateStatus) DeepCopyInto(out *SSLCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateStatus.
func (in *SSLCertificateStatus) DeepCopy() *SSLCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLHealthCheckObservation) DeepCopyInto(out *SSLHealthCheckObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLHealthCheckObservation.
func (in *SSLHealthCheckObservation) DeepCopy() *SSLHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(SSLHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLHealthCheckParameters) DeepCopyInto(out *SSLHealthCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLHealthCheckParameters.
func (in *SSLHealthCheckParameters) DeepCopy() *SSLHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(SSLHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingObservation) DeepCopyInto(out *SchedulingObservation) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]LocalSsdRecoveryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceInterval != nil {
		in, out := &in.MaintenanceInterval, &out.MaintenanceInterval
		*out = new(string)
		**out = **in
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]MaxRunDurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]NodeAffinitiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingObservation.
func (in *SchedulingObservation) DeepCopy() *SchedulingObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingParameters) DeepCopyInto(out *SchedulingParameters) {
	*out = *in
	if in.AutomaticRestart != nil {
		in, out := &in.AutomaticRestart, &out.AutomaticRestart
		*out = new(bool)
		**out = **in
	}
	if in.InstanceTerminationAction != nil {
		in, out := &in.InstanceTerminationAction, &out.InstanceTerminationAction
		*out = new(string)
		**out = **in
	}
	if in.LocalSsdRecoveryTimeout != nil {
		in, out := &in.LocalSsdRecoveryTimeout, &out.LocalSsdRecoveryTimeout
		*out = make([]LocalSsdRecoveryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaintenanceInterval != nil {
		in, out := &in.MaintenanceInterval, &out.MaintenanceInterval
		*out = new(string)
		**out = **in
	}
	if in.MaxRunDuration != nil {
		in, out := &in.MaxRunDuration, &out.MaxRunDuration
		*out = make([]MaxRunDurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinNodeCpus != nil {
		in, out := &in.MinNodeCpus, &out.MinNodeCpus
		*out = new(float64)
		**out = **in
	}
	if in.NodeAffinities != nil {
		in, out := &in.NodeAffinities, &out.NodeAffinities
		*out = make([]NodeAffinitiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OnHostMaintenance != nil {
		in, out := &in.OnHostMaintenance, &out.OnHostMaintenance
		*out = new(string)
		**out = **in
	}
	if in.Preemptible != nil {
		in, out := &in.Preemptible, &out.Preemptible
		*out = new(bool)
		**out = **in
	}
	if in.ProvisioningModel != nil {
		in, out := &in.ProvisioningModel, &out.ProvisioningModel
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingParameters.
func (in *SchedulingParameters) DeepCopy() *SchedulingParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeObservation) DeepCopyInto(out *SecondaryIPRangeObservation) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeObservation.
func (in *SecondaryIPRangeObservation) DeepCopy() *SecondaryIPRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryIPRangeParameters) DeepCopyInto(out *SecondaryIPRangeParameters) {
	*out = *in
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.RangeName != nil {
		in, out := &in.RangeName, &out.RangeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryIPRangeParameters.
func (in *SecondaryIPRangeParameters) DeepCopy() *SecondaryIPRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryIPRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySettingsObservation) DeepCopyInto(out *SecuritySettingsObservation) {
	*out = *in
	if in.ClientTLSPolicy != nil {
		in, out := &in.ClientTLSPolicy, &out.ClientTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.SubjectAltNames != nil {
		in, out := &in.SubjectAltNames, &out.SubjectAltNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySettingsObservation.
func (in *SecuritySettingsObservation) DeepCopy() *SecuritySettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SecuritySettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySettingsParameters) DeepCopyInto(out *SecuritySettingsParameters) {
	*out = *in
	if in.ClientTLSPolicy != nil {
		in, out := &in.ClientTLSPolicy, &out.ClientTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.SubjectAltNames != nil {
		in, out := &in.SubjectAltNames, &out.SubjectAltNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySettingsParameters.
func (in *SecuritySettingsParameters) DeepCopy() *SecuritySettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SecuritySettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountObservation) DeepCopyInto(out *ServiceAccountObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountObservation.
func (in *ServiceAccountObservation) DeepCopy() *ServiceAccountObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountParameters) DeepCopyInto(out *ServiceAccountParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.EmailRef != nil {
		in, out := &in.EmailRef, &out.EmailRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EmailSelector != nil {
		in, out := &in.EmailSelector, &out.EmailSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountParameters.
func (in *ServiceAccountParameters) DeepCopy() *ServiceAccountParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceDirectoryRegistrationsObservation) DeepCopyInto(out *ServiceDirectoryRegistrationsObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceDirectoryRegistrationsObservation.
func (in *ServiceDirectoryRegistrationsObservation) DeepCopy() *ServiceDirectoryRegistrationsObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceDirectoryRegistrationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceDirectoryRegistrationsParameters) DeepCopyInto(out *ServiceDirectoryRegistrationsParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceDirectoryRegistrationsParameters.
func (in *ServiceDirectoryRegistrationsParameters) DeepCopy() *ServiceDirectoryRegistrationsParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceDirectoryRegistrationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigObservation) DeepCopyInto(out *ShieldedInstanceConfigObservation) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigObservation.
func (in *ShieldedInstanceConfigObservation) DeepCopy() *ShieldedInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShieldedInstanceConfigParameters) DeepCopyInto(out *ShieldedInstanceConfigParameters) {
	*out = *in
	if in.EnableIntegrityMonitoring != nil {
		in, out := &in.EnableIntegrityMonitoring, &out.EnableIntegrityMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.EnableSecureBoot != nil {
		in, out := &in.EnableSecureBoot, &out.EnableSecureBoot
		*out = new(bool)
		**out = **in
	}
	if in.EnableVtpm != nil {
		in, out := &in.EnableVtpm, &out.EnableVtpm
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShieldedInstanceConfigParameters.
func (in *ShieldedInstanceConfigParameters) DeepCopy() *ShieldedInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ShieldedInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceImageEncryptionKeyObservation) DeepCopyInto(out *SourceImageEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceImageEncryptionKeyObservation.
func (in *SourceImageEncryptionKeyObservation) DeepCopy() *SourceImageEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SourceImageEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceImageEncryptionKeyParameters) DeepCopyInto(out *SourceImageEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceImageEncryptionKeyParameters.
func (in *SourceImageEncryptionKeyParameters) DeepCopy() *SourceImageEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SourceImageEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSnapshotEncryptionKeyObservation) DeepCopyInto(out *SourceSnapshotEncryptionKeyObservation) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSnapshotEncryptionKeyObservation.
func (in *SourceSnapshotEncryptionKeyObservation) DeepCopy() *SourceSnapshotEncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SourceSnapshotEncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSnapshotEncryptionKeyParameters) DeepCopyInto(out *SourceSnapshotEncryptionKeyParameters) {
	*out = *in
	if in.KMSKeySelfLink != nil {
		in, out := &in.KMSKeySelfLink, &out.KMSKeySelfLink
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyServiceAccount != nil {
		in, out := &in.KMSKeyServiceAccount, &out.KMSKeyServiceAccount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSnapshotEncryptionKeyParameters.
func (in *SourceSnapshotEncryptionKeyParameters) DeepCopy() *SourceSnapshotEncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SourceSnapshotEncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecificReservationObservation) DeepCopyInto(out *SpecificReservationObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecificReservationObservation.
func (in *SpecificReservationObservation) DeepCopy() *SpecificReservationObservation {
	if in == nil {
		return nil
	}
	out := new(SpecificReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecificReservationParameters) DeepCopyInto(out *SpecificReservationParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecificReservationParameters.
func (in *SpecificReservationParameters) DeepCopy() *SpecificReservationParameters {
	if in == nil {
		return nil
	}
	out := new(SpecificReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulDiskObservation) DeepCopyInto(out *StatefulDiskObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulDiskObservation.
func (in *StatefulDiskObservation) DeepCopy() *StatefulDiskObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulDiskParameters) DeepCopyInto(out *StatefulDiskParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulDiskParameters.
func (in *StatefulDiskParameters) DeepCopy() *StatefulDiskParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulExternalIPObservation) DeepCopyInto(out *StatefulExternalIPObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulExternalIPObservation.
func (in *StatefulExternalIPObservation) DeepCopy() *StatefulExternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulExternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulExternalIPParameters) DeepCopyInto(out *StatefulExternalIPParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulExternalIPParameters.
func (in *StatefulExternalIPParameters) DeepCopy() *StatefulExternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulExternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulInternalIPObservation) DeepCopyInto(out *StatefulInternalIPObservation) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulInternalIPObservation.
func (in *StatefulInternalIPObservation) DeepCopy() *StatefulInternalIPObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulInternalIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulInternalIPParameters) DeepCopyInto(out *StatefulInternalIPParameters) {
	*out = *in
	if in.DeleteRule != nil {
		in, out := &in.DeleteRule, &out.DeleteRule
		*out = new(string)
		**out = **in
	}
	if in.InterfaceName != nil {
		in, out := &in.InterfaceName, &out.InterfaceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulInternalIPParameters.
func (in *StatefulInternalIPParameters) DeepCopy() *StatefulInternalIPParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulInternalIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulObservation) DeepCopyInto(out *StatefulObservation) {
	*out = *in
	if in.HasStatefulConfig != nil {
		in, out := &in.HasStatefulConfig, &out.HasStatefulConfig
		*out = new(bool)
		**out = **in
	}
	if in.PerInstanceConfigs != nil {
		in, out := &in.PerInstanceConfigs, &out.PerInstanceConfigs
		*out = make([]PerInstanceConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulObservation.
func (in *StatefulObservation) DeepCopy() *StatefulObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulParameters) DeepCopyInto(out *StatefulParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulParameters.
func (in *StatefulParameters) DeepCopy() *StatefulParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulPerInstanceConfigsObservation) DeepCopyInto(out *StatefulPerInstanceConfigsObservation) {
	*out = *in
	if in.AllEffective != nil {
		in, out := &in.AllEffective, &out.AllEffective
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulPerInstanceConfigsObservation.
func (in *StatefulPerInstanceConfigsObservation) DeepCopy() *StatefulPerInstanceConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(StatefulPerInstanceConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatefulPerInstanceConfigsParameters) DeepCopyInto(out *StatefulPerInstanceConfigsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatefulPerInstanceConfigsParameters.
func (in *StatefulPerInstanceConfigsParameters) DeepCopy() *StatefulPerInstanceConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(StatefulPerInstanceConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusAllInstancesConfigObservation) DeepCopyInto(out *StatusAllInstancesConfigObservation) {
	*out = *in
	if in.CurrentRevision != nil {
		in, out := &in.CurrentRevision, &out.CurrentRevision
		*out = new(string)
		**out = **in
	}
	if in.Effective != nil {
		in, out := &in.Effective, &out.Effective
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusAllInstancesConfigObservation.
func (in *StatusAllInstancesConfigObservation) DeepCopy() *StatusAllInstancesConfigObservation {
	if in == nil {
		return nil
	}
	out := new(StatusAllInstancesConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusAllInstancesConfigParameters) DeepCopyInto(out *StatusAllInstancesConfigParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusAllInstancesConfigParameters.
func (in *StatusAllInstancesConfigParameters) DeepCopy() *StatusAllInstancesConfigParameters {
	if in == nil {
		return nil
	}
	out := new(StatusAllInstancesConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusObservation) DeepCopyInto(out *StatusObservation) {
	*out = *in
	if in.AllInstancesConfig != nil {
		in, out := &in.AllInstancesConfig, &out.AllInstancesConfig
		*out = make([]StatusAllInstancesConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsStable != nil {
		in, out := &in.IsStable, &out.IsStable
		*out = new(bool)
		**out = **in
	}
	if in.Stateful != nil {
		in, out := &in.Stateful, &out.Stateful
		*out = make([]StatefulObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VersionTarget != nil {
		in, out := &in.VersionTarget, &out.VersionTarget
		*out = make([]VersionTargetObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusObservation.
func (in *StatusObservation) DeepCopy() *StatusObservation {
	if in == nil {
		return nil
	}
	out := new(StatusObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusParameters) DeepCopyInto(out *StatusParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusParameters.
func (in *StatusParameters) DeepCopy() *StatusParameters {
	if in == nil {
		return nil
	}
	out := new(StatusParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusStatefulObservation) DeepCopyInto(out *StatusStatefulObservation) {
	*out = *in
	if in.HasStatefulConfig != nil {
		in, out := &in.HasStatefulConfig, &out.HasStatefulConfig
		*out = new(bool)
		**out = **in
	}
	if in.PerInstanceConfigs != nil {
		in, out := &in.PerInstanceConfigs, &out.PerInstanceConfigs
		*out = make([]StatefulPerInstanceConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusStatefulObservation.
func (in *StatusStatefulObservation) DeepCopy() *StatusStatefulObservation {
	if in == nil {
		return nil
	}
	out := new(StatusStatefulObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusStatefulParameters) DeepCopyInto(out *StatusStatefulParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusStatefulParameters.
func (in *StatusStatefulParameters) DeepCopy() *StatusStatefulParameters {
	if in == nil {
		return nil
	}
	out := new(StatusStatefulParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusVersionTargetObservation) DeepCopyInto(out *StatusVersionTargetObservation) {
	*out = *in
	if in.IsReached != nil {
		in, out := &in.IsReached, &out.IsReached
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusVersionTargetObservation.
func (in *StatusVersionTargetObservation) DeepCopy() *StatusVersionTargetObservation {
	if in == nil {
		return nil
	}
	out := new(StatusVersionTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusVersionTargetParameters) DeepCopyInto(out *StatusVersionTargetParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusVersionTargetParameters.
func (in *StatusVersionTargetParameters) DeepCopy() *StatusVersionTargetParameters {
	if in == nil {
		return nil
	}
	out := new(StatusVersionTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnetwork) DeepCopyInto(out *Subnetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnetwork.
func (in *Subnetwork) DeepCopy() *Subnetwork {
	if in == nil {
		return nil
	}
	out := new(Subnetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subnetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkList) DeepCopyInto(out *SubnetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subnetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkList.
func (in *SubnetworkList) DeepCopy() *SubnetworkList {
	if in == nil {
		return nil
	}
	out := new(SubnetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkLogConfigObservation) DeepCopyInto(out *SubnetworkLogConfigObservation) {
	*out = *in
	if in.AggregationInterval != nil {
		in, out := &in.AggregationInterval, &out.AggregationInterval
		*out = new(string)
		**out = **in
	}
	if in.FilterExpr != nil {
		in, out := &in.FilterExpr, &out.FilterExpr
		*out = new(string)
		**out = **in
	}
	if in.FlowSampling != nil {
		in, out := &in.FlowSampling, &out.FlowSampling
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MetadataFields != nil {
		in, out := &in.MetadataFields, &out.MetadataFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkLogConfigObservation.
func (in *SubnetworkLogConfigObservation) DeepCopy() *SubnetworkLogConfigObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetworkLogConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkLogConfigParameters) DeepCopyInto(out *SubnetworkLogConfigParameters) {
	*out = *in
	if in.AggregationInterval != nil {
		in, out := &in.AggregationInterval, &out.AggregationInterval
		*out = new(string)
		**out = **in
	}
	if in.FilterExpr != nil {
		in, out := &in.FilterExpr, &out.FilterExpr
		*out = new(string)
		**out = **in
	}
	if in.FlowSampling != nil {
		in, out := &in.FlowSampling, &out.FlowSampling
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MetadataFields != nil {
		in, out := &in.MetadataFields, &out.MetadataFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkLogConfigParameters.
func (in *SubnetworkLogConfigParameters) DeepCopy() *SubnetworkLogConfigParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkLogConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkObservation) DeepCopyInto(out *SubnetworkObservation) {
	*out = *in
	if in.AllowSubnetCidrRoutesOverlap != nil {
		in, out := &in.AllowSubnetCidrRoutesOverlap, &out.AllowSubnetCidrRoutesOverlap
		*out = new(bool)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6Prefix != nil {
		in, out := &in.ExternalIPv6Prefix, &out.ExternalIPv6Prefix
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.GatewayAddress != nil {
		in, out := &in.GatewayAddress, &out.GatewayAddress
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrRange != nil {
		in, out := &in.IPv6CidrRange, &out.IPv6CidrRange
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6Prefix != nil {
		in, out := &in.InternalIPv6Prefix, &out.InternalIPv6Prefix
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]SubnetworkLogConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPGoogleAccess != nil {
		in, out := &in.PrivateIPGoogleAccess, &out.PrivateIPGoogleAccess
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPv6GoogleAccess != nil {
		in, out := &in.PrivateIPv6GoogleAccess, &out.PrivateIPv6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkObservation.
func (in *SubnetworkObservation) DeepCopy() *SubnetworkObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkParameters) DeepCopyInto(out *SubnetworkParameters) {
	*out = *in
	if in.AllowSubnetCidrRoutesOverlap != nil {
		in, out := &in.AllowSubnetCidrRoutesOverlap, &out.AllowSubnetCidrRoutesOverlap
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExternalIPv6Prefix != nil {
		in, out := &in.ExternalIPv6Prefix, &out.ExternalIPv6Prefix
		*out = new(string)
		**out = **in
	}
	if in.IPCidrRange != nil {
		in, out := &in.IPCidrRange, &out.IPCidrRange
		*out = new(string)
		**out = **in
	}
	if in.IPv6AccessType != nil {
		in, out := &in.IPv6AccessType, &out.IPv6AccessType
		*out = new(string)
		**out = **in
	}
	if in.LogConfig != nil {
		in, out := &in.LogConfig, &out.LogConfig
		*out = make([]SubnetworkLogConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivateIPGoogleAccess != nil {
		in, out := &in.PrivateIPGoogleAccess, &out.PrivateIPGoogleAccess
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPv6GoogleAccess != nil {
		in, out := &in.PrivateIPv6GoogleAccess, &out.PrivateIPv6GoogleAccess
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPRange != nil {
		in, out := &in.SecondaryIPRange, &out.SecondaryIPRange
		*out = make([]SecondaryIPRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StackType != nil {
		in, out := &in.StackType, &out.StackType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkParameters.
func (in *SubnetworkParameters) DeepCopy() *SubnetworkParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkSpec) DeepCopyInto(out *SubnetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkSpec.
func (in *SubnetworkSpec) DeepCopy() *SubnetworkSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetworkStatus) DeepCopyInto(out *SubnetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetworkStatus.
func (in *SubnetworkStatus) DeepCopy() *SubnetworkStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubsettingObservation) DeepCopyInto(out *SubsettingObservation) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubsettingObservation.
func (in *SubsettingObservation) DeepCopy() *SubsettingObservation {
	if in == nil {
		return nil
	}
	out := new(SubsettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubsettingParameters) DeepCopyInto(out *SubsettingParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubsettingParameters.
func (in *SubsettingParameters) DeepCopy() *SubsettingParameters {
	if in == nil {
		return nil
	}
	out := new(SubsettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPHealthCheckObservation) DeepCopyInto(out *TCPHealthCheckObservation) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPHealthCheckObservation.
func (in *TCPHealthCheckObservation) DeepCopy() *TCPHealthCheckObservation {
	if in == nil {
		return nil
	}
	out := new(TCPHealthCheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPHealthCheckParameters) DeepCopyInto(out *TCPHealthCheckParameters) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpecification != nil {
		in, out := &in.PortSpecification, &out.PortSpecification
		*out = new(string)
		**out = **in
	}
	if in.ProxyHeader != nil {
		in, out := &in.ProxyHeader, &out.ProxyHeader
		*out = new(string)
		**out = **in
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPHealthCheckParameters.
func (in *TCPHealthCheckParameters) DeepCopy() *TCPHealthCheckParameters {
	if in == nil {
		return nil
	}
	out := new(TCPHealthCheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TTLObservation) DeepCopyInto(out *TTLObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TTLObservation.
func (in *TTLObservation) DeepCopy() *TTLObservation {
	if in == nil {
		return nil
	}
	out := new(TTLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TTLParameters) DeepCopyInto(out *TTLParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TTLParameters.
func (in *TTLParameters) DeepCopy() *TTLParameters {
	if in == nil {
		return nil
	}
	out := new(TTLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxy) DeepCopyInto(out *TargetHTTPProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxy.
func (in *TargetHTTPProxy) DeepCopy() *TargetHTTPProxy {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyList) DeepCopyInto(out *TargetHTTPProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetHTTPProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyList.
func (in *TargetHTTPProxyList) DeepCopy() *TargetHTTPProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyObservation) DeepCopyInto(out *TargetHTTPProxyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyObservation.
func (in *TargetHTTPProxyObservation) DeepCopy() *TargetHTTPProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyParameters) DeepCopyInto(out *TargetHTTPProxyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyParameters.
func (in *TargetHTTPProxyParameters) DeepCopy() *TargetHTTPProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxySpec) DeepCopyInto(out *TargetHTTPProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxySpec.
func (in *TargetHTTPProxySpec) DeepCopy() *TargetHTTPProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyStatus) DeepCopyInto(out *TargetHTTPProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyStatus.
func (in *TargetHTTPProxyStatus) DeepCopy() *TargetHTTPProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxy) DeepCopyInto(out *TargetHTTPSProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxy.
func (in *TargetHTTPSProxy) DeepCopy() *TargetHTTPSProxy {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPSProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyList) DeepCopyInto(out *TargetHTTPSProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetHTTPSProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyList.
func (in *TargetHTTPSProxyList) DeepCopy() *TargetHTTPSProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPSProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyObservation) DeepCopyInto(out *TargetHTTPSProxyObservation) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.QuicOverride != nil {
		in, out := &in.QuicOverride, &out.QuicOverride
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.ServerTLSPolicy != nil {
		in, out := &in.ServerTLSPolicy, &out.ServerTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyObservation.
func (in *TargetHTTPSProxyObservation) DeepCopy() *TargetHTTPSProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyParameters) DeepCopyInto(out *TargetHTTPSProxyParameters) {
	*out = *in
	if in.CertificateManagerCertificates != nil {
		in, out := &in.CertificateManagerCertificates, &out.CertificateManagerCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HTTPKeepAliveTimeoutSec != nil {
		in, out := &in.HTTPKeepAliveTimeoutSec, &out.HTTPKeepAliveTimeoutSec
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.QuicOverride != nil {
		in, out := &in.QuicOverride, &out.QuicOverride
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.ServerTLSPolicy != nil {
		in, out := &in.ServerTLSPolicy, &out.ServerTLSPolicy
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyParameters.
func (in *TargetHTTPSProxyParameters) DeepCopy() *TargetHTTPSProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxySpec) DeepCopyInto(out *TargetHTTPSProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxySpec.
func (in *TargetHTTPSProxySpec) DeepCopy() *TargetHTTPSProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyStatus) DeepCopyInto(out *TargetHTTPSProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyStatus.
func (in *TargetHTTPSProxyStatus) DeepCopy() *TargetHTTPSProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPool) DeepCopyInto(out *TargetPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPool.
func (in *TargetPool) DeepCopy() *TargetPool {
	if in == nil {
		return nil
	}
	out := new(TargetPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolList) DeepCopyInto(out *TargetPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolList.
func (in *TargetPoolList) DeepCopy() *TargetPoolList {
	if in == nil {
		return nil
	}
	out := new(TargetPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolObservation) DeepCopyInto(out *TargetPoolObservation) {
	*out = *in
	if in.BackupPool != nil {
		in, out := &in.BackupPool, &out.BackupPool
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolObservation.
func (in *TargetPoolObservation) DeepCopy() *TargetPoolObservation {
	if in == nil {
		return nil
	}
	out := new(TargetPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolParameters) DeepCopyInto(out *TargetPoolParameters) {
	*out = *in
	if in.BackupPool != nil {
		in, out := &in.BackupPool, &out.BackupPool
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FailoverRatio != nil {
		in, out := &in.FailoverRatio, &out.FailoverRatio
		*out = new(float64)
		**out = **in
	}
	if in.HealthChecks != nil {
		in, out := &in.HealthChecks, &out.HealthChecks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.HealthChecksRefs != nil {
		in, out := &in.HealthChecksRefs, &out.HealthChecksRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.HealthChecksSelector != nil {
		in, out := &in.HealthChecksSelector, &out.HealthChecksSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecurityPolicy != nil {
		in, out := &in.SecurityPolicy, &out.SecurityPolicy
		*out = new(string)
		**out = **in
	}
	if in.SessionAffinity != nil {
		in, out := &in.SessionAffinity, &out.SessionAffinity
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolParameters.
func (in *TargetPoolParameters) DeepCopy() *TargetPoolParameters {
	if in == nil {
		return nil
	}
	out := new(TargetPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolSpec) DeepCopyInto(out *TargetPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolSpec.
func (in *TargetPoolSpec) DeepCopy() *TargetPoolSpec {
	if in == nil {
		return nil
	}
	out := new(TargetPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetPoolStatus) DeepCopyInto(out *TargetPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetPoolStatus.
func (in *TargetPoolStatus) DeepCopy() *TargetPoolStatus {
	if in == nil {
		return nil
	}
	out := new(TargetPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSizeObservation) DeepCopyInto(out *TargetSizeObservation) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSizeObservation.
func (in *TargetSizeObservation) DeepCopy() *TargetSizeObservation {
	if in == nil {
		return nil
	}
	out := new(TargetSizeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetSizeParameters) DeepCopyInto(out *TargetSizeParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetSizeParameters.
func (in *TargetSizeParameters) DeepCopy() *TargetSizeParameters {
	if in == nil {
		return nil
	}
	out := new(TargetSizeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestObservation) DeepCopyInto(out *TestObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestObservation.
func (in *TestObservation) DeepCopy() *TestObservation {
	if in == nil {
		return nil
	}
	out := new(TestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestParameters) DeepCopyInto(out *TestParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.ServiceRef != nil {
		in, out := &in.ServiceRef, &out.ServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceSelector != nil {
		in, out := &in.ServiceSelector, &out.ServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestParameters.
func (in *TestParameters) DeepCopy() *TestParameters {
	if in == nil {
		return nil
	}
	out := new(TestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeoutObservation) DeepCopyInto(out *TimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeoutObservation.
func (in *TimeoutObservation) DeepCopy() *TimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(TimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeoutParameters) DeepCopyInto(out *TimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeoutParameters.
func (in *TimeoutParameters) DeepCopy() *TimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(TimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectObservation) DeepCopyInto(out *URLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectObservation.
func (in *URLRedirectObservation) DeepCopy() *URLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(URLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectParameters) DeepCopyInto(out *URLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectParameters.
func (in *URLRedirectParameters) DeepCopy() *URLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(URLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteObservation) DeepCopyInto(out *URLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteObservation.
func (in *URLRewriteObservation) DeepCopy() *URLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(URLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteParameters) DeepCopyInto(out *URLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteParameters.
func (in *URLRewriteParameters) DeepCopy() *URLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(URLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyObservation) DeepCopyInto(out *UpdatePolicyObservation) {
	*out = *in
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinReadySec != nil {
		in, out := &in.MinReadySec, &out.MinReadySec
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyObservation.
func (in *UpdatePolicyObservation) DeepCopy() *UpdatePolicyObservation {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpdatePolicyParameters) DeepCopyInto(out *UpdatePolicyParameters) {
	*out = *in
	if in.MaxSurgeFixed != nil {
		in, out := &in.MaxSurgeFixed, &out.MaxSurgeFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxSurgePercent != nil {
		in, out := &in.MaxSurgePercent, &out.MaxSurgePercent
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailableFixed != nil {
		in, out := &in.MaxUnavailableFixed, &out.MaxUnavailableFixed
		*out = new(float64)
		**out = **in
	}
	if in.MaxUnavailablePercent != nil {
		in, out := &in.MaxUnavailablePercent, &out.MaxUnavailablePercent
		*out = new(float64)
		**out = **in
	}
	if in.MinReadySec != nil {
		in, out := &in.MinReadySec, &out.MinReadySec
		*out = new(float64)
		**out = **in
	}
	if in.MinimalAction != nil {
		in, out := &in.MinimalAction, &out.MinimalAction
		*out = new(string)
		**out = **in
	}
	if in.MostDisruptiveAllowedAction != nil {
		in, out := &in.MostDisruptiveAllowedAction, &out.MostDisruptiveAllowedAction
		*out = new(string)
		**out = **in
	}
	if in.ReplacementMethod != nil {
		in, out := &in.ReplacementMethod, &out.ReplacementMethod
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpdatePolicyParameters.
func (in *UpdatePolicyParameters) DeepCopy() *UpdatePolicyParameters {
	if in == nil {
		return nil
	}
	out := new(UpdatePolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionObservation) DeepCopyInto(out *VersionObservation) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]TargetSizeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionObservation.
func (in *VersionObservation) DeepCopy() *VersionObservation {
	if in == nil {
		return nil
	}
	out := new(VersionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionParameters) DeepCopyInto(out *VersionParameters) {
	*out = *in
	if in.InstanceTemplate != nil {
		in, out := &in.InstanceTemplate, &out.InstanceTemplate
		*out = new(string)
		**out = **in
	}
	if in.InstanceTemplateRef != nil {
		in, out := &in.InstanceTemplateRef, &out.InstanceTemplateRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceTemplateSelector != nil {
		in, out := &in.InstanceTemplateSelector, &out.InstanceTemplateSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetSize != nil {
		in, out := &in.TargetSize, &out.TargetSize
		*out = make([]TargetSizeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionParameters.
func (in *VersionParameters) DeepCopy() *VersionParameters {
	if in == nil {
		return nil
	}
	out := new(VersionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetObservation) DeepCopyInto(out *VersionTargetObservation) {
	*out = *in
	if in.IsReached != nil {
		in, out := &in.IsReached, &out.IsReached
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetObservation.
func (in *VersionTargetObservation) DeepCopy() *VersionTargetObservation {
	if in == nil {
		return nil
	}
	out := new(VersionTargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetParameters) DeepCopyInto(out *VersionTargetParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetParameters.
func (in *VersionTargetParameters) DeepCopy() *VersionTargetParameters {
	if in == nil {
		return nil
	}
	out := new(VersionTargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetSizeObservation) DeepCopyInto(out *VersionTargetSizeObservation) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetSizeObservation.
func (in *VersionTargetSizeObservation) DeepCopy() *VersionTargetSizeObservation {
	if in == nil {
		return nil
	}
	out := new(VersionTargetSizeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionTargetSizeParameters) DeepCopyInto(out *VersionTargetSizeParameters) {
	*out = *in
	if in.Fixed != nil {
		in, out := &in.Fixed, &out.Fixed
		*out = new(float64)
		**out = **in
	}
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionTargetSizeParameters.
func (in *VersionTargetSizeParameters) DeepCopy() *VersionTargetSizeParameters {
	if in == nil {
		return nil
	}
	out := new(VersionTargetSizeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]HeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]HeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionObservation.
func (in *WeightedBackendServicesHeaderActionObservation) DeepCopy() *WeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]HeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]HeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionParameters.
func (in *WeightedBackendServicesHeaderActionParameters) DeepCopy() *WeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionRequestHeadersToAddObservation.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopy() *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionRequestHeadersToAddParameters.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopy() *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionResponseHeadersToAddObservation.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopy() *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionResponseHeadersToAddParameters.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopy() *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesObservation) DeepCopyInto(out *WeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]HeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesObservation.
func (in *WeightedBackendServicesObservation) DeepCopy() *WeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesParameters) DeepCopyInto(out *WeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.BackendServiceRef != nil {
		in, out := &in.BackendServiceRef, &out.BackendServiceRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BackendServiceSelector != nil {
		in, out := &in.BackendServiceSelector, &out.BackendServiceSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]HeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesParameters.
func (in *WeightedBackendServicesParameters) DeepCopy() *WeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}
