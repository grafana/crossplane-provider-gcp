//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortObservation) DeepCopyInto(out *AbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortObservation.
func (in *AbortObservation) DeepCopy() *AbortObservation {
	if in == nil {
		return nil
	}
	out := new(AbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AbortParameters) DeepCopyInto(out *AbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AbortParameters.
func (in *AbortParameters) DeepCopy() *AbortParameters {
	if in == nil {
		return nil
	}
	out := new(AbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicyObservation) DeepCopyInto(out *CorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicyObservation.
func (in *CorsPolicyObservation) DeepCopy() *CorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(CorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorsPolicyParameters) DeepCopyInto(out *CorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorsPolicyParameters.
func (in *CorsPolicyParameters) DeepCopy() *CorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(CorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionObservation) DeepCopyInto(out *DefaultRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]CorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]FaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]TimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]URLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]WeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionObservation.
func (in *DefaultRouteActionObservation) DeepCopy() *DefaultRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultRouteActionParameters) DeepCopyInto(out *DefaultRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]CorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]FaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]TimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]URLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]WeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultRouteActionParameters.
func (in *DefaultRouteActionParameters) DeepCopy() *DefaultRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultURLRedirectObservation) DeepCopyInto(out *DefaultURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultURLRedirectObservation.
func (in *DefaultURLRedirectObservation) DeepCopy() *DefaultURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultURLRedirectParameters) DeepCopyInto(out *DefaultURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultURLRedirectParameters.
func (in *DefaultURLRedirectParameters) DeepCopy() *DefaultURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayFixedDelayObservation) DeepCopyInto(out *DelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayFixedDelayObservation.
func (in *DelayFixedDelayObservation) DeepCopy() *DelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(DelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayFixedDelayParameters) DeepCopyInto(out *DelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayFixedDelayParameters.
func (in *DelayFixedDelayParameters) DeepCopy() *DelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(DelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayObservation) DeepCopyInto(out *DelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayObservation.
func (in *DelayObservation) DeepCopy() *DelayObservation {
	if in == nil {
		return nil
	}
	out := new(DelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DelayParameters) DeepCopyInto(out *DelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DelayParameters.
func (in *DelayParameters) DeepCopy() *DelayParameters {
	if in == nil {
		return nil
	}
	out := new(DelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyAbortObservation) DeepCopyInto(out *FaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyAbortObservation.
func (in *FaultInjectionPolicyAbortObservation) DeepCopy() *FaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyAbortParameters) DeepCopyInto(out *FaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyAbortParameters.
func (in *FaultInjectionPolicyAbortParameters) DeepCopy() *FaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayFixedDelayObservation) DeepCopyInto(out *FaultInjectionPolicyDelayFixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayFixedDelayObservation.
func (in *FaultInjectionPolicyDelayFixedDelayObservation) DeepCopy() *FaultInjectionPolicyDelayFixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayFixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayFixedDelayParameters) DeepCopyInto(out *FaultInjectionPolicyDelayFixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayFixedDelayParameters.
func (in *FaultInjectionPolicyDelayFixedDelayParameters) DeepCopy() *FaultInjectionPolicyDelayFixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayFixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayObservation) DeepCopyInto(out *FaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayObservation.
func (in *FaultInjectionPolicyDelayObservation) DeepCopy() *FaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyDelayParameters) DeepCopyInto(out *FaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]DelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyDelayParameters.
func (in *FaultInjectionPolicyDelayParameters) DeepCopy() *FaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyObservation) DeepCopyInto(out *FaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]AbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyObservation.
func (in *FaultInjectionPolicyObservation) DeepCopy() *FaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FaultInjectionPolicyParameters) DeepCopyInto(out *FaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]AbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]DelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FaultInjectionPolicyParameters.
func (in *FaultInjectionPolicyParameters) DeepCopy() *FaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(FaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterLabelsObservation) DeepCopyInto(out *FilterLabelsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterLabelsObservation.
func (in *FilterLabelsObservation) DeepCopy() *FilterLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(FilterLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FilterLabelsParameters) DeepCopyInto(out *FilterLabelsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FilterLabelsParameters.
func (in *FilterLabelsParameters) DeepCopy() *FilterLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(FilterLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDelayObservation) DeepCopyInto(out *FixedDelayObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDelayObservation.
func (in *FixedDelayObservation) DeepCopy() *FixedDelayObservation {
	if in == nil {
		return nil
	}
	out := new(FixedDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FixedDelayParameters) DeepCopyInto(out *FixedDelayParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FixedDelayParameters.
func (in *FixedDelayParameters) DeepCopy() *FixedDelayParameters {
	if in == nil {
		return nil
	}
	out := new(FixedDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddress) DeepCopyInto(out *GlobalAddress) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddress.
func (in *GlobalAddress) DeepCopy() *GlobalAddress {
	if in == nil {
		return nil
	}
	out := new(GlobalAddress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalAddress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressList) DeepCopyInto(out *GlobalAddressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalAddress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressList.
func (in *GlobalAddressList) DeepCopy() *GlobalAddressList {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalAddressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressObservation) DeepCopyInto(out *GlobalAddressObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressObservation.
func (in *GlobalAddressObservation) DeepCopy() *GlobalAddressObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressParameters) DeepCopyInto(out *GlobalAddressParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AddressType != nil {
		in, out := &in.AddressType, &out.AddressType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrefixLength != nil {
		in, out := &in.PrefixLength, &out.PrefixLength
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressParameters.
func (in *GlobalAddressParameters) DeepCopy() *GlobalAddressParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressSpec) DeepCopyInto(out *GlobalAddressSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressSpec.
func (in *GlobalAddressSpec) DeepCopy() *GlobalAddressSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAddressStatus) DeepCopyInto(out *GlobalAddressStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAddressStatus.
func (in *GlobalAddressStatus) DeepCopy() *GlobalAddressStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalAddressStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRule) DeepCopyInto(out *GlobalForwardingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRule.
func (in *GlobalForwardingRule) DeepCopy() *GlobalForwardingRule {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalForwardingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleList) DeepCopyInto(out *GlobalForwardingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalForwardingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleList.
func (in *GlobalForwardingRuleList) DeepCopy() *GlobalForwardingRuleList {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalForwardingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleObservation) DeepCopyInto(out *GlobalForwardingRuleObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.LabelFingerprint != nil {
		in, out := &in.LabelFingerprint, &out.LabelFingerprint
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MetadataFiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionID != nil {
		in, out := &in.PscConnectionID, &out.PscConnectionID
		*out = new(string)
		**out = **in
	}
	if in.PscConnectionStatus != nil {
		in, out := &in.PscConnectionStatus, &out.PscConnectionStatus
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleObservation.
func (in *GlobalForwardingRuleObservation) DeepCopy() *GlobalForwardingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleParameters) DeepCopyInto(out *GlobalForwardingRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPAddressRef != nil {
		in, out := &in.IPAddressRef, &out.IPAddressRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.IPAddressSelector != nil {
		in, out := &in.IPAddressSelector, &out.IPAddressSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPProtocol != nil {
		in, out := &in.IPProtocol, &out.IPProtocol
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.LoadBalancingScheme != nil {
		in, out := &in.LoadBalancingScheme, &out.LoadBalancingScheme
		*out = new(string)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MetadataFiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(string)
		**out = **in
	}
	if in.NetworkRef != nil {
		in, out := &in.NetworkRef, &out.NetworkRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkSelector != nil {
		in, out := &in.NetworkSelector, &out.NetworkSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PortRange != nil {
		in, out := &in.PortRange, &out.PortRange
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectSelector != nil {
		in, out := &in.ProjectSelector, &out.ProjectSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.TargetRef != nil {
		in, out := &in.TargetRef, &out.TargetRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.TargetSelector != nil {
		in, out := &in.TargetSelector, &out.TargetSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleParameters.
func (in *GlobalForwardingRuleParameters) DeepCopy() *GlobalForwardingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleSpec) DeepCopyInto(out *GlobalForwardingRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleSpec.
func (in *GlobalForwardingRuleSpec) DeepCopy() *GlobalForwardingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalForwardingRuleStatus) DeepCopyInto(out *GlobalForwardingRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalForwardingRuleStatus.
func (in *GlobalForwardingRuleStatus) DeepCopy() *GlobalForwardingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalForwardingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionObservation) DeepCopyInto(out *HeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]ResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionObservation.
func (in *HeaderActionObservation) DeepCopy() *HeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionParameters) DeepCopyInto(out *HeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]ResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionParameters.
func (in *HeaderActionParameters) DeepCopy() *HeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *HeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionRequestHeadersToAddObservation.
func (in *HeaderActionRequestHeadersToAddObservation) DeepCopy() *HeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *HeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionRequestHeadersToAddParameters.
func (in *HeaderActionRequestHeadersToAddParameters) DeepCopy() *HeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *HeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionResponseHeadersToAddObservation.
func (in *HeaderActionResponseHeadersToAddObservation) DeepCopy() *HeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *HeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderActionResponseHeadersToAddParameters.
func (in *HeaderActionResponseHeadersToAddParameters) DeepCopy() *HeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesObservation) DeepCopyInto(out *HeaderMatchesObservation) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]RangeMatchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesObservation.
func (in *HeaderMatchesObservation) DeepCopy() *HeaderMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderMatchesParameters) DeepCopyInto(out *HeaderMatchesParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.InvertMatch != nil {
		in, out := &in.InvertMatch, &out.InvertMatch
		*out = new(bool)
		**out = **in
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RangeMatch != nil {
		in, out := &in.RangeMatch, &out.RangeMatch
		*out = make([]RangeMatchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
	if in.SuffixMatch != nil {
		in, out := &in.SuffixMatch, &out.SuffixMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderMatchesParameters.
func (in *HeaderMatchesParameters) DeepCopy() *HeaderMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRuleObservation) DeepCopyInto(out *HostRuleObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRuleObservation.
func (in *HostRuleObservation) DeepCopy() *HostRuleObservation {
	if in == nil {
		return nil
	}
	out := new(HostRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostRuleParameters) DeepCopyInto(out *HostRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Hosts != nil {
		in, out := &in.Hosts, &out.Hosts
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostRuleParameters.
func (in *HostRuleParameters) DeepCopy() *HostRuleParameters {
	if in == nil {
		return nil
	}
	out := new(HostRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersObservation) DeepCopyInto(out *MatchRulesMetadataFiltersObservation) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MetadataFiltersFilterLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersObservation.
func (in *MatchRulesMetadataFiltersObservation) DeepCopy() *MatchRulesMetadataFiltersObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesMetadataFiltersParameters) DeepCopyInto(out *MatchRulesMetadataFiltersParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]MetadataFiltersFilterLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesMetadataFiltersParameters.
func (in *MatchRulesMetadataFiltersParameters) DeepCopy() *MatchRulesMetadataFiltersParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesMetadataFiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesObservation) DeepCopyInto(out *MatchRulesObservation) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]HeaderMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MatchRulesMetadataFiltersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]QueryParameterMatchesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesObservation.
func (in *MatchRulesObservation) DeepCopy() *MatchRulesObservation {
	if in == nil {
		return nil
	}
	out := new(MatchRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchRulesParameters) DeepCopyInto(out *MatchRulesParameters) {
	*out = *in
	if in.FullPathMatch != nil {
		in, out := &in.FullPathMatch, &out.FullPathMatch
		*out = new(string)
		**out = **in
	}
	if in.HeaderMatches != nil {
		in, out := &in.HeaderMatches, &out.HeaderMatches
		*out = make([]HeaderMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IgnoreCase != nil {
		in, out := &in.IgnoreCase, &out.IgnoreCase
		*out = new(bool)
		**out = **in
	}
	if in.MetadataFilters != nil {
		in, out := &in.MetadataFilters, &out.MetadataFilters
		*out = make([]MatchRulesMetadataFiltersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrefixMatch != nil {
		in, out := &in.PrefixMatch, &out.PrefixMatch
		*out = new(string)
		**out = **in
	}
	if in.QueryParameterMatches != nil {
		in, out := &in.QueryParameterMatches, &out.QueryParameterMatches
		*out = make([]QueryParameterMatchesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchRulesParameters.
func (in *MatchRulesParameters) DeepCopy() *MatchRulesParameters {
	if in == nil {
		return nil
	}
	out := new(MatchRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersFilterLabelsObservation) DeepCopyInto(out *MetadataFiltersFilterLabelsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersFilterLabelsObservation.
func (in *MetadataFiltersFilterLabelsObservation) DeepCopy() *MetadataFiltersFilterLabelsObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersFilterLabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersFilterLabelsParameters) DeepCopyInto(out *MetadataFiltersFilterLabelsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersFilterLabelsParameters.
func (in *MetadataFiltersFilterLabelsParameters) DeepCopy() *MetadataFiltersFilterLabelsParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersFilterLabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersObservation) DeepCopyInto(out *MetadataFiltersObservation) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]FilterLabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersObservation.
func (in *MetadataFiltersObservation) DeepCopy() *MetadataFiltersObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataFiltersParameters) DeepCopyInto(out *MetadataFiltersParameters) {
	*out = *in
	if in.FilterLabels != nil {
		in, out := &in.FilterLabels, &out.FilterLabels
		*out = make([]FilterLabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FilterMatchCriteria != nil {
		in, out := &in.FilterMatchCriteria, &out.FilterMatchCriteria
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataFiltersParameters.
func (in *MetadataFiltersParameters) DeepCopy() *MetadataFiltersParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataFiltersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network) DeepCopyInto(out *Network) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network.
func (in *Network) DeepCopy() *Network {
	if in == nil {
		return nil
	}
	out := new(Network)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Network) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkList) DeepCopyInto(out *NetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Network, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkList.
func (in *NetworkList) DeepCopy() *NetworkList {
	if in == nil {
		return nil
	}
	out := new(NetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.AutoCreateSubnetworks != nil {
		in, out := &in.AutoCreateSubnetworks, &out.AutoCreateSubnetworks
		*out = new(bool)
		**out = **in
	}
	if in.DeleteDefaultRoutesOnCreate != nil {
		in, out := &in.DeleteDefaultRoutesOnCreate, &out.DeleteDefaultRoutesOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableUlaInternalIPv6 != nil {
		in, out := &in.EnableUlaInternalIPv6, &out.EnableUlaInternalIPv6
		*out = new(bool)
		**out = **in
	}
	if in.GatewayIPv4 != nil {
		in, out := &in.GatewayIPv4, &out.GatewayIPv4
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternalIPv6Range != nil {
		in, out := &in.InternalIPv6Range, &out.InternalIPv6Range
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingMode != nil {
		in, out := &in.RoutingMode, &out.RoutingMode
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.AutoCreateSubnetworks != nil {
		in, out := &in.AutoCreateSubnetworks, &out.AutoCreateSubnetworks
		*out = new(bool)
		**out = **in
	}
	if in.DeleteDefaultRoutesOnCreate != nil {
		in, out := &in.DeleteDefaultRoutesOnCreate, &out.DeleteDefaultRoutesOnCreate
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableUlaInternalIPv6 != nil {
		in, out := &in.EnableUlaInternalIPv6, &out.EnableUlaInternalIPv6
		*out = new(bool)
		**out = **in
	}
	if in.InternalIPv6Range != nil {
		in, out := &in.InternalIPv6Range, &out.InternalIPv6Range
		*out = new(string)
		**out = **in
	}
	if in.Mtu != nil {
		in, out := &in.Mtu, &out.Mtu
		*out = new(float64)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.RoutingMode != nil {
		in, out := &in.RoutingMode, &out.RoutingMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSpec) DeepCopyInto(out *NetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSpec.
func (in *NetworkSpec) DeepCopy() *NetworkSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkStatus) DeepCopyInto(out *NetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkStatus.
func (in *NetworkStatus) DeepCopy() *NetworkStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultURLRedirectObservation) DeepCopyInto(out *PathMatcherDefaultURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultURLRedirectObservation.
func (in *PathMatcherDefaultURLRedirectObservation) DeepCopy() *PathMatcherDefaultURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherDefaultURLRedirectParameters) DeepCopyInto(out *PathMatcherDefaultURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherDefaultURLRedirectParameters.
func (in *PathMatcherDefaultURLRedirectParameters) DeepCopy() *PathMatcherDefaultURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherDefaultURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherObservation) DeepCopyInto(out *PathMatcherObservation) {
	*out = *in
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]PathMatcherDefaultURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherObservation.
func (in *PathMatcherObservation) DeepCopy() *PathMatcherObservation {
	if in == nil {
		return nil
	}
	out := new(PathMatcherObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathMatcherParameters) DeepCopyInto(out *PathMatcherParameters) {
	*out = *in
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]PathMatcherDefaultURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PathRule != nil {
		in, out := &in.PathRule, &out.PathRule
		*out = make([]PathRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathMatcherParameters.
func (in *PathMatcherParameters) DeepCopy() *PathMatcherParameters {
	if in == nil {
		return nil
	}
	out := new(PathMatcherParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleObservation) DeepCopyInto(out *PathRuleObservation) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]URLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleObservation.
func (in *PathRuleObservation) DeepCopy() *PathRuleObservation {
	if in == nil {
		return nil
	}
	out := new(PathRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathRuleParameters) DeepCopyInto(out *PathRuleParameters) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]URLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathRuleParameters.
func (in *PathRuleParameters) DeepCopy() *PathRuleParameters {
	if in == nil {
		return nil
	}
	out := new(PathRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerTryTimeoutObservation) DeepCopyInto(out *PerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerTryTimeoutObservation.
func (in *PerTryTimeoutObservation) DeepCopy() *PerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(PerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PerTryTimeoutParameters) DeepCopyInto(out *PerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PerTryTimeoutParameters.
func (in *PerTryTimeoutParameters) DeepCopy() *PerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(PerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterMatchesObservation) DeepCopyInto(out *QueryParameterMatchesObservation) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterMatchesObservation.
func (in *QueryParameterMatchesObservation) DeepCopy() *QueryParameterMatchesObservation {
	if in == nil {
		return nil
	}
	out := new(QueryParameterMatchesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueryParameterMatchesParameters) DeepCopyInto(out *QueryParameterMatchesParameters) {
	*out = *in
	if in.ExactMatch != nil {
		in, out := &in.ExactMatch, &out.ExactMatch
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PresentMatch != nil {
		in, out := &in.PresentMatch, &out.PresentMatch
		*out = new(bool)
		**out = **in
	}
	if in.RegexMatch != nil {
		in, out := &in.RegexMatch, &out.RegexMatch
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueryParameterMatchesParameters.
func (in *QueryParameterMatchesParameters) DeepCopy() *QueryParameterMatchesParameters {
	if in == nil {
		return nil
	}
	out := new(QueryParameterMatchesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeMatchObservation) DeepCopyInto(out *RangeMatchObservation) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeMatchObservation.
func (in *RangeMatchObservation) DeepCopy() *RangeMatchObservation {
	if in == nil {
		return nil
	}
	out := new(RangeMatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RangeMatchParameters) DeepCopyInto(out *RangeMatchParameters) {
	*out = *in
	if in.RangeEnd != nil {
		in, out := &in.RangeEnd, &out.RangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.RangeStart != nil {
		in, out := &in.RangeStart, &out.RangeStart
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RangeMatchParameters.
func (in *RangeMatchParameters) DeepCopy() *RangeMatchParameters {
	if in == nil {
		return nil
	}
	out := new(RangeMatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificate) DeepCopyInto(out *RegionSSLCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificate.
func (in *RegionSSLCertificate) DeepCopy() *RegionSSLCertificate {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionSSLCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateList) DeepCopyInto(out *RegionSSLCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionSSLCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateList.
func (in *RegionSSLCertificateList) DeepCopy() *RegionSSLCertificateList {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionSSLCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateObservation) DeepCopyInto(out *RegionSSLCertificateObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateObservation.
func (in *RegionSSLCertificateObservation) DeepCopy() *RegionSSLCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateParameters) DeepCopyInto(out *RegionSSLCertificateParameters) {
	*out = *in
	out.CertificateSecretRef = in.CertificateSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateParameters.
func (in *RegionSSLCertificateParameters) DeepCopy() *RegionSSLCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateSpec) DeepCopyInto(out *RegionSSLCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateSpec.
func (in *RegionSSLCertificateSpec) DeepCopy() *RegionSSLCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionSSLCertificateStatus) DeepCopyInto(out *RegionSSLCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionSSLCertificateStatus.
func (in *RegionSSLCertificateStatus) DeepCopy() *RegionSSLCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(RegionSSLCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxy) DeepCopyInto(out *RegionTargetHTTPProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxy.
func (in *RegionTargetHTTPProxy) DeepCopy() *RegionTargetHTTPProxy {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyList) DeepCopyInto(out *RegionTargetHTTPProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionTargetHTTPProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyList.
func (in *RegionTargetHTTPProxyList) DeepCopy() *RegionTargetHTTPProxyList {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyObservation) DeepCopyInto(out *RegionTargetHTTPProxyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyObservation.
func (in *RegionTargetHTTPProxyObservation) DeepCopy() *RegionTargetHTTPProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyParameters) DeepCopyInto(out *RegionTargetHTTPProxyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyParameters.
func (in *RegionTargetHTTPProxyParameters) DeepCopy() *RegionTargetHTTPProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxySpec) DeepCopyInto(out *RegionTargetHTTPProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxySpec.
func (in *RegionTargetHTTPProxySpec) DeepCopy() *RegionTargetHTTPProxySpec {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPProxyStatus) DeepCopyInto(out *RegionTargetHTTPProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPProxyStatus.
func (in *RegionTargetHTTPProxyStatus) DeepCopy() *RegionTargetHTTPProxyStatus {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxy) DeepCopyInto(out *RegionTargetHTTPSProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxy.
func (in *RegionTargetHTTPSProxy) DeepCopy() *RegionTargetHTTPSProxy {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPSProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyList) DeepCopyInto(out *RegionTargetHTTPSProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionTargetHTTPSProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyList.
func (in *RegionTargetHTTPSProxyList) DeepCopy() *RegionTargetHTTPSProxyList {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionTargetHTTPSProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyObservation) DeepCopyInto(out *RegionTargetHTTPSProxyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyObservation.
func (in *RegionTargetHTTPSProxyObservation) DeepCopy() *RegionTargetHTTPSProxyObservation {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyParameters) DeepCopyInto(out *RegionTargetHTTPSProxyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
	if in.URLMapRef != nil {
		in, out := &in.URLMapRef, &out.URLMapRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLMapSelector != nil {
		in, out := &in.URLMapSelector, &out.URLMapSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyParameters.
func (in *RegionTargetHTTPSProxyParameters) DeepCopy() *RegionTargetHTTPSProxyParameters {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxySpec) DeepCopyInto(out *RegionTargetHTTPSProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxySpec.
func (in *RegionTargetHTTPSProxySpec) DeepCopy() *RegionTargetHTTPSProxySpec {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionTargetHTTPSProxyStatus) DeepCopyInto(out *RegionTargetHTTPSProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionTargetHTTPSProxyStatus.
func (in *RegionTargetHTTPSProxyStatus) DeepCopy() *RegionTargetHTTPSProxyStatus {
	if in == nil {
		return nil
	}
	out := new(RegionTargetHTTPSProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMap) DeepCopyInto(out *RegionURLMap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMap.
func (in *RegionURLMap) DeepCopy() *RegionURLMap {
	if in == nil {
		return nil
	}
	out := new(RegionURLMap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionURLMap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapList) DeepCopyInto(out *RegionURLMapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionURLMap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapList.
func (in *RegionURLMapList) DeepCopy() *RegionURLMapList {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionURLMapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapObservation) DeepCopyInto(out *RegionURLMapObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]DefaultRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]DefaultURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]HostRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MapID != nil {
		in, out := &in.MapID, &out.MapID
		*out = new(float64)
		**out = **in
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]PathMatcherObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]TestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapObservation.
func (in *RegionURLMapObservation) DeepCopy() *RegionURLMapObservation {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapParameters) DeepCopyInto(out *RegionURLMapParameters) {
	*out = *in
	if in.DefaultRouteAction != nil {
		in, out := &in.DefaultRouteAction, &out.DefaultRouteAction
		*out = make([]DefaultRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultService != nil {
		in, out := &in.DefaultService, &out.DefaultService
		*out = new(string)
		**out = **in
	}
	if in.DefaultURLRedirect != nil {
		in, out := &in.DefaultURLRedirect, &out.DefaultURLRedirect
		*out = make([]DefaultURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.HostRule != nil {
		in, out := &in.HostRule, &out.HostRule
		*out = make([]HostRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathMatcher != nil {
		in, out := &in.PathMatcher, &out.PathMatcher
		*out = make([]PathMatcherParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Test != nil {
		in, out := &in.Test, &out.Test
		*out = make([]TestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapParameters.
func (in *RegionURLMapParameters) DeepCopy() *RegionURLMapParameters {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapSpec) DeepCopyInto(out *RegionURLMapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapSpec.
func (in *RegionURLMapSpec) DeepCopy() *RegionURLMapSpec {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionURLMapStatus) DeepCopyInto(out *RegionURLMapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionURLMapStatus.
func (in *RegionURLMapStatus) DeepCopy() *RegionURLMapStatus {
	if in == nil {
		return nil
	}
	out := new(RegionURLMapStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddObservation) DeepCopyInto(out *RequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddObservation.
func (in *RequestHeadersToAddObservation) DeepCopy() *RequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestHeadersToAddParameters) DeepCopyInto(out *RequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestHeadersToAddParameters.
func (in *RequestHeadersToAddParameters) DeepCopy() *RequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMirrorPolicyObservation) DeepCopyInto(out *RequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMirrorPolicyObservation.
func (in *RequestMirrorPolicyObservation) DeepCopy() *RequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestMirrorPolicyParameters) DeepCopyInto(out *RequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestMirrorPolicyParameters.
func (in *RequestMirrorPolicyParameters) DeepCopy() *RequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeadersToAddObservation) DeepCopyInto(out *ResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeadersToAddObservation.
func (in *ResponseHeadersToAddObservation) DeepCopy() *ResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseHeadersToAddParameters) DeepCopyInto(out *ResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseHeadersToAddParameters.
func (in *ResponseHeadersToAddParameters) DeepCopy() *ResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyObservation) DeepCopyInto(out *RetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyObservation.
func (in *RetryPolicyObservation) DeepCopy() *RetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyParameters) DeepCopyInto(out *RetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]PerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyParameters.
func (in *RetryPolicyParameters) DeepCopy() *RetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *RetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyPerTryTimeoutObservation.
func (in *RetryPolicyPerTryTimeoutObservation) DeepCopy() *RetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *RetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetryPolicyPerTryTimeoutParameters.
func (in *RetryPolicyPerTryTimeoutParameters) DeepCopy() *RetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionCorsPolicyObservation) DeepCopyInto(out *RouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionCorsPolicyObservation.
func (in *RouteActionCorsPolicyObservation) DeepCopy() *RouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionCorsPolicyParameters) DeepCopyInto(out *RouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionCorsPolicyParameters.
func (in *RouteActionCorsPolicyParameters) DeepCopy() *RouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyAbortObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyAbortObservation) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyAbortObservation.
func (in *RouteActionFaultInjectionPolicyAbortObservation) DeepCopy() *RouteActionFaultInjectionPolicyAbortObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyAbortObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyAbortParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyAbortParameters) {
	*out = *in
	if in.HTTPStatus != nil {
		in, out := &in.HTTPStatus, &out.HTTPStatus
		*out = new(float64)
		**out = **in
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyAbortParameters.
func (in *RouteActionFaultInjectionPolicyAbortParameters) DeepCopy() *RouteActionFaultInjectionPolicyAbortParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyAbortParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayObservation) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FaultInjectionPolicyDelayFixedDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayObservation.
func (in *RouteActionFaultInjectionPolicyDelayObservation) DeepCopy() *RouteActionFaultInjectionPolicyDelayObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyDelayParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyDelayParameters) {
	*out = *in
	if in.FixedDelay != nil {
		in, out := &in.FixedDelay, &out.FixedDelay
		*out = make([]FaultInjectionPolicyDelayFixedDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Percentage != nil {
		in, out := &in.Percentage, &out.Percentage
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyDelayParameters.
func (in *RouteActionFaultInjectionPolicyDelayParameters) DeepCopy() *RouteActionFaultInjectionPolicyDelayParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyDelayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *RouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]FaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]FaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyObservation.
func (in *RouteActionFaultInjectionPolicyObservation) DeepCopy() *RouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *RouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]FaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]FaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionFaultInjectionPolicyParameters.
func (in *RouteActionFaultInjectionPolicyParameters) DeepCopy() *RouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionObservation) DeepCopyInto(out *RouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionObservation.
func (in *RouteActionObservation) DeepCopy() *RouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionParameters) DeepCopyInto(out *RouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionParameters.
func (in *RouteActionParameters) DeepCopy() *RouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *RouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRequestMirrorPolicyObservation.
func (in *RouteActionRequestMirrorPolicyObservation) DeepCopy() *RouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *RouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRequestMirrorPolicyParameters.
func (in *RouteActionRequestMirrorPolicyParameters) DeepCopy() *RouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyObservation) DeepCopyInto(out *RouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyObservation.
func (in *RouteActionRetryPolicyObservation) DeepCopy() *RouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyParameters) DeepCopyInto(out *RouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyParameters.
func (in *RouteActionRetryPolicyParameters) DeepCopy() *RouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyPerTryTimeoutObservation) DeepCopyInto(out *RouteActionRetryPolicyPerTryTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyPerTryTimeoutObservation.
func (in *RouteActionRetryPolicyPerTryTimeoutObservation) DeepCopy() *RouteActionRetryPolicyPerTryTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyPerTryTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionRetryPolicyPerTryTimeoutParameters) DeepCopyInto(out *RouteActionRetryPolicyPerTryTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionRetryPolicyPerTryTimeoutParameters.
func (in *RouteActionRetryPolicyPerTryTimeoutParameters) DeepCopy() *RouteActionRetryPolicyPerTryTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionRetryPolicyPerTryTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionTimeoutObservation) DeepCopyInto(out *RouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionTimeoutObservation.
func (in *RouteActionTimeoutObservation) DeepCopy() *RouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionTimeoutParameters) DeepCopyInto(out *RouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionTimeoutParameters.
func (in *RouteActionTimeoutParameters) DeepCopy() *RouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionURLRewriteObservation) DeepCopyInto(out *RouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionURLRewriteObservation.
func (in *RouteActionURLRewriteObservation) DeepCopy() *RouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionURLRewriteParameters) DeepCopyInto(out *RouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionURLRewriteParameters.
func (in *RouteActionURLRewriteParameters) DeepCopy() *RouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionObservation.
func (in *RouteActionWeightedBackendServicesHeaderActionObservation) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]WeightedBackendServicesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesHeaderActionParameters.
func (in *RouteActionWeightedBackendServicesHeaderActionParameters) DeepCopy() *RouteActionWeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesObservation) DeepCopyInto(out *RouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]WeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesObservation.
func (in *RouteActionWeightedBackendServicesObservation) DeepCopy() *RouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteActionWeightedBackendServicesParameters) DeepCopyInto(out *RouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]WeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteActionWeightedBackendServicesParameters.
func (in *RouteActionWeightedBackendServicesParameters) DeepCopy() *RouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionObservation) DeepCopyInto(out *RouteRulesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesHeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesHeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionObservation.
func (in *RouteRulesHeaderActionObservation) DeepCopy() *RouteRulesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionParameters) DeepCopyInto(out *RouteRulesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]RouteRulesHeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]RouteRulesHeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionParameters.
func (in *RouteRulesHeaderActionParameters) DeepCopy() *RouteRulesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *RouteRulesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionRequestHeadersToAddObservation.
func (in *RouteRulesHeaderActionRequestHeadersToAddObservation) DeepCopy() *RouteRulesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *RouteRulesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionRequestHeadersToAddParameters.
func (in *RouteRulesHeaderActionRequestHeadersToAddParameters) DeepCopy() *RouteRulesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *RouteRulesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionResponseHeadersToAddObservation.
func (in *RouteRulesHeaderActionResponseHeadersToAddObservation) DeepCopy() *RouteRulesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *RouteRulesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesHeaderActionResponseHeadersToAddParameters.
func (in *RouteRulesHeaderActionResponseHeadersToAddParameters) DeepCopy() *RouteRulesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesObservation) DeepCopyInto(out *RouteRulesObservation) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]MatchRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteRulesRouteActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]RouteRulesURLRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesObservation.
func (in *RouteRulesObservation) DeepCopy() *RouteRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesParameters) DeepCopyInto(out *RouteRulesParameters) {
	*out = *in
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteRulesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MatchRules != nil {
		in, out := &in.MatchRules, &out.MatchRules
		*out = make([]MatchRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.RouteAction != nil {
		in, out := &in.RouteAction, &out.RouteAction
		*out = make([]RouteRulesRouteActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.URLRedirect != nil {
		in, out := &in.URLRedirect, &out.URLRedirect
		*out = make([]RouteRulesURLRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesParameters.
func (in *RouteRulesParameters) DeepCopy() *RouteRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionCorsPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionCorsPolicyObservation) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionCorsPolicyObservation.
func (in *RouteRulesRouteActionCorsPolicyObservation) DeepCopy() *RouteRulesRouteActionCorsPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionCorsPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionCorsPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionCorsPolicyParameters) {
	*out = *in
	if in.AllowCredentials != nil {
		in, out := &in.AllowCredentials, &out.AllowCredentials
		*out = new(bool)
		**out = **in
	}
	if in.AllowHeaders != nil {
		in, out := &in.AllowHeaders, &out.AllowHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowMethods != nil {
		in, out := &in.AllowMethods, &out.AllowMethods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOriginRegexes != nil {
		in, out := &in.AllowOriginRegexes, &out.AllowOriginRegexes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AllowOrigins != nil {
		in, out := &in.AllowOrigins, &out.AllowOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ExposeHeaders != nil {
		in, out := &in.ExposeHeaders, &out.ExposeHeaders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionCorsPolicyParameters.
func (in *RouteRulesRouteActionCorsPolicyParameters) DeepCopy() *RouteRulesRouteActionCorsPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionCorsPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyObservation) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteActionFaultInjectionPolicyAbortObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteActionFaultInjectionPolicyDelayObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyObservation.
func (in *RouteRulesRouteActionFaultInjectionPolicyObservation) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionFaultInjectionPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionFaultInjectionPolicyParameters) {
	*out = *in
	if in.Abort != nil {
		in, out := &in.Abort, &out.Abort
		*out = make([]RouteActionFaultInjectionPolicyAbortParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = make([]RouteActionFaultInjectionPolicyDelayParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionFaultInjectionPolicyParameters.
func (in *RouteRulesRouteActionFaultInjectionPolicyParameters) DeepCopy() *RouteRulesRouteActionFaultInjectionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionFaultInjectionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionObservation) DeepCopyInto(out *RouteRulesRouteActionObservation) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteRulesRouteActionCorsPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteRulesRouteActionRequestMirrorPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteRulesRouteActionRetryPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteRulesRouteActionTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteRulesRouteActionURLRewriteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteRulesRouteActionWeightedBackendServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionObservation.
func (in *RouteRulesRouteActionObservation) DeepCopy() *RouteRulesRouteActionObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionParameters) DeepCopyInto(out *RouteRulesRouteActionParameters) {
	*out = *in
	if in.CorsPolicy != nil {
		in, out := &in.CorsPolicy, &out.CorsPolicy
		*out = make([]RouteRulesRouteActionCorsPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FaultInjectionPolicy != nil {
		in, out := &in.FaultInjectionPolicy, &out.FaultInjectionPolicy
		*out = make([]RouteRulesRouteActionFaultInjectionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestMirrorPolicy != nil {
		in, out := &in.RequestMirrorPolicy, &out.RequestMirrorPolicy
		*out = make([]RouteRulesRouteActionRequestMirrorPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryPolicy != nil {
		in, out := &in.RetryPolicy, &out.RetryPolicy
		*out = make([]RouteRulesRouteActionRetryPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = make([]RouteRulesRouteActionTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URLRewrite != nil {
		in, out := &in.URLRewrite, &out.URLRewrite
		*out = make([]RouteRulesRouteActionURLRewriteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WeightedBackendServices != nil {
		in, out := &in.WeightedBackendServices, &out.WeightedBackendServices
		*out = make([]RouteRulesRouteActionWeightedBackendServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionParameters.
func (in *RouteRulesRouteActionParameters) DeepCopy() *RouteRulesRouteActionParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRequestMirrorPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionRequestMirrorPolicyObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRequestMirrorPolicyObservation.
func (in *RouteRulesRouteActionRequestMirrorPolicyObservation) DeepCopy() *RouteRulesRouteActionRequestMirrorPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRequestMirrorPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRequestMirrorPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionRequestMirrorPolicyParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRequestMirrorPolicyParameters.
func (in *RouteRulesRouteActionRequestMirrorPolicyParameters) DeepCopy() *RouteRulesRouteActionRequestMirrorPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRequestMirrorPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyObservation) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyObservation) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteActionRetryPolicyPerTryTimeoutObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyObservation.
func (in *RouteRulesRouteActionRetryPolicyObservation) DeepCopy() *RouteRulesRouteActionRetryPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionRetryPolicyParameters) DeepCopyInto(out *RouteRulesRouteActionRetryPolicyParameters) {
	*out = *in
	if in.NumRetries != nil {
		in, out := &in.NumRetries, &out.NumRetries
		*out = new(float64)
		**out = **in
	}
	if in.PerTryTimeout != nil {
		in, out := &in.PerTryTimeout, &out.PerTryTimeout
		*out = make([]RouteActionRetryPolicyPerTryTimeoutParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetryConditions != nil {
		in, out := &in.RetryConditions, &out.RetryConditions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionRetryPolicyParameters.
func (in *RouteRulesRouteActionRetryPolicyParameters) DeepCopy() *RouteRulesRouteActionRetryPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionRetryPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionTimeoutObservation) DeepCopyInto(out *RouteRulesRouteActionTimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionTimeoutObservation.
func (in *RouteRulesRouteActionTimeoutObservation) DeepCopy() *RouteRulesRouteActionTimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionTimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionTimeoutParameters) DeepCopyInto(out *RouteRulesRouteActionTimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionTimeoutParameters.
func (in *RouteRulesRouteActionTimeoutParameters) DeepCopy() *RouteRulesRouteActionTimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionTimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionURLRewriteObservation) DeepCopyInto(out *RouteRulesRouteActionURLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionURLRewriteObservation.
func (in *RouteRulesRouteActionURLRewriteObservation) DeepCopy() *RouteRulesRouteActionURLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionURLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionURLRewriteParameters) DeepCopyInto(out *RouteRulesRouteActionURLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionURLRewriteParameters.
func (in *RouteRulesRouteActionURLRewriteParameters) DeepCopy() *RouteRulesRouteActionURLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionURLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesObservation) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteActionWeightedBackendServicesHeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesObservation.
func (in *RouteRulesRouteActionWeightedBackendServicesObservation) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesRouteActionWeightedBackendServicesParameters) DeepCopyInto(out *RouteRulesRouteActionWeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]RouteActionWeightedBackendServicesHeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesRouteActionWeightedBackendServicesParameters.
func (in *RouteRulesRouteActionWeightedBackendServicesParameters) DeepCopy() *RouteRulesRouteActionWeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesRouteActionWeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesURLRedirectObservation) DeepCopyInto(out *RouteRulesURLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesURLRedirectObservation.
func (in *RouteRulesURLRedirectObservation) DeepCopy() *RouteRulesURLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesURLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesURLRedirectParameters) DeepCopyInto(out *RouteRulesURLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesURLRedirectParameters.
func (in *RouteRulesURLRedirectParameters) DeepCopy() *RouteRulesURLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesURLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificate) DeepCopyInto(out *SSLCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificate.
func (in *SSLCertificate) DeepCopy() *SSLCertificate {
	if in == nil {
		return nil
	}
	out := new(SSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateList) DeepCopyInto(out *SSLCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SSLCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateList.
func (in *SSLCertificateList) DeepCopy() *SSLCertificateList {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SSLCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateObservation) DeepCopyInto(out *SSLCertificateObservation) {
	*out = *in
	if in.CertificateID != nil {
		in, out := &in.CertificateID, &out.CertificateID
		*out = new(float64)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateObservation.
func (in *SSLCertificateObservation) DeepCopy() *SSLCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateParameters) DeepCopyInto(out *SSLCertificateParameters) {
	*out = *in
	out.CertificateSecretRef = in.CertificateSecretRef
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	out.PrivateKeySecretRef = in.PrivateKeySecretRef
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateParameters.
func (in *SSLCertificateParameters) DeepCopy() *SSLCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateSpec) DeepCopyInto(out *SSLCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateSpec.
func (in *SSLCertificateSpec) DeepCopy() *SSLCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificateStatus) DeepCopyInto(out *SSLCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificateStatus.
func (in *SSLCertificateStatus) DeepCopy() *SSLCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(SSLCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxy) DeepCopyInto(out *TargetHTTPProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxy.
func (in *TargetHTTPProxy) DeepCopy() *TargetHTTPProxy {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyList) DeepCopyInto(out *TargetHTTPProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetHTTPProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyList.
func (in *TargetHTTPProxyList) DeepCopy() *TargetHTTPProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyObservation) DeepCopyInto(out *TargetHTTPProxyObservation) {
	*out = *in
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyObservation.
func (in *TargetHTTPProxyObservation) DeepCopy() *TargetHTTPProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyParameters) DeepCopyInto(out *TargetHTTPProxyParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyParameters.
func (in *TargetHTTPProxyParameters) DeepCopy() *TargetHTTPProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxySpec) DeepCopyInto(out *TargetHTTPProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxySpec.
func (in *TargetHTTPProxySpec) DeepCopy() *TargetHTTPProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPProxyStatus) DeepCopyInto(out *TargetHTTPProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPProxyStatus.
func (in *TargetHTTPProxyStatus) DeepCopy() *TargetHTTPProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxy) DeepCopyInto(out *TargetHTTPSProxy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxy.
func (in *TargetHTTPSProxy) DeepCopy() *TargetHTTPSProxy {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPSProxy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyList) DeepCopyInto(out *TargetHTTPSProxyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TargetHTTPSProxy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyList.
func (in *TargetHTTPSProxyList) DeepCopy() *TargetHTTPSProxyList {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TargetHTTPSProxyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyObservation) DeepCopyInto(out *TargetHTTPSProxyObservation) {
	*out = *in
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.CreationTimestamp != nil {
		in, out := &in.CreationTimestamp, &out.CreationTimestamp
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.ProxyID != nil {
		in, out := &in.ProxyID, &out.ProxyID
		*out = new(float64)
		**out = **in
	}
	if in.QuicOverride != nil {
		in, out := &in.QuicOverride, &out.QuicOverride
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.SelfLink != nil {
		in, out := &in.SelfLink, &out.SelfLink
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyObservation.
func (in *TargetHTTPSProxyObservation) DeepCopy() *TargetHTTPSProxyObservation {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyParameters) DeepCopyInto(out *TargetHTTPSProxyParameters) {
	*out = *in
	if in.CertificateMap != nil {
		in, out := &in.CertificateMap, &out.CertificateMap
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(string)
		**out = **in
	}
	if in.ProxyBind != nil {
		in, out := &in.ProxyBind, &out.ProxyBind
		*out = new(bool)
		**out = **in
	}
	if in.QuicOverride != nil {
		in, out := &in.QuicOverride, &out.QuicOverride
		*out = new(string)
		**out = **in
	}
	if in.SSLCertificates != nil {
		in, out := &in.SSLCertificates, &out.SSLCertificates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSLCertificatesRefs != nil {
		in, out := &in.SSLCertificatesRefs, &out.SSLCertificatesRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SSLCertificatesSelector != nil {
		in, out := &in.SSLCertificatesSelector, &out.SSLCertificatesSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SSLPolicy != nil {
		in, out := &in.SSLPolicy, &out.SSLPolicy
		*out = new(string)
		**out = **in
	}
	if in.URLMap != nil {
		in, out := &in.URLMap, &out.URLMap
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyParameters.
func (in *TargetHTTPSProxyParameters) DeepCopy() *TargetHTTPSProxyParameters {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxySpec) DeepCopyInto(out *TargetHTTPSProxySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxySpec.
func (in *TargetHTTPSProxySpec) DeepCopy() *TargetHTTPSProxySpec {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetHTTPSProxyStatus) DeepCopyInto(out *TargetHTTPSProxyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetHTTPSProxyStatus.
func (in *TargetHTTPSProxyStatus) DeepCopy() *TargetHTTPSProxyStatus {
	if in == nil {
		return nil
	}
	out := new(TargetHTTPSProxyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestObservation) DeepCopyInto(out *TestObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestObservation.
func (in *TestObservation) DeepCopy() *TestObservation {
	if in == nil {
		return nil
	}
	out := new(TestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TestParameters) DeepCopyInto(out *TestParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TestParameters.
func (in *TestParameters) DeepCopy() *TestParameters {
	if in == nil {
		return nil
	}
	out := new(TestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeoutObservation) DeepCopyInto(out *TimeoutObservation) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeoutObservation.
func (in *TimeoutObservation) DeepCopy() *TimeoutObservation {
	if in == nil {
		return nil
	}
	out := new(TimeoutObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeoutParameters) DeepCopyInto(out *TimeoutParameters) {
	*out = *in
	if in.Nanos != nil {
		in, out := &in.Nanos, &out.Nanos
		*out = new(float64)
		**out = **in
	}
	if in.Seconds != nil {
		in, out := &in.Seconds, &out.Seconds
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeoutParameters.
func (in *TimeoutParameters) DeepCopy() *TimeoutParameters {
	if in == nil {
		return nil
	}
	out := new(TimeoutParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectObservation) DeepCopyInto(out *URLRedirectObservation) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectObservation.
func (in *URLRedirectObservation) DeepCopy() *URLRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(URLRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRedirectParameters) DeepCopyInto(out *URLRedirectParameters) {
	*out = *in
	if in.HTTPSRedirect != nil {
		in, out := &in.HTTPSRedirect, &out.HTTPSRedirect
		*out = new(bool)
		**out = **in
	}
	if in.HostRedirect != nil {
		in, out := &in.HostRedirect, &out.HostRedirect
		*out = new(string)
		**out = **in
	}
	if in.PathRedirect != nil {
		in, out := &in.PathRedirect, &out.PathRedirect
		*out = new(string)
		**out = **in
	}
	if in.PrefixRedirect != nil {
		in, out := &in.PrefixRedirect, &out.PrefixRedirect
		*out = new(string)
		**out = **in
	}
	if in.RedirectResponseCode != nil {
		in, out := &in.RedirectResponseCode, &out.RedirectResponseCode
		*out = new(string)
		**out = **in
	}
	if in.StripQuery != nil {
		in, out := &in.StripQuery, &out.StripQuery
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRedirectParameters.
func (in *URLRedirectParameters) DeepCopy() *URLRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(URLRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteObservation) DeepCopyInto(out *URLRewriteObservation) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteObservation.
func (in *URLRewriteObservation) DeepCopy() *URLRewriteObservation {
	if in == nil {
		return nil
	}
	out := new(URLRewriteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLRewriteParameters) DeepCopyInto(out *URLRewriteParameters) {
	*out = *in
	if in.HostRewrite != nil {
		in, out := &in.HostRewrite, &out.HostRewrite
		*out = new(string)
		**out = **in
	}
	if in.PathPrefixRewrite != nil {
		in, out := &in.PathPrefixRewrite, &out.PathPrefixRewrite
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLRewriteParameters.
func (in *URLRewriteParameters) DeepCopy() *URLRewriteParameters {
	if in == nil {
		return nil
	}
	out := new(URLRewriteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionObservation) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]HeaderActionRequestHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]HeaderActionResponseHeadersToAddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionObservation.
func (in *WeightedBackendServicesHeaderActionObservation) DeepCopy() *WeightedBackendServicesHeaderActionObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionParameters) {
	*out = *in
	if in.RequestHeadersToAdd != nil {
		in, out := &in.RequestHeadersToAdd, &out.RequestHeadersToAdd
		*out = make([]HeaderActionRequestHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RequestHeadersToRemove != nil {
		in, out := &in.RequestHeadersToRemove, &out.RequestHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseHeadersToAdd != nil {
		in, out := &in.ResponseHeadersToAdd, &out.ResponseHeadersToAdd
		*out = make([]HeaderActionResponseHeadersToAddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResponseHeadersToRemove != nil {
		in, out := &in.ResponseHeadersToRemove, &out.ResponseHeadersToRemove
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionParameters.
func (in *WeightedBackendServicesHeaderActionParameters) DeepCopy() *WeightedBackendServicesHeaderActionParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionRequestHeadersToAddObservation.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation) DeepCopy() *WeightedBackendServicesHeaderActionRequestHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionRequestHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionRequestHeadersToAddParameters.
func (in *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters) DeepCopy() *WeightedBackendServicesHeaderActionRequestHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionRequestHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopyInto(out *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionResponseHeadersToAddObservation.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation) DeepCopy() *WeightedBackendServicesHeaderActionResponseHeadersToAddObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionResponseHeadersToAddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopyInto(out *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) {
	*out = *in
	if in.HeaderName != nil {
		in, out := &in.HeaderName, &out.HeaderName
		*out = new(string)
		**out = **in
	}
	if in.HeaderValue != nil {
		in, out := &in.HeaderValue, &out.HeaderValue
		*out = new(string)
		**out = **in
	}
	if in.Replace != nil {
		in, out := &in.Replace, &out.Replace
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesHeaderActionResponseHeadersToAddParameters.
func (in *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters) DeepCopy() *WeightedBackendServicesHeaderActionResponseHeadersToAddParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesHeaderActionResponseHeadersToAddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesObservation) DeepCopyInto(out *WeightedBackendServicesObservation) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]HeaderActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesObservation.
func (in *WeightedBackendServicesObservation) DeepCopy() *WeightedBackendServicesObservation {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WeightedBackendServicesParameters) DeepCopyInto(out *WeightedBackendServicesParameters) {
	*out = *in
	if in.BackendService != nil {
		in, out := &in.BackendService, &out.BackendService
		*out = new(string)
		**out = **in
	}
	if in.HeaderAction != nil {
		in, out := &in.HeaderAction, &out.HeaderAction
		*out = make([]HeaderActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WeightedBackendServicesParameters.
func (in *WeightedBackendServicesParameters) DeepCopy() *WeightedBackendServicesParameters {
	if in == nil {
		return nil
	}
	out := new(WeightedBackendServicesParameters)
	in.DeepCopyInto(out)
	return out
}
